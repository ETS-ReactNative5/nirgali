'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.Button = Button;
exports.LinkButton = LinkButton;
exports.CheckboxButton = CheckboxButton;
exports.RadioButton = RadioButton;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _inputButton = require('./inputButton');

var _inputButton2 = _interopRequireDefault(_inputButton);

var _helper = require('./helper');

require('./styles.css');

var _styles = {
  'groupClassName': 'entur-button-group',
  'rootClassName': 'entur-button',
  'entur-button': 'entur-button',
  'entur-button--has-focus': 'entur-button--has-focus',
  'entur-button--disabled': 'entur-button--disabled',
  'entur-button--size-md': 'entur-button--size-md',
  'entur-button--width-square': 'entur-button--width-square',
  'entur-button--size-lg': 'entur-button--size-lg',
  'entur-button--width-sm': 'entur-button--width-sm',
  'entur-button--width-md': 'entur-button--width-md',
  'entur-button--width-lg': 'entur-button--width-lg',
  'entur-button--width-fluid': 'entur-button--width-fluid',
  'entur-button--variant-primary': 'entur-button--variant-primary',
  'entur-button--active': 'entur-button--active',
  'entur-button--variant-secondary': 'entur-button--variant-secondary',
  'entur-button--variant-success': 'entur-button--variant-success',
  'entur-button--variant-negative': 'entur-button--variant-negative',
  'entur-button--loading': 'entur-button--loading',
  'entur-button__loading-spinner': 'entur-button__loading-spinner'
};

var _loadingSpinner = require('../loadingSpinner');

var _loadingSpinner2 = _interopRequireDefault(_loadingSpinner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var propTypes = {
  className: _propTypes2.default.string,
  children: _propTypes2.default.node.isRequired,
  disabled: _propTypes2.default.bool,
  variant: _propTypes2.default.oneOf(['primary', 'secondary', 'success', 'negative']),
  size: _propTypes2.default.oneOf(['md', 'lg']).isRequired,
  width: _propTypes2.default.oneOf(['md', 'lg', 'fluid', 'square']),
  active: _propTypes2.default.bool,
  loading: _propTypes2.default.bool,
  refCallback: _propTypes2.default.func
};

var defaultProps = {
  variant: 'primary',
  size: 'md',
  loading: false
};

function Button(_ref) {
  var className = _ref.className,
      children = _ref.children,
      variant = _ref.variant,
      size = _ref.size,
      width = _ref.width,
      active = _ref.active,
      refCallback = _ref.refCallback,
      loading = _ref.loading,
      rest = _objectWithoutProperties(_ref, ['className', 'children', 'variant', 'size', 'width', 'active', 'refCallback', 'loading']);

  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {
    className: className, variant: variant, size: size, width: width, active: active, loading: loading
  });

  return _react2.default.createElement(
    'button',
    _extends({}, rest, { ref: refCallback, className: classNames }),
    children,
    loading && _react2.default.createElement(_loadingSpinner2.default, { className: _styles.rootClassName + '__loading-spinner', variant: variant })
  );
}

Button.propTypes = propTypes;
Button.defaultProps = defaultProps;

function LinkButton(_ref2) {
  var className = _ref2.className,
      children = _ref2.children,
      variant = _ref2.variant,
      size = _ref2.size,
      width = _ref2.width,
      active = _ref2.active,
      refCallback = _ref2.refCallback,
      loading = _ref2.loading,
      rest = _objectWithoutProperties(_ref2, ['className', 'children', 'variant', 'size', 'width', 'active', 'refCallback', 'loading']);

  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {
    className: className, variant: variant, size: size, width: width, active: active
  });

  return _react2.default.createElement(
    'a',
    _extends({}, rest, { ref: refCallback, className: classNames }),
    children
  );
}

LinkButton.propTypes = propTypes;
LinkButton.defaultProps = defaultProps;

function CheckboxButton(_ref3) {
  var className = _ref3.className,
      children = _ref3.children,
      variant = _ref3.variant,
      size = _ref3.size,
      width = _ref3.width,
      active = _ref3.active,
      disabled = _ref3.disabled,
      loading = _ref3.loading,
      rest = _objectWithoutProperties(_ref3, ['className', 'children', 'variant', 'size', 'width', 'active', 'disabled', 'loading']);

  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {
    className: className, variant: variant, size: size, width: width, active: active, disabled: disabled
  });

  return _react2.default.createElement(
    _inputButton2.default,
    _extends({}, rest, {
      className: classNames,
      focusClassName: (0, _helper.getFocusClassName)(_styles.rootClassName),
      type: 'checkbox',
      checked: active,
      disabled: disabled
    }),
    children
  );
}

CheckboxButton.propTypes = propTypes;
CheckboxButton.defaultProps = defaultProps;

function RadioButton(_ref4) {
  var className = _ref4.className,
      children = _ref4.children,
      variant = _ref4.variant,
      size = _ref4.size,
      width = _ref4.width,
      active = _ref4.active,
      disabled = _ref4.disabled,
      loading = _ref4.loading,
      rest = _objectWithoutProperties(_ref4, ['className', 'children', 'variant', 'size', 'width', 'active', 'disabled', 'loading']);

  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {
    className: className, variant: variant, size: size, width: width, active: active, disabled: disabled
  });

  return _react2.default.createElement(
    _inputButton2.default,
    _extends({}, rest, {
      className: classNames,
      focusClassName: (0, _helper.getFocusClassName)(_styles.rootClassName),
      type: 'radio',
      checked: active,
      disabled: disabled
    }),
    children
  );
}

RadioButton.propTypes = propTypes;
RadioButton.defaultProps = defaultProps;
Button.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Button',
  'props': {
    'variant': {
      'defaultValue': {
        'value': '\'primary\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'primary\'',
          'computed': false
        }, {
          'value': '\'secondary\'',
          'computed': false
        }, {
          'value': '\'success\'',
          'computed': false
        }, {
          'value': '\'negative\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'size': {
      'defaultValue': {
        'value': '\'md\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'loading': {
      'defaultValue': {
        'value': 'false',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'children': {
      'type': {
        'name': 'node'
      },
      'required': true,
      'description': ''
    },
    'disabled': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'width': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }, {
          'value': '\'fluid\'',
          'computed': false
        }, {
          'value': '\'square\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'active': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'refCallback': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    }
  }
};
LinkButton.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'LinkButton',
  'props': {
    'variant': {
      'defaultValue': {
        'value': '\'primary\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'primary\'',
          'computed': false
        }, {
          'value': '\'secondary\'',
          'computed': false
        }, {
          'value': '\'success\'',
          'computed': false
        }, {
          'value': '\'negative\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'size': {
      'defaultValue': {
        'value': '\'md\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'loading': {
      'defaultValue': {
        'value': 'false',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'children': {
      'type': {
        'name': 'node'
      },
      'required': true,
      'description': ''
    },
    'disabled': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'width': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }, {
          'value': '\'fluid\'',
          'computed': false
        }, {
          'value': '\'square\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'active': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'refCallback': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    }
  }
};
CheckboxButton.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'CheckboxButton',
  'props': {
    'variant': {
      'defaultValue': {
        'value': '\'primary\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'primary\'',
          'computed': false
        }, {
          'value': '\'secondary\'',
          'computed': false
        }, {
          'value': '\'success\'',
          'computed': false
        }, {
          'value': '\'negative\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'size': {
      'defaultValue': {
        'value': '\'md\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'loading': {
      'defaultValue': {
        'value': 'false',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'children': {
      'type': {
        'name': 'node'
      },
      'required': true,
      'description': ''
    },
    'disabled': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'width': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }, {
          'value': '\'fluid\'',
          'computed': false
        }, {
          'value': '\'square\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'active': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'refCallback': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    }
  }
};
RadioButton.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'RadioButton',
  'props': {
    'variant': {
      'defaultValue': {
        'value': '\'primary\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'primary\'',
          'computed': false
        }, {
          'value': '\'secondary\'',
          'computed': false
        }, {
          'value': '\'success\'',
          'computed': false
        }, {
          'value': '\'negative\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'size': {
      'defaultValue': {
        'value': '\'md\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'loading': {
      'defaultValue': {
        'value': 'false',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'children': {
      'type': {
        'name': 'node'
      },
      'required': true,
      'description': ''
    },
    'disabled': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'width': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }, {
          'value': '\'fluid\'',
          'computed': false
        }, {
          'value': '\'square\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'active': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'refCallback': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    }
  }
};