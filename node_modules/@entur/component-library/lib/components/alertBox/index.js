'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.AlertBox = AlertBox;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _error = require('../icons/ui/error');

var _error2 = _interopRequireDefault(_error);

var _exclamation = require('../icons/ui/exclamation');

var _exclamation2 = _interopRequireDefault(_exclamation);

var _success = require('../icons/ui/success');

var _success2 = _interopRequireDefault(_success);

var _info = require('../icons/ui/info');

var _info2 = _interopRequireDefault(_info);

var _close = require('../icons/ui/close');

var _close2 = _interopRequireDefault(_close);

var _constants = require('../../utils/constants');

require('./style.css');

var _style = {
  'rootClassName': 'entur-alert-box',
  'entur-alert-box': 'entur-alert-box',
  'entur-alert-box__icon': 'entur-alert-box__icon',
  'entur-alert-box__content': 'entur-alert-box__content',
  'entur-alert-box__close-button': 'entur-alert-box__close-button',
  'entur-alert-box__title': 'entur-alert-box__title',
  'entur-alert-box--level-warning': 'entur-alert-box--level-warning',
  'entur-alert-box--level-success': 'entur-alert-box--level-success',
  'entur-alert-box--level-error': 'entur-alert-box--level-error',
  'entur-alert-box--level-info': 'entur-alert-box--level-info',
  'entur-alert-box--size-small': 'entur-alert-box--size-small',
  'entur-alert-box--size-medium': 'entur-alert-box--size-medium',
  'entur-alert-box--size-large': 'entur-alert-box--size-large',
  'entur-alert-box__message': 'entur-alert-box__message'
};

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function getIcon(level, size) {
  var iconSize = size === 'large' ? { height: 40, width: 40 } : undefined;

  switch (level) {
    case 'success':
      return _react2.default.createElement(_success2.default, _extends({ backgroundColor: _constants.COLORS.DARK_MINT }, iconSize));
    case 'error':
      return _react2.default.createElement(_error2.default, _extends({ backgroundColor: _constants.COLORS.LAVA }, iconSize));
    case 'warning':
      return _react2.default.createElement(_exclamation2.default, _extends({ backgroundColor: _constants.COLORS.BLUE }, iconSize));
    case 'info':
      return _react2.default.createElement(_info2.default, _extends({ backgroundColor: _constants.COLORS.BLUE }, iconSize));
  }
}

function AlertBox(_ref) {
  var level = _ref.level,
      title = _ref.title,
      children = _ref.children,
      size = _ref.size,
      className = _ref.className,
      icon = _ref.icon,
      onClose = _ref.onClose,
      rest = _objectWithoutProperties(_ref, ['level', 'title', 'children', 'size', 'className', 'icon', 'onClose']);

  var classNames = (0, _classnames2.default)(_style.rootClassName, _style.rootClassName + '--level-' + level, _style.rootClassName + '--size-' + size, className);

  return _react2.default.createElement(
    'div',
    _extends({ className: classNames }, rest),
    _react2.default.createElement(
      'div',
      { className: _style.rootClassName + '__icon' },
      icon || getIcon(level, size)
    ),
    _react2.default.createElement(
      'div',
      { className: _style.rootClassName + '__content' },
      title && _react2.default.createElement(
        'div',
        { className: _style.rootClassName + '__title' },
        title
      ),
      _react2.default.createElement(
        'div',
        { className: _style.rootClassName + '__message' },
        children
      )
    ),
    onClose && _react2.default.createElement(
      'button',
      { className: _style.rootClassName + '__close-button', onClick: onClose },
      _react2.default.createElement(_close2.default, null)
    )
  );
}

AlertBox.propTypes = {
  icon: _propTypes2.default.node,
  children: _propTypes2.default.node,
  level: _propTypes2.default.oneOf(['success', 'error', 'warning', 'info']),
  title: _propTypes2.default.string,
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  className: _propTypes2.default.string,
  onClose: _propTypes2.default.func
};

AlertBox.defaultProps = {
  level: 'info',
  size: 'medium'
};
AlertBox.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'AlertBox',
  'props': {
    'level': {
      'defaultValue': {
        'value': '\'info\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'success\'',
          'computed': false
        }, {
          'value': '\'error\'',
          'computed': false
        }, {
          'value': '\'warning\'',
          'computed': false
        }, {
          'value': '\'info\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'size': {
      'defaultValue': {
        'value': '\'medium\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'small\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'icon': {
      'type': {
        'name': 'node'
      },
      'required': false,
      'description': ''
    },
    'children': {
      'type': {
        'name': 'node'
      },
      'required': false,
      'description': ''
    },
    'title': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'onClose': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    }
  }
};