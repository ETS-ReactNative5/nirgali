'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActiveContext = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.Menu = Menu;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

require('./styles.css');

var _styles = {
  'itemClassName': 'entur-menu-item',
  'listClassName': 'entur-menu-list',
  'rootClassName': 'entur-menu',
  'entur-menu': 'entur-menu',
  'entur-menu-list': 'entur-menu-list',
  'entur-menu-item': 'entur-menu-item',
  'entur-menu-item__inner': 'entur-menu-item__inner',
  'entur-menu-item--nested': 'entur-menu-item--nested',
  'entur-menu-item--active': 'entur-menu-item--active',
  'entur-menu-item--disabled': 'entur-menu-item--disabled'
};

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var ActiveContext = exports.ActiveContext = (0, _react.createContext)();

function cloneChildren(children, getPropsUpdates) {
  return _react2.default.Children.toArray(children).map(function (child) {
    return _react2.default.cloneElement(child, getPropsUpdates(child));
  });
}

function Menu(_ref) {
  var active = _ref.active,
      onItemSelected = _ref.onItemSelected,
      children = _ref.children,
      refCallback = _ref.refCallback,
      rest = _objectWithoutProperties(_ref, ['active', 'onItemSelected', 'children', 'refCallback']);

  var menuItems = onItemSelected ? cloneChildren(children, function (child) {
    return { onClick: function onClick() {
        return onItemSelected(child.props.id);
      } };
  }) : children;

  return _react2.default.createElement(
    'div',
    _extends({}, rest, { ref: refCallback, className: _styles.rootClassName }),
    _react2.default.createElement(
      'ul',
      { className: _styles.listClassName },
      active ? _react2.default.createElement(
        ActiveContext.Provider,
        { value: active },
        menuItems
      ) : menuItems
    )
  );
}

Menu.propTypes = {
  children: _propTypes2.default.node.isRequired,
  active: _propTypes2.default.string,
  onItemSelected: _propTypes2.default.func,
  refCallback: _propTypes2.default.func
};
Menu.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Menu',
  'props': {
    'children': {
      'type': {
        'name': 'node'
      },
      'required': true,
      'description': ''
    },
    'active': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'onItemSelected': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    },
    'refCallback': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    }
  }
};