'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Warning(_ref) {
  var _ref$backgroundColor = _ref.backgroundColor,
      backgroundColor = _ref$backgroundColor === undefined ? 'currentColor' : _ref$backgroundColor,
      _ref$color = _ref.color,
      color = _ref$color === undefined ? '#FFF' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['backgroundColor', 'color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: backgroundColor,
      d: 'M15.05 13.405L8.718 1.53a1 1 0 0 0-1.765 0L.619 13.405a1 1 0 0 0 .883 1.47h12.667a1 1 0 0 0 .882-1.47z'
    }),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M7.835 12.875a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm1-3h-2v-4h2v4z'
    })
  );
}

Warning.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string,
  backgroundColor: _propTypes2.default.string
};

exports.default = Warning;
Warning.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Warning',
  'props': {
    'backgroundColor': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'color': {
      'defaultValue': {
        'value': '\'#FFF\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};