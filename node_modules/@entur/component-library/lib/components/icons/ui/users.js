'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Users(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M9.9248,11.13023c0.4375,0.34961,0.7002,0.875,0.7002,1.39941v1.75c0,0.52539-0.34961,0.875-0.875,0.875 H1.875c-0.5249,0-0.875-0.34961-0.875-0.875v-1.66211c0-0.52539,0.2627-1.0498,0.7002-1.40039l2.3623-1.83691 C3.2749,8.76744,2.75,7.89244,2.75,6.84264v-0.875c0-1.75,1.4873-3.1499,3.2373-3.0625c1.6626,0.0874,2.8877,1.57471,2.8877,3.2373 v0.7002c0,1.0498-0.5249,1.9248-1.3125,2.5376L9.9248,11.13023z M14.21289,6.75523C14.7373,7.10484,15,7.63023,15,8.24254v0.7002 c0,0.52441-0.34961,0.875-0.875,0.875h-2.97461l-1.05078-0.875C10.4502,8.32994,10.625,7.54234,10.625,6.75523v-0.875 c0-1.40039-0.6123-2.625-1.5752-3.5c0.4375-0.7876,1.3125-1.40039,2.3623-1.2251c1.05078,0.1748,1.83789,1.2251,1.83789,2.2749 v0.7876c0,0.6123-0.2627,1.13721-0.6123,1.4873L14.21289,6.75523z'
    })
  );
}

Users.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Users;
Users.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Users',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};