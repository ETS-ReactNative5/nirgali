'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Settings(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M8.5,11.5 C6.8,11.5 5.5,10.2 5.5,8.5 C5.5,6.8 6.8,5.5 8.5,5.5 C10.2,5.5 11.5,6.8 11.5,8.5 C11.5,10.2 10.2,11.5 8.5,11.5 M13.8,5.7 L14.9,3.6 L13.5,2.2 L11.4,3.3 C11.1,3.1 10.7,3 10.3,2.9 L9.5,0.5 L7.5,0.5 L6.7,2.8 C6.4,2.9 6,3 5.7,3.2 L3.6,2.1 L2.1,3.6 L3.2,5.7 C3,6 2.9,6.4 2.8,6.7 L0.5,7.5 L0.5,9.5 L2.8,10.3 C2.9,10.7 3.1,11 3.2,11.4 L2.1,13.5 L3.5,14.9 L5.6,13.8 C5.9,14 6.3,14.1 6.7,14.2 L7.5,16.5 L9.5,16.5 L10.3,14.2 C10.7,14.1 11,13.9 11.4,13.8 L13.5,14.9 L14.9,13.5 L13.8,11.4 C14,11.1 14.1,10.7 14.2,10.3 L16.5,9.5 L16.5,7.5 L14.2,6.7 C14.1,6.4 14,6 13.8,5.7'
    })
  );
}

Settings.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Settings;
Settings.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Settings',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};