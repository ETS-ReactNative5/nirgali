'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Rules(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M11,15.00035c-0.25586,0-0.51172-0.09863-0.70703-0.29297l-2-2c-0.39111-0.3916-0.39111-1.02344,0-1.41406 c0.39111-0.3916,1.02344-0.3916,1.41406,0L11,12.58629l3.29297-3.29297c0.39062-0.3916,1.02344-0.3916,1.41406,0 c0.39062,0.39062,0.39062,1.02246,0,1.41406l-4,4C11.51172,14.90172,11.25586,15.00035,11,15.00035z M5,15.00035H1 c-0.55322,0-1-0.44727-1-1c0-0.55371,0.44678-1,1-1h4c0.55322,0,1,0.44629,1,1C6,14.55309,5.55322,15.00035,5,15.00035z M5,11.00035H1c-0.55322,0-1-0.44727-1-1c0-0.55371,0.44678-1,1-1h4c0.55322,0,1,0.44629,1,1 C6,10.55309,5.55322,11.00035,5,11.00035z M15,6.99986H1c-0.55176,0-1-0.44775-1-1c0-0.55176,0.44824-1,1-1h14 c0.55176,0,1,0.44824,1,1C16,6.55211,15.55176,6.99986,15,6.99986z M15,2.99986H1c-0.55176,0-1-0.44775-1-1 c0-0.55176,0.44824-1,1-1h14c0.55176,0,1,0.44824,1,1C16,2.55211,15.55176,2.99986,15,2.99986z'
    })
  );
}

Rules.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Rules;
Rules.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Rules',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};