'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Unstarred(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M8.46631,11.1107l2.53271,1.33008l-0.4834-2.81934c-0.05566-0.32422,0.05176-0.65527,0.28711-0.88525 l2.04883-1.99805l-2.83105-0.41113c-0.32715-0.04688-0.6084-0.25195-0.75293-0.54688L8.00049,3.21422L6.7334,5.78014 c-0.146,0.29492-0.42676,0.5-0.75293,0.54688L3.14941,6.73814l2.04932,1.99805c0.23486,0.229,0.34277,0.56104,0.28662,0.88525 l-0.48291,2.81934l2.53223-1.33008C7.82666,10.95641,8.17432,10.95641,8.46631,11.1107 M11.86035,15.15465l-3.85986-2.0293 l-3.85986,2.0293c-0.72705,0.38672-1.59229-0.23535-1.45117-1.05469l0.7373-4.29883L0.30273,6.75719 C-0.2915,6.17711,0.03955,5.17027,0.85742,5.05113l4.31592-0.62695l1.93115-3.91211c0.33594-0.68262,1.45703-0.68262,1.79297,0 l1.93066,3.91113l4.31641,0.62695c0.81836,0.11914,1.14844,1.12598,0.55469,1.70605L12.5752,9.80113l0.7373,4.29883 C13.45312,14.9232,12.58691,15.53648,11.86035,15.15465'
    })
  );
}

Unstarred.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Unstarred;
Unstarred.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Unstarred',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};