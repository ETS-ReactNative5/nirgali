'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Mobile(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      _ref$displayColor = _ref.displayColor,
      displayColor = _ref$displayColor === undefined ? '#ffffff' : _ref$displayColor,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'displayColor', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M8,14.00035c-0.55176,0-1-0.44824-1-1c0-0.55273,0.44824-1,1-1s1,0.44727,1,1 C9,13.55211,8.55176,14.00035,8,14.00035z M12-0.00014H4c-1.10303,0-2,0.89697-2,2v12.00049c0,1.10254,0.89697,2,2,2h8 c1.10254,0,2-0.89746,2-2V1.99986C14,0.89684,13.10254-0.00014,12-0.00014z'
    }),
    _react2.default.createElement('rect', { x: '4', y: '1.99986', fill: displayColor, width: '8', height: '8.00049' })
  );
}

Mobile.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string,
  displayColor: _propTypes2.default.string
};

exports.default = Mobile;
Mobile.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Mobile',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'displayColor': {
      'defaultValue': {
        'value': '\'#ffffff\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};