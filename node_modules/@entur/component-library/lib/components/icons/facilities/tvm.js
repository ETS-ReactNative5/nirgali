'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Tvm(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M7.5,11.05406V6.05455h-1v4.99951H7.5z M9.5,9.05406V6.05455h-1v2.99951H9.5z M3.5,3.49986 c0-0.27637,0.22363-0.5,0.5-0.5h8c0.27637,0,0.5,0.22363,0.5,0.5v11.00049c0,0.27637-0.22363,0.5-0.5,0.5H9.5 c-0.27637,0-0.5-0.22363-0.5-0.5c0-0.55176-0.44873-1-1-1s-1,0.44824-1,1c0,0.27637-0.22363,0.5-0.5,0.5H4 c-0.27637,0-0.5-0.22363-0.5-0.5V3.49986z M16.01172,2.99986h0.00586v2.8667c0,0.43018-0.28613,0.7168-0.7168,0.7168h-1.77051 V5.14977h1.05469V3.58336h-0.00684v-2.1499H7H1.43311v2.1499v1.56641h1.05469v1.43359h-1.771C0.28662,6.58336,0,6.29674,0,5.86656 v-2.2832v-2.8667c0-0.43018,0.28662-0.7168,0.7168-0.7168H7h8.29492c0.42969,0,0.7168,0.28662,0.7168,0.7168V2.99986z'
    })
  );
}

Tvm.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Tvm;
Tvm.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Tvm',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};