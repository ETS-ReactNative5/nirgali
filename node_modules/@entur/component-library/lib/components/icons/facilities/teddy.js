'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Teddy(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M14.89453,3.26012c0-1.20605-0.94824-2.1543-2.15527-2.1543c-1.20605,0-2.1543,0.94824-2.1543,2.1543 v0.17236C9.80957,3.08775,8.94775,2.82945,8,2.82945s-1.80957,0.2583-2.58545,0.60303V3.26012 c0-1.20605-0.94775-2.1543-2.1543-2.1543s-2.1543,0.94824-2.1543,2.1543c0,1.12061,0.86182,2.06836,1.98193,2.15479 C2.39844,6.36266,1.96777,7.5692,1.96777,8.86168c0,3.36133,2.67139,6.03223,6.03223,6.03223 c3.36133,0,6.03223-2.6709,6.03223-6.03223c0-1.29248-0.43066-2.49902-1.12012-3.44678 C14.03223,5.32848,14.89453,4.38072,14.89453,3.26012z M5.41455,7.99986c0-0.51709,0.34473-0.86182,0.86182-0.86182 s0.86182,0.34473,0.86182,0.86182S6.79346,8.86168,6.27637,8.86168S5.41455,8.51695,5.41455,7.99986z M9.72363,12.30895H6.27637 v-0.8623h0.86182V9.72398h1.72363v1.72266h0.86182V12.30895z M9.72363,8.86168c-0.51758,0-0.86182-0.34473-0.86182-0.86182 s0.34424-0.86182,0.86182-0.86182c0.5166,0,0.86133,0.34473,0.86133,0.86182S10.24023,8.86168,9.72363,8.86168z'
    })
  );
}

Teddy.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Teddy;
Teddy.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Teddy',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};