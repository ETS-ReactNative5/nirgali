'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Rescue(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M4.5498,14.09996l2.25-2.25C7.2002,11.94957,7.6001,12.05016,8,12.05016s0.7998-0.0498,1.2002-0.2002 l2.25,2.25C10.40039,14.69957,9.25,15.00035,8,15.00035S5.6001,14.69957,4.5498,14.09996 M1.8999,4.55016l2.25,2.25 c-0.25,0.75-0.25,1.59961,0,2.34961l-2.25,2.25C1.2998,10.39977,1,9.25035,1,7.99986C1,6.74986,1.2998,5.59996,1.8999,4.55016 M11.4502,1.89977l-2.25,2.25C8.7998,4.05016,8.3999,3.99986,8,3.99986s-0.7998,0.05029-1.2002,0.2002l-2.25-2.30029 C5.6001,1.30016,6.75,0.99986,8,0.99986S10.40039,1.30016,11.4502,1.89977 M9.15039,10.80016L9.15039,10.80016 C8.75,10.89977,8.3999,11.00035,8,11.00035s-0.75-0.10059-1.1499-0.2002c-0.3501-0.15039-0.7002-0.35059-1-0.65039 c-1.1499-1.14941-1.1499-3.0498,0-4.25c0.2998-0.2998,0.6499-0.5,1-0.6499S7.6001,5.05016,8,5.05016s0.75,0.09961,1.15039,0.19971 c0.34961,0.1499,0.69922,0.3501,1,0.6499c1.14941,1.15039,1.14941,3.0498,0,4.25C9.84961,10.39977,9.5,10.64977,9.15039,10.80016 M14.09961,11.44957l-2.25-2.25c0.25-0.74951,0.25-1.59961,0-2.34961l2.25-2.25C14.7002,5.64977,15,6.80016,15,8.05016 S14.7002,10.39977,14.09961,11.44957 M13.65039,2.34996c-1.5-1.5-3.5-2.3501-5.65039-2.3501c-2.1499,0-4.1499,0.8501-5.6499,2.3501 S0,5.84996,0,7.99986s0.8501,4.1499,2.3501,5.6499s3.5,2.35058,5.6499,2.35058c2.15039,0,4.15039-0.85058,5.65039-2.35058 S16,10.14977,16,7.99986S15.15039,3.84996,13.65039,2.34996'
    })
  );
}

Rescue.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Rescue;
Rescue.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Rescue',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};