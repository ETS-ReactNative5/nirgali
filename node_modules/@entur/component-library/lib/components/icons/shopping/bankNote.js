'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function BankNote(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M14.125,2.74986H1.875c-0.5249,0-0.875,0.3501-0.875,0.875v8.75049c0,0.52441,0.3501,0.875,0.875,0.875 h12.25c0.52539,0,0.875-0.35059,0.875-0.875V3.62486C15,3.09996,14.65039,2.74986,14.125,2.74986z M10.71289,11.50035H5.2876 C4.9375,10.27477,3.9751,9.31285,2.75,8.96227v-1.9248c1.2251-0.3501,2.1875-1.3125,2.5376-2.5376h5.51221 c0.35059,1.2251,1.3125,2.1875,2.53809,2.5376v2.0127C12.02539,9.31285,11.0625,10.27477,10.71289,11.50035z M8,6.24986 c-0.9668,0-1.75,0.7832-1.75,1.75c0,0.96729,0.7832,1.75049,1.75,1.75049s1.75-0.7832,1.75-1.75049 C9.75,7.03307,8.9668,6.24986,8,6.24986z'
    })
  );
}

BankNote.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = BankNote;
BankNote.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'BankNote',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};