'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function BankNoteMulti(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M14.125,4.49986H1.875c-0.5249,0-0.875,0.3501-0.875,0.875v8.75049c0,0.52441,0.3501,0.875,0.875,0.875 h12.25c0.52539,0,0.875-0.35059,0.875-0.875V5.37486C15,4.84996,14.65039,4.49986,14.125,4.49986z M10.71289,13.25035H5.2876 c-0.3501-1.22559-1.3125-2.1875-2.5376-2.53809v-1.9248c1.2251-0.3501,2.1875-1.3125,2.5376-2.5376h5.51221 c0.35059,1.2251,1.3125,2.1875,2.53809,2.5376v2.0127C12.02539,11.06285,11.0625,12.02477,10.71289,13.25035z M8,7.99986 c-0.9668,0-1.75,0.7832-1.75,1.75049c0,0.9668,0.7832,1.75,1.75,1.75s1.75-0.7832,1.75-1.75C9.75,8.78307,8.9668,7.99986,8,7.99986 z M2.75,0.99986h10.5v1.75H2.75V0.99986z'
    })
  );
}

BankNoteMulti.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = BankNoteMulti;
BankNoteMulti.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'BankNoteMulti',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};