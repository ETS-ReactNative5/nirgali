'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function ShopingCart(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M14.16211,3.63268c0.70215,0,0.96582,0.70166,0.79004,1.14062l-1.75488,5.26514 c-0.08789,0.35059-0.43848,0.61426-0.79004,0.61426H5.3877c-0.43896,0-0.79004-0.26367-0.87793-0.70215l-1.5791-7.1958H1V0.99986 h2.63232c0.43896,0,0.79004,0.26318,0.87744,0.70215l0.43896,1.93066H14.16211z M5.3877,11.52965 c0.96924,0,1.75488,0.78613,1.75488,1.75488c0,0.96973-0.78564,1.75586-1.75488,1.75586 c-0.96973,0-1.75537-0.78613-1.75537-1.75586C3.63232,12.31578,4.41797,11.52965,5.3877,11.52965z M12.40723,11.52965 c0.96973,0,1.75488,0.78613,1.75488,1.75488c0,0.96973-0.78516,1.75586-1.75488,1.75586s-1.75488-0.78613-1.75488-1.75586 C10.65234,12.31578,11.4375,11.52965,12.40723,11.52965z'
    })
  );
}

ShopingCart.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = ShopingCart;
ShopingCart.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'ShopingCart',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};