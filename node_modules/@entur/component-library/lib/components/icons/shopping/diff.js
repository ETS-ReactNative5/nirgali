'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Diff(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M5,2.99986H4v-1c0-0.6001-0.3999-1-1-1s-1,0.3999-1,1v1H1c-0.6001,0-1,0.3999-1,1s0.3999,1,1,1h1v1 c0,0.6001,0.3999,1,1,1s1-0.3999,1-1v-1h1c0.6001,0,1-0.3999,1-1S5.6001,2.99986,5,2.99986'
    }),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M5.7002,9.30016c-0.40039-0.40039-1-0.40039-1.40039,0L3,10.59996l-1.2998-1.2998 c-0.40039-0.40039-1-0.40039-1.40039,0c-0.3999,0.39941-0.3999,1,0,1.39941l1.30029,1.30078l-1.30029,1.2998 c-0.3999,0.39941-0.3999,1,0,1.39941c0.2002,0.2002,0.90039,0.5,1.40039,0L3,13.39977l1.2998,1.2998 c0.5,0.5,1.2002,0.2002,1.40039,0c0.3999-0.39941,0.3999-1,0-1.39941l-1.30029-1.2998l1.30029-1.30078 C6.1001,10.30016,6.1001,9.69957,5.7002,9.30016'
    }),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M10,4.99986h5c0.59961,0,1-0.3999,1-1s-0.40039-1-1-1h-5c-0.59961,0-1,0.3999-1,1 S9.40039,4.99986,10,4.99986'
    }),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M15,9.00035h-5c-0.59961,0-1,0.39941-1,1c0,0.59961,0.40039,1,1,1h5c0.59961,0,1-0.40039,1-1 C16,9.39977,15.59961,9.00035,15,9.00035'
    }),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M15,13.00035h-5c-0.59961,0-1,0.39941-1,1c0,0.59961,0.40039,1,1,1h5c0.59961,0,1-0.40039,1-1 C16,13.39977,15.59961,13.00035,15,13.00035'
    })
  );
}

Diff.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Diff;
Diff.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Diff',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};