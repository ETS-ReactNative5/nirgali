'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Switch(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M11.59961,4.99986H2c-0.55225,0-1-0.44775-1-1s0.44775-1,1-1h9.59961l-1.2998-1.2998c-0.39941-0.3999-0.39941-1, 0-1.3999c0.40039-0.40039,1-0.40039,1.40039,0l3,3c0.39941,0.3999,0.39941,1,0,1.3999l-3,3C11.5,7.89977, 11.2998,7.99986,11,7.99986s-0.5-0.1001-0.7002-0.2998c-0.39941-0.3999-0.39941-1,0-1.3999L11.59961,4.99986zM4.3999, 13.00035l1.30029,1.2998c0.3999,0.39941,0.3999,1,0,1.39941C5.5,15.89977,5.2998,16.00035,5, 16.00035s-0.5-0.10058-0.7002-0.30078l-3-3c-0.3999-0.39941-0.3999-1,0-1.39941l3-3c0.40039-0.40039, 1-0.40039,1.40039,0c0.3999,0.3999,0.3999,1,0,1.39941L4.3999,11.00035H14c0.55273,0,1,0.44727, 1,1c0,0.55176-0.44727,1-1,1H4.3999z'
    })
  );
}

Switch.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Switch;
Switch.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Switch',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};