'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function Cableway(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', { fill: color, d: 'M13.603 12.566c-.068-.594-1.105-5.256-1.105-5.256a.4.4 0 0 0-.388-.306H3.894a.4.4 0 0 0-.39.306s-1.11 5-1.11 5.316c0 .007.004.019.006.027a.382.382 0 0 0 .051.186l.175.295.538.901a.39.39 0 0 0 .156.14v.003l.013.005c.04.019.08.032.123.038.01.002.019.011.03.011h9.032c.01 0 .02-.007.03-.01a.39.39 0 0 0 .291-.187l.537-.9h.001l.176-.296a.39.39 0 0 0 .046-.272h.004zm-7.998-1.948c0 .221-.18.4-.401.4H3.998a.401.401 0 0 1-.39-.487l.353-1.605a.401.401 0 0 1 .392-.316h.851c.22 0 .401.18.401.402v1.606zm4.014 0c0 .221-.18.4-.401.4h-2.41a.4.4 0 0 1-.4-.4V9.012c0-.222.18-.401.4-.401h2.41c.22 0 .401.18.401.4v1.607zm2.722.251a.402.402 0 0 1-.313.15h-1.206a.4.4 0 0 1-.4-.4V9.012c0-.222.18-.401.4-.401h.851c.188 0 .352.13.393.315l.353 1.605a.406.406 0 0 1-.078.338zM9.176 2.96l3.364-.99a.376.376 0 0 0-.214-.723l-3.35.987a1.102 1.102 0 0 1 .2.727zM8.073 3.98c-.132 0-.258-.024-.375-.066V5.59h-.923a.376.376 0 0 0 0 .753h2.599a.376.376 0 0 0 0-.753H8.45V3.913a1.105 1.105 0 0 1-.377.066zM3.565 4.598c.035 0 .07-.004.107-.015l3.523-1.039a1.101 1.101 0 0 1-.225-.718L3.458 3.86a.376.376 0 0 0 .107.737zM8.074 3.538a.665.665 0 1 0-.002-1.33.665.665 0 0 0 .002 1.33z' })
  );
}

Cableway.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Cableway;
Cableway.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Cableway',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};