'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function Helicopter(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', { fill: color, d: 'M12.764 11.524H8.655c-.208 0-.378.17-.378.377s.17.377.378.377h4.109a.377.377 0 1 0 0-.754m-2.679-5.253V6.16a.264.264 0 0 1 .256-.218h.607a2.06 2.06 0 0 1 2.033 1.75c.015.095.006.156-.024.188-.045.083-.148.106-.157.106-.225 0-1.101-.002-2.46 0a.255.255 0 0 1-.255-.254V6.27zm4.549-2.549H4.17a.366.366 0 1 0 0 .733h4.87v.529h-.527c-.636 0-1.155.519-1.155 1.155v.917H3.002L2.56 5.842a.264.264 0 0 0-.25-.174H1.265A.265.265 0 0 0 1 5.934v1.39l.01 1.002a.266.266 0 0 0 .223.258L7.358 9.62v.216c0 .637.52 1.156 1.156 1.156h4.616c.638 0 1.156-.52 1.156-1.156V8.91a3.931 3.931 0 0 0-3.926-3.926h-.586v-.529H14.634a.367.367 0 0 0 0-.733z' })
  );
}

Helicopter.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Helicopter;
Helicopter.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Helicopter',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};