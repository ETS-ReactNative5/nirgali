'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function Ferry(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', { fill: color, d: 'M15.955 7.613a.362.362 0 0 0-.318-.189l-2.532.027-.749-2.93a.357.357 0 0 0-.352-.268l-1.18.013-.287-.824a.362.362 0 0 0-.505-.2l-1.398.73c-.121.062-.165.185-.164.32l.012 1.07-4.743.051a.363.363 0 0 0-.32.2L2.46 7.568l-.857.009a.365.365 0 0 0-.328.22L.067 10.563s.136-.083.443-.028c.484.086.833.278 1.263.474.62.283 1.165.042 1.723-.232a4.462 4.462 0 0 1 3.65-.099c.543.233 1 .51 1.62.344.529-.141.979-.493 1.523-.624a4.68 4.68 0 0 1 2.153 0c.485.117 1.13.322 1.422.752l2.077-3.17a.355.355 0 0 0 .014-.368m-2.82 3.817c-1.123-.556-2.404-.586-3.528-.004-.512.267-.99.405-1.58.343-.543-.057-.985-.397-1.496-.556-1.21-.374-2.18.02-3.269.48a2.302 2.302 0 0 1-1.668.019c-.384-.153-.838-.499-1.261-.495-.271.003-.4.278-.298.499.082.177.23.204.394.267.5.193.994.41 1.523.523a2.704 2.704 0 0 0 1.59-.154c.46-.194.859-.463 1.364-.541.566-.087 1.164-.041 1.691.19.478.208.898.441 1.432.485.57.048 1.13-.036 1.645-.29.486-.24.926-.451 1.48-.482a3.027 3.027 0 0 1 1.475.265c.19.09.395.208.587.036a.358.358 0 0 0-.08-.585M8.243 7.522H6.622a.26.26 0 0 1-.26-.258V6.71a.26.26 0 0 1 .26-.258h1.62a.26.26 0 0 1 .26.258v.553a.26.26 0 0 1-.26.258m2.852 0H9.473a.26.26 0 0 1-.258-.258V6.71a.26.26 0 0 1 .258-.258h1.623a.26.26 0 0 1 .26.258v.553a.26.26 0 0 1-.26.258zM5.39 6.452a.26.26 0 0 1 .26.259v.552a.26.26 0 0 1-.26.259H4.84l-1.078.012a.357.357 0 0 1-.309-.162.357.357 0 0 1-.045-.12.352.352 0 0 1 .026-.226l.176-.36a.452.452 0 0 1 .187-.186.381.381 0 0 1 .16-.032H5.19c.007 0 .014.004.022.004h.178z' })
  );
}

Ferry.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Ferry;
Ferry.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Ferry',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};