'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function Funicular(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', { fill: color, d: 'M15.993 9.392c-.067-.593-1.101-5.241-1.101-5.241a.399.399 0 0 0-.387-.305H1.495a.399.399 0 0 0-.388.305S0 9.135 0 9.451c0 .006.004.018.006.027a.387.387 0 0 0 .05.185l.175.294.536.898a.385.385 0 0 0 .156.142c.003.004.008.004.013.006.039.02.078.033.121.039h13.885a.392.392 0 0 0 .29-.186l.535-.899.176-.294a.386.386 0 0 0 .046-.27.017.017 0 0 1 .004-.001zM2.999 7.646a.4.4 0 0 1-.4.402H1.4a.4.4 0 0 1-.39-.488l.353-1.6a.399.399 0 0 1 .39-.315H2.6a.4.4 0 0 1 .4.4v1.601zm4.201 0a.4.4 0 0 1-.4.4H4.4a.4.4 0 0 1-.4-.4v-1.6a.4.4 0 0 1 .4-.4h2.4c.22 0 .4.178.4.4v1.6zm4 0a.4.4 0 0 1-.4.4H8.4a.4.4 0 0 1-.4-.4v-1.6a.4.4 0 0 1 .4-.4h2.4c.22 0 .4.178.4.4v1.6zm3.512.252a.399.399 0 0 1-.311.15h-2a.4.4 0 0 1-.401-.4V6.044a.4.4 0 0 1 .401-.4H14.047a.4.4 0 0 1 .391.314l.353 1.601a.397.397 0 0 1-.079.338zM14.867 11.803H1.128a.38.38 0 0 0 0 .761h13.74a.38.38 0 0 0 0-.761z' })
  );
}

Funicular.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Funicular;
Funicular.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Funicular',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};