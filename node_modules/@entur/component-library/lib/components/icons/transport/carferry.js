'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function CarFerry(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', { fill: color, d: 'M15.88 8.36s-.03-.188-.1-.294c-.048-.071-.17-.242-.17-.242l-.824-1.2-.115-.166a.315.315 0 0 0-.437-.082c-.144.098-.178.263-.081.438l.687 1.31h-4.456a.442.442 0 0 0 .126-.322v-.498h.479V5.745a.668.668 0 0 0-.542-.66l-.494-1.227c-.09-.232-.291-.43-.671-.43H6.696c-.378 0-.579.198-.671.43L5.53 5.085a.672.672 0 0 0-.542.66v1.559h.482v.498c0 .141.05.246.124.321H1.15l.687-1.31c.097-.174.063-.338-.08-.437a.315.315 0 0 0-.438.082l-.115.167-.823 1.2s-.122.17-.17.24C.14 8.173.11 8.36.11 8.36c-.103.576-.115.607-.115.69a.35.35 0 0 0 .057.166l.712 1.192c.038.064.117.186.234.175.12-.011.28-.03.397-.043l.001.001.031-.004.11-.013c.084-.008.194-.013.301-.006.491.036.83.288 1.258.49.616.289 1.164.055 1.726-.213a4.462 4.462 0 0 1 3.65-.057c.54.24.996.521 1.616.363.53-.135 1.24-.554 1.789-.665.674-.135 1.078-.111 1.741.026.448.093.938.272 1.18.366a.195.195 0 0 0 .24-.087l.9-1.525a.35.35 0 0 0 .057-.167c0-.082-.012-.113-.114-.689zM6.415 4.107c.045-.135.115-.233.278-.235H9.29c.161.002.23.1.278.235l.37.949H6.044l.37-.949zm-.479 2.244a.413.413 0 1 1 0-.826.417.417 0 0 1 .416.415.415.415 0 0 1-.416.411zm.308 1.772a.44.44 0 0 0 .127-.321v-.498H9.608v.498c0 .14.053.246.128.321H6.243zm3.803-1.772a.412.412 0 0 1-.415-.41.415.415 0 0 1 .415-.416.418.418 0 0 1 .416.415.415.415 0 0 1-.416.411z' }),
    _react2.default.createElement('path', { fill: color, d: 'M14.46 11.558c-1.118-.569-2.398-.613-3.529-.045-.515.261-.995.394-1.583.325-.542-.063-.98-.408-1.49-.573-1.206-.389-2.18-.006-3.274.443a2.302 2.302 0 0 1-1.669-.002c-.382-.156-.832-.508-1.255-.508-.27 0-.403.273-.303.494.08.179.228.208.39.273.498.198.99.421 1.517.54a2.705 2.705 0 0 0 1.593-.135c.462-.19.863-.454 1.37-.526.567-.08 1.164-.028 1.688.209.476.214.893.452 1.426.502a3.087 3.087 0 0 0 1.649-.27c.489-.236.931-.441 1.486-.466a3.028 3.028 0 0 1 1.471.283c.19.091.393.212.586.043a.358.358 0 0 0-.073-.587z' })
  );
}

CarFerry.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = CarFerry;
CarFerry.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'CarFerry',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};