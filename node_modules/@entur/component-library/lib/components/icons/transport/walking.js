'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function Walking(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', { fill: color, d: 'M11.88 7.518c.218.117.097.468-.036.679a.442.442 0 0 1-.389.21.557.557 0 0 1-.23-.058L9.54 7.425a.517.517 0 0 1-.146-.13l-.402-.506-.052.159C8.646 8.1 8.83 8.381 8.845 8.417c.084.214.311.57.567.925l1.165 1.563c.01.025.03.063.04.087l.665 2.341c.123.296-.176.533-.481.638a.738.738 0 0 1-.284.024.605.605 0 0 1-.494-.353l-.754-2.42-1.205-1.439c-.298-.236-.327-.275-.662-.52-1.019-.745-.587-2.181-.488-2.638l.094-.556-.974.596L4.92 8.337a.464.464 0 0 1-.606.187c-.218-.106-.388-.374-.28-.585L5.2 6.185a.308.308 0 0 1 .108-.14s1.916-1.24 1.94-1.252c.182-.105.523-.128.753-.093.315.047 1.128.058 1.236.316l1.042 1.637 1.602.865zm-5.66 3.523l.663-1.597.929.747-.476 1.271c-.012.046-.037.082-.06.117L5.82 13.695a.608.608 0 0 1-.51.258.643.643 0 0 1-.327-.082.534.534 0 0 1-.182-.772l1.419-2.058zm2.35-7.007c-.571 0-1.034-.456-1.034-1.018C7.536 2.456 8 2 8.57 2c.569 0 1.032.456 1.032 1.016 0 .562-.463 1.018-1.033 1.018z' })
  );
}

Walking.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Walking;
Walking.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Walking',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};