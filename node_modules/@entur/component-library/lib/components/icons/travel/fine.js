'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Fine(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M15.33301,1.99986C15.70215,1.99986,16,2.2982,16,2.66686v3.33301 c0,0.36865-0.29785,0.66699-0.66699,0.66699C14.59766,6.66686,14,7.26451,14,7.99986s0.59766,1.3335,1.33301,1.3335 C15.70215,9.33336,16,9.63121,16,10.00035v3.33301c0,0.36816-0.29785,0.66699-0.66699,0.66699H0.6665 C0.29785,14.00035,0,13.70152,0,13.33336v-3.33301c0-0.36914,0.29785-0.66699,0.6665-0.66699C1.40186,9.33336,2,8.73522,2,7.99986 S1.40186,6.66686,0.6665,6.66686C0.29785,6.66686,0,6.36852,0,5.99986V2.66686C0,2.2982,0.29785,1.99986,0.6665,1.99986H15.33301z M9.5,5.49986l-1.5,1.5l-1.5-1.5l-1,1l1.5,1.5L5.5,9.50035l1,1l1.5-1.5l1.5,1.5l1-1L9,7.99986l1.5-1.5L9.5,5.49986z'
    })
  );
}

Fine.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Fine;
Fine.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Fine',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};