'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Home(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M10.58008,15.00035h1.74902c0.52441,0,0.87402-0.35156,0.87402-0.87988V7.96715h0.875 c0.26172,0,0.52441-0.08789,0.69922-0.26367c0.34961-0.35205,0.2627-0.87939-0.08789-1.23096l-6.12109-5.2749 c-0.34961-0.26367-0.78711-0.26367-1.13672,0l-6.12158,5.2749c-0.34961,0.35156-0.43701,0.87891-0.0874,1.23096 c0.0874,0.17578,0.34961,0.26367,0.6123,0.26367h0.87451v6.15332c0,0.52832,0.34961,0.87988,0.87451,0.87988h1.74902 c0.52441,0,0.87451-0.35156,0.87451-0.87988v-2.63672h3.49756v2.63672C9.70508,14.64879,10.05469,15.00035,10.58008,15.00035'
    })
  );
}

Home.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Home;
Home.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Home',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};