'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _helper = require('../helper');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } // Nucleo Icon, see LICENCE.md
// https://nucleoapp.com/license

function Track(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === undefined ? 'currentColor' : _ref$color,
      size = _ref.size,
      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);

  return _react2.default.createElement(
    'svg',
    _extends({
      xmlns: 'http://www.w3.org/2000/svg',
      viewBox: '0 0 16 16'
    }, (0, _helper.getIconSize)(size), svgProps),
    _react2.default.createElement('path', {
      fill: color,
      d: 'M11.65137,10.63316H4.37939l-0.46484,1.62695h8.20166L11.65137,10.63316z M13.33691,10.63316 l0.46484,1.62695h0.70508c0.44922,0,0.81348,0.36426,0.81348,0.81348s-0.36426,0.81348-0.81348,0.81348h-0.24121l0.17578,0.61133 c0.16211,0.40723-0.16309,0.89551-0.56934,0.97656c-0.40723,0.16211-0.81348-0.08105-0.97656-0.48828l-0.31445-1.09961H3.44971 l-0.31396,1.09961c-0.16309,0.40723-0.56934,0.65039-1.05762,0.56934c-0.40674-0.16211-0.65039-0.56934-0.56934-0.97559 l0.19824-0.69336H1.49316c-0.44922,0-0.81299-0.36426-0.81299-0.81348s0.36377-0.81348,0.81299-0.81348h0.67871l0.46484-1.62695 H2.30664c-0.44922,0-0.81348-0.36426-0.81348-0.81348s0.36426-0.81348,0.81348-0.81348h0.79443l0.46484-1.62598h-0.4458 c-0.44922,0-0.81348-0.36426-0.81348-0.81348S2.6709,5.75328,3.12012,5.75328h0.91064l0.73145-2.56006 c0.1626-0.48779,0.56934-0.73193,1.05713-0.65039c0.40674,0.1626,0.65088,0.56934,0.56934,1.05713L5.77393,5.75328h4.48389 L9.64258,3.59996c-0.08203-0.48779,0.16211-0.89453,0.56934-1.05713c0.40625-0.1626,0.89453,0.1626,0.97559,0.56934 l0.75488,2.64111h0.9375c0.44922,0,0.81348,0.36426,0.81348,0.81348s-0.36426,0.81348-0.81348,0.81348h-0.47266l0.46484,1.62598 h0.82129c0.44922,0,0.81348,0.36426,0.81348,0.81348s-0.36426,0.81348-0.81348,0.81348H13.33691z M11.18652,9.00621 l-0.46387-1.62598H5.30908L4.84424,9.00621H11.18652z'
    })
  );
}

Track.propTypes = {
  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),
  color: _propTypes2.default.string
};

exports.default = Track;
Track.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Track',
  'props': {
    'color': {
      'defaultValue': {
        'value': '\'currentColor\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'xlarge\'',
          'computed': false
        }, {
          'value': '\'large\'',
          'computed': false
        }, {
          'value': '\'medium\'',
          'computed': false
        }, {
          'value': '\'small\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    }
  }
};