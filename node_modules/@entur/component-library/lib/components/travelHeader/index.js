'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.TravelHeader = TravelHeader;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./styles.css');

var _styles = {
  'rootClassName': 'entur-travel-header',
  'entur-travel-header': 'entur-travel-header',
  'entur-travel-header--variant-midnight': 'entur-travel-header--variant-midnight',
  'entur-travel-header__title': 'entur-travel-header__title',
  'entur-travel-header__title-divider': 'entur-travel-header__title-divider',
  'entur-travel-header__to-container': 'entur-travel-header__to-container'
};

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function TravelHeader(props) {
  var from = props.from,
      to = props.to,
      _props$variant = props.variant,
      variant = _props$variant === undefined ? '' : _props$variant,
      dividerColor = props.dividerColor,
      a11yFromPrefix = props.a11yFromPrefix,
      a11yToPrefix = props.a11yToPrefix,
      HeaderElement = props.HeaderElement,
      rest = _objectWithoutProperties(props, ['from', 'to', 'variant', 'dividerColor', 'a11yFromPrefix', 'a11yToPrefix', 'HeaderElement']);

  var classNames = (0, _classnames2.default)(_styles.rootClassName, _defineProperty({}, _styles.rootClassName + '--variant-' + variant, variant));

  return _react2.default.createElement(
    HeaderElement,
    _extends({ className: classNames }, rest),
    _react2.default.createElement(
      'div',
      { className: _styles.rootClassName + '__title' },
      _react2.default.createElement(
        'span',
        { className: 'visuallyhidden' },
        a11yFromPrefix
      ),
      from
    ),
    _react2.default.createElement(
      'div',
      { className: _styles.rootClassName + '__to-container' },
      _react2.default.createElement(
        'div',
        {
          className: _styles.rootClassName + '__title-divider',
          style: dividerColor ? { backgroundColor: dividerColor } : undefined
        },
        _react2.default.createElement(
          'span',
          { className: 'visuallyhidden' },
          a11yToPrefix
        )
      ),
      _react2.default.createElement(
        'div',
        { className: _styles.rootClassName + '__title' },
        to
      )
    )
  );
}

TravelHeader.defaultProps = {
  a11yFromPrefix: 'Fra',
  a11yToPrefix: 'til',
  HeaderElement: 'h2'
};

TravelHeader.propTypes = {
  from: _propTypes2.default.string.isRequired,
  to: _propTypes2.default.string.isRequired,
  HeaderElement: _propTypes2.default.oneOf(['h1', 'h2', 'h3', 'h4']),
  variant: _propTypes2.default.oneOf(['midnight']),
  dividerColor: _propTypes2.default.string,
  /** An invisible prefix to <from> for accessibility purposes */
  a11yFromPrefix: _propTypes2.default.string,
  /** An invisible prefix to <to> for accessibility purposes */
  a11yToPrefix: _propTypes2.default.string
};
TravelHeader.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'TravelHeader',
  'props': {
    'a11yFromPrefix': {
      'defaultValue': {
        'value': '\'Fra\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': 'An invisible prefix to <from> for accessibility purposes'
    },
    'a11yToPrefix': {
      'defaultValue': {
        'value': '\'til\'',
        'computed': false
      },
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': 'An invisible prefix to <to> for accessibility purposes'
    },
    'HeaderElement': {
      'defaultValue': {
        'value': '\'h2\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'h1\'',
          'computed': false
        }, {
          'value': '\'h2\'',
          'computed': false
        }, {
          'value': '\'h3\'',
          'computed': false
        }, {
          'value': '\'h4\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'from': {
      'type': {
        'name': 'string'
      },
      'required': true,
      'description': ''
    },
    'to': {
      'type': {
        'name': 'string'
      },
      'required': true,
      'description': ''
    },
    'variant': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'midnight\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'dividerColor': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    }
  }
};