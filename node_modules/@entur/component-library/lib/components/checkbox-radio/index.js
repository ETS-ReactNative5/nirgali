'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.JustCheckbox = JustCheckbox;
exports.JustRadio = JustRadio;
exports.Checkbox = Checkbox;
exports.Radio = Radio;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./styles.css');

var _styles = {
  'inputClassName': 'entur-just-radio-checkbox',
  'labelClassName': 'entur-radio-checkbox__label',
  'widthLabelClassName': 'entur-radio-checkbox',
  'entur-radio-checkbox': 'entur-radio-checkbox',
  'entur-radio-checkbox__label': 'entur-radio-checkbox__label',
  'entur-just-radio-checkbox': 'entur-just-radio-checkbox',
  'entur-just-radio-checkbox--size-md': 'entur-just-radio-checkbox--size-md',
  'entur-just-radio-checkbox--size-lg': 'entur-just-radio-checkbox--size-lg',
  'entur-just-radio-checkbox--variant-default': 'entur-just-radio-checkbox--variant-default',
  'entur-just-radio-checkbox--variant-midnight': 'entur-just-radio-checkbox--variant-midnight'
};

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function JustInput(props) {
  var _cx;

  var id = props.id,
      type = props.type,
      className = props.className,
      value = props.value,
      variant = props.variant,
      size = props.size,
      checked = props.checked,
      disabled = props.disabled,
      indeterminate = props.indeterminate,
      rest = _objectWithoutProperties(props, ['id', 'type', 'className', 'value', 'variant', 'size', 'checked', 'disabled', 'indeterminate']);

  var classNames = (0, _classnames2.default)(_styles.inputClassName, (_cx = {}, _defineProperty(_cx, _styles.inputClassName + '--variant-' + variant, variant), _defineProperty(_cx, _styles.inputClassName + '--size-' + size, size), _cx), className);

  var setIndeterminateState = function setIndeterminateState(inputElement) {
    if (inputElement) {
      inputElement.indeterminate = indeterminate;
    }
  };

  return _react2.default.createElement('input', _extends({
    id: id,
    ref: setIndeterminateState,
    className: classNames,
    type: type,
    value: value,
    checked: checked,
    disabled: disabled
  }, rest));
}

var justInputPropTypes = {
  id: _propTypes2.default.string,
  value: _propTypes2.default.any,
  checked: _propTypes2.default.bool,
  name: _propTypes2.default.string,
  variant: _propTypes2.default.oneOf(['default', 'midnight']).isRequired,
  size: _propTypes2.default.oneOf(['md', 'lg']).isRequired,
  className: _propTypes2.default.string,
  onChange: _propTypes2.default.func,
  disabled: _propTypes2.default.bool
};

JustInput.propTypes = _extends({}, justInputPropTypes, {
  type: _propTypes2.default.oneOf(['checkbox', 'radio']).isRequired
});

JustInput.defaultProps = {
  variant: 'default',
  size: 'md',
  onChange: function onChange() {}
};

function JustCheckbox(props) {
  return _react2.default.createElement(JustInput, _extends({}, props, { type: 'checkbox' }));
}

JustCheckbox.propTypes = justInputPropTypes;

function JustRadio(props) {
  return _react2.default.createElement(JustInput, _extends({}, props, { type: 'radio' }));
}

JustCheckbox.propTypes = justInputPropTypes;

function InputWithLabel(props) {
  var id = props.id,
      className = props.className,
      inputType = props.inputType,
      label = props.label,
      rest = _objectWithoutProperties(props, ['id', 'className', 'inputType', 'label']);

  var classNames = (0, _classnames2.default)(_styles.widthLabelClassName, className);

  return _react2.default.createElement(
    'div',
    { className: classNames },
    _react2.default.createElement(JustInput, _extends({ id: id, type: inputType }, rest)),
    _react2.default.createElement(
      'label',
      { htmlFor: id, className: _styles.labelClassName },
      label
    )
  );
}

var inputWithLabelPropTypes = {
  id: _propTypes2.default.string,
  className: _propTypes2.default.string,
  label: _propTypes2.default.string
};

InputWithLabel.propTypes = _extends({}, inputWithLabelPropTypes, {
  inputType: _propTypes2.default.oneOf(['checkbox', 'radio']).isRequired
});

function Checkbox(props) {
  return _react2.default.createElement(InputWithLabel, _extends({}, props, { inputType: 'checkbox' }));
}

Checkbox.propTypes = inputWithLabelPropTypes;

function Radio(props) {
  return _react2.default.createElement(InputWithLabel, _extends({}, props, { inputType: 'radio' }));
}

Radio.propTypes = inputWithLabelPropTypes;
JustCheckbox.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'JustCheckbox',
  'props': {
    'id': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'value': {
      'type': {
        'name': 'any'
      },
      'required': false,
      'description': ''
    },
    'checked': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'name': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'variant': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'default\'',
          'computed': false
        }, {
          'value': '\'midnight\'',
          'computed': false
        }]
      },
      'required': true,
      'description': ''
    },
    'size': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'md\'',
          'computed': false
        }, {
          'value': '\'lg\'',
          'computed': false
        }]
      },
      'required': true,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'onChange': {
      'type': {
        'name': 'func'
      },
      'required': false,
      'description': ''
    },
    'disabled': {
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    }
  }
};
JustRadio.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'JustRadio'
};
Checkbox.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Checkbox',
  'props': {
    'id': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'label': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    }
  }
};
Radio.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Radio',
  'props': {
    'id': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'label': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    }
  }
};