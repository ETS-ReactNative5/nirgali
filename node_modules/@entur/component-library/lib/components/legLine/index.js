'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LegLine = LegLine;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./styles.css');

var _styles = {
  'rootClassName': 'entur-leg-line',
  'entur-leg-line': 'entur-leg-line',
  'entur-leg-line__start': 'entur-leg-line__start',
  'entur-leg-line__stop': 'entur-leg-line__stop',
  'entur-leg-line__middle': 'entur-leg-line__middle',
  'entur-leg-line__middle--pattern-dotted': 'entur-leg-line__middle--pattern-dotted',
  'entur-leg-line--direction-vertical': 'entur-leg-line--direction-vertical',
  'entur-leg-line__middle--pattern-dashed': 'entur-leg-line__middle--pattern-dashed',
  'entur-leg-line__middle--pattern-wave': 'entur-leg-line__middle--pattern-wave',
  'entur-leg-line--direction-horizontal': 'entur-leg-line--direction-horizontal'
};

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; } // @flow


function LegLine(_ref) {
  var className = _ref.className,
      _ref$direction = _ref.direction,
      direction = _ref$direction === undefined ? 'horizontal' : _ref$direction,
      pattern = _ref.pattern,
      color = _ref.color,
      endColor = _ref.endColor,
      startColor = _ref.startColor,
      _ref$showStart = _ref.showStart,
      showStart = _ref$showStart === undefined ? true : _ref$showStart,
      _ref$showLine = _ref.showLine,
      showLine = _ref$showLine === undefined ? true : _ref$showLine,
      _ref$showStop = _ref.showStop,
      showStop = _ref$showStop === undefined ? true : _ref$showStop;


  var classNames = (0, _classnames2.default)(_styles.rootClassName, _defineProperty({}, _styles.rootClassName + '--direction-' + direction, direction), className);

  var middleClassName = (0, _classnames2.default)(_styles.rootClassName + '__middle', _defineProperty({}, _styles.rootClassName + '__middle--pattern-' + pattern, pattern));

  return _react2.default.createElement(
    'div',
    { className: classNames },
    showStart && _react2.default.createElement('div', {
      className: _styles.rootClassName + '__start',
      style: { backgroundColor: startColor || color }
    }),
    showLine && _react2.default.createElement('div', {
      className: middleClassName,
      style: { backgroundColor: color }
    }),
    showStop && _react2.default.createElement('div', {
      className: _styles.rootClassName + '__stop',
      style: { backgroundColor: endColor || color }
    })
  );
}

LegLine.propTypes = {
  className: _propTypes2.default.string,
  color: _propTypes2.default.string,
  direction: _propTypes2.default.oneOf(['horizontal', 'vertical']),
  endColor: _propTypes2.default.string,
  pattern: _propTypes2.default.oneOf(['line', 'dashed', 'dotted', 'wave']),
  startColor: _propTypes2.default.string,
  showStart: _propTypes2.default.bool,
  showLine: _propTypes2.default.bool,
  showStop: _propTypes2.default.bool
};
LegLine.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'LegLine',
  'props': {
    'direction': {
      'defaultValue': {
        'value': '\'horizontal\'',
        'computed': false
      },
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'horizontal\'',
          'computed': false
        }, {
          'value': '\'vertical\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'showStart': {
      'defaultValue': {
        'value': 'true',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'showLine': {
      'defaultValue': {
        'value': 'true',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'showStop': {
      'defaultValue': {
        'value': 'true',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'color': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'endColor': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    },
    'pattern': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'line\'',
          'computed': false
        }, {
          'value': '\'dashed\'',
          'computed': false
        }, {
          'value': '\'dotted\'',
          'computed': false
        }, {
          'value': '\'wave\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'startColor': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    }
  }
};