'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BreadCrumbs = BreadCrumbs;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./styles.css');

var _styles = {
  'rootClassName': 'entur-breadcrumbs',
  'entur-breadcrumbs': 'entur-breadcrumbs'
};

var _Crumb = require('./Crumb');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function BreadCrumbs(_ref) {
  var children = _ref.children,
      variant = _ref.variant,
      disabled = _ref.disabled,
      className = _ref.className;

  var classNames = (0, _classnames2.default)(_styles.rootClassName, _defineProperty({
    disabled: disabled
  }, _styles.rootClassName + '--variant-' + variant, variant), className);

  var childrenArray = _react2.default.Children.toArray(children);

  var filteredChildren = childrenArray.map(function (child) {
    if (child.type === _Crumb.Crumb) {
      return _react2.default.cloneElement(child, { variant: variant });
    }
  });

  return _react2.default.createElement(
    'nav',
    { className: classNames },
    filteredChildren
  );
}

BreadCrumbs.propTypes = {
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,
  variant: _propTypes2.default.oneOf(['midnight']),
  disabled: _propTypes2.default.bool,
  className: _propTypes2.default.string
};

BreadCrumbs.defaultProps = {
  disabled: false
};
BreadCrumbs.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'BreadCrumbs',
  'props': {
    'disabled': {
      'defaultValue': {
        'value': 'false',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'children': {
      'type': {
        'name': 'union',
        'value': [{
          'name': 'arrayOf',
          'value': {
            'name': 'node'
          }
        }, {
          'name': 'node'
        }]
      },
      'required': true,
      'description': ''
    },
    'variant': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'midnight\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    }
  }
};