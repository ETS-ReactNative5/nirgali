'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Crumb = Crumb;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _chevron = require('../../icons/arrows/chevron');

var _chevron2 = _interopRequireDefault(_chevron);

var _constants = require('../../../utils/constants');

require('./styles.css');

var _styles = {
  'rootClassName': 'entur-crumb',
  'entur-crumb': 'entur-crumb',
  'entur-crumb__arrow': 'entur-crumb__arrow',
  'entur-crumb--isFinal': 'entur-crumb--isFinal',
  'entur-crumb--variant-midnight': 'entur-crumb--variant-midnight'
};

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Crumb(_ref) {
  var _cx;

  var children = _ref.children,
      variant = _ref.variant,
      isFinal = _ref.isFinal,
      className = _ref.className;

  var classNames = (0, _classnames2.default)(_styles.rootClassName, className, (_cx = {}, _defineProperty(_cx, _styles.rootClassName + '--variant-' + variant, variant), _defineProperty(_cx, _styles.rootClassName + '--isFinal', isFinal), _cx));
  return _react2.default.createElement(
    'div',
    { className: classNames },
    children,
    !isFinal && _react2.default.createElement(_chevron2.default, {
      className: _styles.rootClassName + '__arrow',
      color: variant === 'midnight' ? _constants.COLORS.LAVENDER : _constants.COLORS.BLUE_40
    })
  );
}

Crumb.propTypes = {
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,
  variant: _propTypes2.default.oneOf(['midnight']),
  isFinal: _propTypes2.default.bool,
  className: _propTypes2.default.string
};

Crumb.defaultProps = {
  isFinal: false
};
Crumb.__docgenInfo = {
  'description': '',
  'methods': [],
  'displayName': 'Crumb',
  'props': {
    'isFinal': {
      'defaultValue': {
        'value': 'false',
        'computed': false
      },
      'type': {
        'name': 'bool'
      },
      'required': false,
      'description': ''
    },
    'children': {
      'type': {
        'name': 'union',
        'value': [{
          'name': 'arrayOf',
          'value': {
            'name': 'node'
          }
        }, {
          'name': 'node'
        }]
      },
      'required': true,
      'description': ''
    },
    'variant': {
      'type': {
        'name': 'enum',
        'value': [{
          'value': '\'midnight\'',
          'computed': false
        }]
      },
      'required': false,
      'description': ''
    },
    'className': {
      'type': {
        'name': 'string'
      },
      'required': false,
      'description': ''
    }
  }
};