const { writeFileSync } = require('fs');
const { join } = require('path');
const sassExtract = require('sass-extract');
const { CLIEngine } = require('eslint');

const colorsPath = join(__dirname, '../src/styles/_colors.scss');
const configPath = join(__dirname, '../src/styles/_config.scss');
const outputPath = join(__dirname, '../src/utils/constants.js');

function generateJsColorName(sassName) {
  return sassName
    .replace('$', '')
    .replace(/-/g, '_')
    .toUpperCase();
}

function getValue(variable) {
  switch (variable.type) {
    case 'SassColor':
      return variable.value.hex;
    case 'SassString':
      return variable.value;
    case 'SassNumber':
      return !variable.unit || variable.unit === 'px'
        ? variable.value
        : `${variable.value}${variable.unit}`;
    case 'SassList':
      return variable.value.map(getValue);
    default:
      console.info(`Unknown variable of type ${variable.type}. Skipping...`);
  }
}

function getVariablesFromSassFile(file) {
  const { vars } = sassExtract.renderSync({ file });
  return Object.keys(vars.global).reduce((obj, variableName) => {
    const key = generateJsColorName(variableName);
    const variable = vars.global[variableName];

    obj[key] = getValue(variable);
    return obj;
  }, {});
}

const CONFIG = getVariablesFromSassFile(configPath);
const COLORS = getVariablesFromSassFile(colorsPath);

const code = `
// Generated with scripts/extractConstants.js
export const CONFIG = ${JSON.stringify(CONFIG, undefined, 2)}

export const COLORS = ${JSON.stringify(COLORS, undefined, 2)}
`.trimStart();

const engine = new CLIEngine({ fix: true });
const report = engine.executeOnText(code);
const result = report.results[0];

writeFileSync(outputPath, result.output);
