import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';

import {
  widthLabelClassName, labelClassName, inputClassName,
} from './styles.scss';

function JustInput(props) {
  const { id, type, className, value, variant, size, checked, disabled, indeterminate, ...rest } = props;

  const classNames = cx(inputClassName, {
    [`${inputClassName}--variant-${variant}`]: variant,
    [`${inputClassName}--size-${size}`]: size,
  }, className);

  const setIndeterminateState = inputElement => {
    if (inputElement) {
      inputElement.indeterminate = indeterminate;
    }
  };

  return (
    <input
      id={id}
      ref={setIndeterminateState}
      className={classNames}
      type={type}
      value={value}
      checked={checked}
      disabled={disabled}
      {...rest}
    />
  );
}

const justInputPropTypes = {
  id: PropTypes.string,
  value: PropTypes.any,
  checked: PropTypes.bool,
  name: PropTypes.string,
  variant: PropTypes.oneOf(['default', 'midnight']).isRequired,
  size: PropTypes.oneOf(['md', 'lg']).isRequired,
  className: PropTypes.string,
  onChange: PropTypes.func,
  disabled: PropTypes.bool,
};

JustInput.propTypes = {
  ...justInputPropTypes,
  type: PropTypes.oneOf(['checkbox', 'radio']).isRequired,
};

JustInput.defaultProps = {
  variant: 'default',
  size: 'md',
  onChange: () => {},
};

export function JustCheckbox(props) {
  return <JustInput {...props} type="checkbox" />;
}

JustCheckbox.propTypes = justInputPropTypes;

export function JustRadio(props) {
  return <JustInput {...props} type="radio" />;
}

JustCheckbox.propTypes = justInputPropTypes;

function InputWithLabel(props) {
  const { id, className, inputType, label, ...rest } = props;

  const classNames = cx(widthLabelClassName, className);

  return (
    <div className={classNames}>
      <JustInput id={id} type={inputType} {...rest} />
      <label htmlFor={id} className={labelClassName}>
        {label}
      </label>
    </div>
  );

}

const inputWithLabelPropTypes = {
  id: PropTypes.string,
  className: PropTypes.string,
  label: PropTypes.string,
};

InputWithLabel.propTypes = {
  ...inputWithLabelPropTypes,
  inputType: PropTypes.oneOf(['checkbox', 'radio']).isRequired,
};

export function Checkbox(props) {
  return <InputWithLabel {...props} inputType="checkbox" />;
}

Checkbox.propTypes = inputWithLabelPropTypes;

export function Radio(props) {
  return <InputWithLabel {...props} inputType="radio" />;
}

Radio.propTypes = inputWithLabelPropTypes;
