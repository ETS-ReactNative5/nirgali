import React from 'react';
import PropTypes from 'prop-types';

import InputButton from './inputButton';
import { getClassNames, getFocusClassName } from './helper';
import { rootClassName } from './styles.scss';

import LoadingSpinner from '../loadingSpinner';

const propTypes = {
  className: PropTypes.string,
  children: PropTypes.node.isRequired,
  disabled: PropTypes.bool,
  variant: PropTypes.oneOf(['primary', 'secondary', 'success', 'negative']),
  size: PropTypes.oneOf(['md', 'lg']).isRequired,
  width: PropTypes.oneOf(['md', 'lg', 'fluid', 'square']),
  active: PropTypes.bool,
  loading: PropTypes.bool,
  refCallback: PropTypes.func,
};

const defaultProps = {
  variant: 'primary',
  size: 'md',
  loading: false,
};


export function Button({
  className,
  children,
  variant,
  size,
  width,
  active,
  refCallback,
  loading,
  ...rest
}) {
  const classNames = getClassNames(rootClassName, {
    className, variant, size, width, active, loading,
  });

  return (
    <button {...rest} ref={refCallback} className={classNames}>
      {children}
      {loading &&
        <LoadingSpinner className={`${rootClassName}__loading-spinner`} variant={ variant } />
      }
    </button>
  );
}

Button.propTypes = propTypes;
Button.defaultProps = defaultProps;


export function LinkButton({
  className,
  children,
  variant,
  size,
  width,
  active,
  refCallback,
  loading,
  ...rest
}) {
  const classNames = getClassNames(rootClassName, {
    className, variant, size, width, active,
  });

  return (
    <a {...rest} ref={refCallback} className={classNames}>
      {children}
    </a>
  );
}

LinkButton.propTypes = propTypes;
LinkButton.defaultProps = defaultProps;


export function CheckboxButton({
  className,
  children,
  variant,
  size,
  width,
  active,
  disabled,
  loading,
  ...rest
}) {
  const classNames = getClassNames(rootClassName, {
    className, variant, size, width, active, disabled,
  });

  return (
    <InputButton
      {...rest}
      className={classNames}
      focusClassName={getFocusClassName(rootClassName)}
      type="checkbox"
      checked={active}
      disabled={disabled}
    >
      {children}
    </InputButton>
  );
}

CheckboxButton.propTypes = propTypes;
CheckboxButton.defaultProps = defaultProps;


export function RadioButton({
  className,
  children,
  variant,
  size,
  width,
  active,
  disabled,
  loading,
  ...rest
}) {
  const classNames = getClassNames(rootClassName, {
    className, variant, size, width, active, disabled,
  });

  return (
    <InputButton
      {...rest}
      className={classNames}
      focusClassName={getFocusClassName(rootClassName)}
      type="radio"
      checked={active}
      disabled={disabled}
    >
      {children}
    </InputButton>
  );
}

RadioButton.propTypes = propTypes;
RadioButton.defaultProps = defaultProps;
