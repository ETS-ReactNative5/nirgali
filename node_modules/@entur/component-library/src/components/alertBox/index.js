import React from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';

import ErrorIcon from '../icons/ui/error';
import ExclamationIcon from '../icons/ui/exclamation';
import SuccessIcon from '../icons/ui/success';
import InfoIcon from '../icons/ui/info';
import CloseIcon from '../icons/ui/close';
import { COLORS } from '../../utils/constants';

import { rootClassName } from './style.scss';

function getIcon(level, size) {
  const iconSize = size === 'large' ? { height: 40, width: 40 } : undefined;

  switch (level) {
    case 'success':
      return (
        <SuccessIcon backgroundColor={COLORS.DARK_MINT} { ...iconSize } />
      );
    case 'error':
      return (
        <ErrorIcon backgroundColor={COLORS.LAVA} { ...iconSize } />
      );
    case 'warning':
      return (
        <ExclamationIcon backgroundColor={COLORS.BLUE} { ...iconSize } />
      );
    case 'info':
      return (
        <InfoIcon backgroundColor={COLORS.BLUE} { ...iconSize } />
      );
  }
}

export function AlertBox({ level, title, children, size, className, icon, onClose, ...rest }) {
  const classNames = cx(
    rootClassName,
    `${rootClassName}--level-${level}`,
    `${rootClassName}--size-${size}`,
    className
  );

  return (
    <div className={classNames} { ...rest }>
      <div className={`${rootClassName}__icon`}>
        { icon || getIcon(level, size)}
      </div>

      <div className={`${rootClassName}__content`}>
        {title && <div className={`${rootClassName}__title`}>{title}</div>}
        <div className={`${rootClassName}__message`}>{children}</div>
      </div>

      {onClose &&
        <button className={`${rootClassName}__close-button`} onClick={onClose} >
          <CloseIcon />
        </button>
      }
    </div>
  );
}

AlertBox.propTypes = {
  icon: PropTypes.node,
  children: PropTypes.node,
  level: PropTypes.oneOf(['success', 'error', 'warning', 'info']),
  title: PropTypes.string,
  size: PropTypes.oneOf(['small', 'medium', 'large']),
  className: PropTypes.string,
  onClose: PropTypes.func,
};

AlertBox.defaultProps = {
  level: 'info',
  size: 'medium',
};
