import React, { Component } from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';

import { rootClassName } from './styles.scss';

export class Tooltip extends Component {
  constructor(props) {
    super(props);
    this.state = {
      showTooltip: false,
    };

    this.showTooltip = this.showTooltip.bind(this);
    this.hideTooltip = this.hideTooltip.bind(this);
  }

  showTooltip() {
    this.setState({ showTooltip: true });
  }

  hideTooltip() {
    this.setState({ showTooltip: false });
  }

  render() {
    const { content, children, className, placement } = this.props;
    const { showTooltip } = this.state;

    const classNames = cx(
      rootClassName,
      className,
      `${rootClassName}--${placement}`
    );

    return (
      <div
        className={`${rootClassName}-wrapper`}
        onMouseLeave={this.hideTooltip}
      >
        {showTooltip && <div className={classNames}>{content}</div>}
        <span
          className={`${rootClassName}--trigger`}
          onMouseOver={this.showTooltip}
        >
          {children}
        </span>
      </div>
    );
  }
}

Tooltip.propTypes = {
  content: PropTypes.node,
  children: PropTypes.node,
  className: PropTypes.string,
  placement: PropTypes.oneOf([
    'top-left',
    'top',
    'top-right',
    'left',
    'right',
    'bottom-left',
    'bottom',
    'bottom-right',
  ]),
};

Tooltip.defaultProps = {
  content: '',
  placement: 'top',
};
