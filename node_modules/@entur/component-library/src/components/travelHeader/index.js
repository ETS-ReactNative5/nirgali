import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';

import { rootClassName } from './styles.scss';

export function TravelHeader(props) {
  const {
    from,
    to,
    variant = '',
    dividerColor,
    a11yFromPrefix,
    a11yToPrefix,
    HeaderElement,
    ...rest
  } = props;

  const classNames = cx(rootClassName, {
    [`${rootClassName}--variant-${variant}`]: variant,
  });

  return (
    <HeaderElement className={ classNames } { ...rest }>
      <div className={`${rootClassName}__title`}>
        <span className="visuallyhidden">
          { a11yFromPrefix }
        </span>
        { from }
      </div>
      <div className={`${rootClassName}__to-container`}>
        <div
          className={`${rootClassName}__title-divider`}
          style={ dividerColor ? { backgroundColor: dividerColor } : undefined }
        >
          <span className="visuallyhidden">
            { a11yToPrefix }
          </span>
        </div>
        <div className={`${rootClassName}__title`}>
          { to }
        </div>
      </div>
    </HeaderElement>
  );
}

TravelHeader.defaultProps = {
  a11yFromPrefix: 'Fra',
  a11yToPrefix: 'til',
  HeaderElement: 'h2',
};

TravelHeader.propTypes = {
  from: PropTypes.string.isRequired,
  to: PropTypes.string.isRequired,
  HeaderElement: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4']),
  variant: PropTypes.oneOf(['midnight']),
  dividerColor: PropTypes.string,
  /** An invisible prefix to <from> for accessibility purposes */
  a11yFromPrefix: PropTypes.string,
  /** An invisible prefix to <to> for accessibility purposes */
  a11yToPrefix: PropTypes.string,
};
