import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';

import Chevron from '../../icons/arrows/chevron';

import { COLORS } from '../../../utils/constants';
import { rootClassName } from './styles.scss';

export function Crumb({ children, variant, isFinal, className }) {
  const classNames = cx(rootClassName, className, {
    [`${rootClassName}--variant-${variant}`]: variant,
    [`${rootClassName}--isFinal`]: isFinal,
  });
  return (
    <div className={classNames}>
      {children}
      {!isFinal && (
        <Chevron
          className={`${rootClassName}__arrow`}
          color={variant === 'midnight' ? COLORS.LAVENDER : COLORS.BLUE_40}
        />
      )}
    </div>
  );
}

Crumb.propTypes = {
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node,
  ]).isRequired,
  variant: PropTypes.oneOf(['midnight']),
  isFinal: PropTypes.bool,
  className: PropTypes.string,
};

Crumb.defaultProps = {
  isFinal: false,
};
