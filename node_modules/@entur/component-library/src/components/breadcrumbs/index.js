import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';

import { rootClassName } from './styles.scss';
import { Crumb } from './Crumb';

export function BreadCrumbs({ children, variant, disabled, className }) {
  const classNames = cx(
    rootClassName,
    {
      disabled,
      [`${rootClassName}--variant-${variant}`]: variant,
    },
    className
  );

  const childrenArray = React.Children.toArray(children);

  const filteredChildren = childrenArray.map(child => {
    if(child.type === Crumb) {
      return React.cloneElement(child, { variant });
    }
  });

  return <nav className={classNames}>{filteredChildren}</nav>;
}

BreadCrumbs.propTypes = {
  children: PropTypes.oneOfType([
    PropTypes.arrayOf(PropTypes.node),
    PropTypes.node,
  ]).isRequired,
  variant: PropTypes.oneOf(['midnight']),
  disabled: PropTypes.bool,
  className: PropTypes.string,
};

BreadCrumbs.defaultProps = {
  disabled: false,
};
