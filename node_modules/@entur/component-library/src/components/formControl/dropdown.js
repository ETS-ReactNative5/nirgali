import React from 'react';
import PropTypes from 'prop-types';
import cx from 'classnames';

import { getClassNames, FormControlWrapper } from './';
import { rootClassName } from './styles.scss';

export function DropDownOptions({ value, label, ...rest }) {
  return (
    <option value={value} {...rest}>
      {label}
    </option>
  );
}

DropDownOptions.propTypes = {
  label: PropTypes.string.isRequired,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
};

export function DropDown({
  className,
  variant,
  size,
  width,
  valid,
  disabled,
  refCallback,
  prepend,
  append,
  children,
  style,
  ...rest
}) {
  const classNames = getClassNames(rootClassName, {
    variant,
    size,
    width,
    valid,
    prepend,
    append,
  });

  const childrenArray = React.Children.toArray(children);
  const isOnlyDropDownOptions = childrenArray.every(
    ({ type }) => type === DropDownOptions
  );

  if (!isOnlyDropDownOptions) {
    throw new Error('DropDown only allow children of type DropDownOptions');
  }

  if (!prepend && !append) {
    return (
      <select
        {...rest}
        ref={refCallback}
        className={cx(classNames, className)}
        style={style}
        disabled={disabled}
      >
        {children}
      </select>
    );
  }

  return (
    <FormControlWrapper
      prepend={prepend}
      append={append}
      valid={valid}
      variant={variant}
      size={size}
      width={width}
      className={className}
      style={style}
      disabled={disabled}
    >
      <select
        {...rest}
        ref={refCallback}
        className={classNames}
        disabled={disabled}
      >
        {children}
      </select>
    </FormControlWrapper>
  );
}

DropDown.propTypes = {
  append: PropTypes.node,
  className: PropTypes.string,
  onChange: PropTypes.func,
  size: PropTypes.oneOf(['md', 'lg']).isRequired,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  valid: PropTypes.oneOf(['success', 'error', 'warning', 'info', 'none']),
  variant: PropTypes.oneOf(['primary', 'midnight']),
  width: PropTypes.oneOf(['fluid']),
  prepend: PropTypes.node,
  disabled: PropTypes.bool,
  children: PropTypes.node,
  style: PropTypes.object,
  refCallback: PropTypes.func,
};

DropDown.defaultProps = {
  size: 'md',
  value: '',
};
