{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.ButtonGroup = ButtonGroup;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _ = require('./');\n\nrequire('./styles.css');\n\nvar _styles = {\n  'buttonClassName': 'entur-form-control--button',\n  'buttonGroupClassName': 'entur-button-group',\n  'inputGroupClassName': 'entur-input-group',\n  'rootClassName': 'entur-form-control',\n  'entur-form-control': 'entur-form-control',\n  'entur-form-control-prepend': 'entur-form-control-prepend',\n  'entur-form-control-append': 'entur-form-control-append',\n  'entur-form-control--disabled': 'entur-form-control--disabled',\n  'entur-form-control-prepend--disabled': 'entur-form-control-prepend--disabled',\n  'entur-form-control-append--disabled': 'entur-form-control-append--disabled',\n  'entur-form-control--has-focus': 'entur-form-control--has-focus',\n  'entur-form-control-prepend--has-focus': 'entur-form-control-prepend--has-focus',\n  'entur-form-control-append--has-focus': 'entur-form-control-append--has-focus',\n  'entur-form-control--size-md': 'entur-form-control--size-md',\n  'entur-form-control-prepend--size-md': 'entur-form-control-prepend--size-md',\n  'entur-form-control-append--size-md': 'entur-form-control-append--size-md',\n  'entur-form-control--size-lg': 'entur-form-control--size-lg',\n  'entur-form-control-prepend--size-lg': 'entur-form-control-prepend--size-lg',\n  'entur-form-control-append--size-lg': 'entur-form-control-append--size-lg',\n  'entur-form-control--is-prepended': 'entur-form-control--is-prepended',\n  'entur-form-control-prepend--is-prepended': 'entur-form-control-prepend--is-prepended',\n  'entur-form-control-append--is-prepended': 'entur-form-control-append--is-prepended',\n  'entur-form-control--is-appended': 'entur-form-control--is-appended',\n  'entur-form-control-prepend--is-appended': 'entur-form-control-prepend--is-appended',\n  'entur-form-control-append--is-appended': 'entur-form-control-append--is-appended',\n  'entur-form-control--valid-success': 'entur-form-control--valid-success',\n  'entur-form-control-prepend--valid-success': 'entur-form-control-prepend--valid-success',\n  'entur-form-control-append--valid-success': 'entur-form-control-append--valid-success',\n  'entur-form-control--valid-error': 'entur-form-control--valid-error',\n  'entur-form-control-prepend--valid-error': 'entur-form-control-prepend--valid-error',\n  'entur-form-control-append--valid-error': 'entur-form-control-append--valid-error',\n  'entur-form-control--width-fluid': 'entur-form-control--width-fluid',\n  'entur-form-control-prepend--width-fluid': 'entur-form-control-prepend--width-fluid',\n  'entur-form-control-append--width-fluid': 'entur-form-control-append--width-fluid',\n  'entur-form-control--variant-midnight': 'entur-form-control--variant-midnight',\n  'entur-form-control-prepend--variant-midnight': 'entur-form-control-prepend--variant-midnight',\n  'entur-form-control-append--variant-midnight': 'entur-form-control-append--variant-midnight',\n  'entur-form-control--button': 'entur-form-control--button',\n  'entur-form-control--active': 'entur-form-control--active',\n  'entur-button-group': 'entur-button-group',\n  'entur-button-group__btn': 'entur-button-group__btn',\n  'entur-button-group--width-fluid': 'entur-button-group--width-fluid',\n  'entur-input-group': 'entur-input-group',\n  'entur-input-group--width-fluid': 'entur-input-group--width-fluid'\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar CHILDREN_WHITELIST = [_.RadioFormButton, _.CheckboxFormButton, _.LinkFormButton];\n\nfunction ButtonGroup(_ref) {\n  var _cx;\n\n  var id = _ref.id,\n      className = _ref.className,\n      name = _ref.name,\n      children = _ref.children,\n      variant = _ref.variant,\n      size = _ref.size,\n      width = _ref.width,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, ['id', 'className', 'name', 'children', 'variant', 'size', 'width', 'value']);\n\n  var combinedClassNames = (0, _classnames2.default)(_styles.buttonGroupClassName, className, (_cx = {}, _defineProperty(_cx, _styles.buttonGroupClassName + '--width-' + width, width), _defineProperty(_cx, _styles.buttonGroupClassName + '--' + variant, variant), _cx));\n\n  var childrenArray = _react2.default.Children.toArray(children);\n\n  var buttons = childrenArray.map(function (child, index) {\n    if (!CHILDREN_WHITELIST.includes(child.type)) {\n      var whitelistNames = CHILDREN_WHITELIST.map(function (_ref2) {\n        var name = _ref2.name;\n        return name;\n      });\n      throw new Error('ButtonGroup only allow children of type ' + whitelistNames.join(', ') + ', ' + child.type + ' is not allowed');\n    }\n\n    var active = value !== undefined ? value === child.props.value : child.props.active;\n    return _react2.default.cloneElement(child, _extends({\n      id: id ? id + '-' + index : undefined,\n      className: (0, _classnames2.default)(_styles.buttonGroupClassName + '__btn', child.props.className),\n      name: name,\n      size: size,\n      active: active,\n      variant: variant\n    }, rest));\n  });\n  return _react2.default.createElement('div', {\n    className: combinedClassNames\n  }, buttons);\n}\n\nButtonGroup.propTypes = {\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.node.isRequired,\n  id: _propTypes2.default.string,\n  name: _propTypes2.default.string,\n  variant: _propTypes2.default.oneOf(['midnight', 'primary']),\n  size: _propTypes2.default.oneOf(['md', 'lg']).isRequired,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  width: _propTypes2.default.oneOf(['fluid'])\n};\nButtonGroup.defaultProps = {\n  onChange: function onChange() {},\n  variant: 'primary',\n  size: 'md'\n};\nButtonGroup.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'ButtonGroup',\n  'props': {\n    'onChange': {\n      'defaultValue': {\n        'value': '() => {}',\n        'computed': false\n      },\n      'required': false\n    },\n    'variant': {\n      'defaultValue': {\n        'value': '\\'primary\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'midnight\\'',\n          'computed': false\n        }, {\n          'value': '\\'primary\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': true,\n      'description': ''\n    },\n    'id': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'name': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'value': {\n      'type': {\n        'name': 'union',\n        'value': [{\n          'name': 'string'\n        }, {\n          'name': 'number'\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'width': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'fluid\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}