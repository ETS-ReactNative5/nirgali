{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.CheckboxGroup = CheckboxGroup;\nexports.RadioGroup = RadioGroup;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _index = require('./index');\n\nvar _panel = require('./panel');\n\nrequire('./group.css');\n\nvar _group = {\n  'groupClassName': 'entur-radio-checkbox-group',\n  'entur-radio-checkbox-group': 'entur-radio-checkbox-group',\n  'entur-radio-checkbox-group--horizontal': 'entur-radio-checkbox-group--horizontal',\n  'entur-radio-checkbox': 'entur-radio-checkbox',\n  'entur-radio-checkbox-group--vertical': 'entur-radio-checkbox-group--vertical',\n  'entur-radio-panel': 'entur-radio-panel',\n  'entur-radio-panel--variant-default': 'entur-radio-panel--variant-default',\n  'entur-radio-panel--variant-midnight': 'entur-radio-panel--variant-midnight'\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CHECKBOX_WHITE_LIST = [_index.Checkbox, _panel.CheckboxPanel];\nvar RADIO_WHITE_LIST = [_index.Radio, _panel.RadioPanel];\n\nfunction getClassNames(className, direction) {\n  return (0, _classnames2.default)(_group.groupClassName, className, _defineProperty({}, _group.groupClassName + '--' + direction, direction));\n}\n\nfunction ensureCorrectType(child, MustBeOfType) {\n  if (child && MustBeOfType.every(function (type) {\n    return child.type !== type;\n  })) {\n    var calleeName = 'Group';\n    var allowedTypesNames = MustBeOfType.map(function (_ref) {\n      var name = _ref.name;\n      return name;\n    }).join(', ');\n    throw new Error(calleeName + ' only allow children of types ' + allowedTypesNames);\n  }\n}\n\nfunction CheckboxGroup(props) {\n  var id = props.id,\n      onChange = props.onChange,\n      direction = props.direction,\n      className = props.className,\n      children = props.children,\n      rest = _objectWithoutProperties(props, ['id', 'onChange', 'direction', 'className', 'children']);\n\n  var classNames = getClassNames(className, direction);\n  return _react2.default.createElement('div', _extends({\n    id: id,\n    className: classNames\n  }, rest), _react.Children.map(children, function (child, index) {\n    ensureCorrectType(child, CHECKBOX_WHITE_LIST);\n\n    if (!child) {\n      return child;\n    }\n\n    return (0, _react.cloneElement)(child, {\n      id: id + '-' + index,\n      onChange: onChange\n    });\n  }));\n}\n\nCheckboxGroup.propTypes = {\n  id: _propTypes2.default.string.isRequired,\n  children: _propTypes2.default.node.isRequired,\n  className: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  direction: _propTypes2.default.oneOf(['horizontal', 'vertical'])\n};\nCheckboxGroup.defaultProps = {\n  direction: 'vertical'\n};\n\nfunction RadioGroup(props) {\n  var id = props.id,\n      name = props.name,\n      value = props.value,\n      onChange = props.onChange,\n      direction = props.direction,\n      className = props.className,\n      children = props.children,\n      rest = _objectWithoutProperties(props, ['id', 'name', 'value', 'onChange', 'direction', 'className', 'children']);\n\n  var classNames = getClassNames(className, direction);\n  return _react2.default.createElement('div', _extends({\n    id: id,\n    className: classNames\n  }, rest), _react.Children.map(children, function (child, index) {\n    ensureCorrectType(child, RADIO_WHITE_LIST);\n\n    if (!child) {\n      return child;\n    }\n\n    return (0, _react.cloneElement)(child, {\n      id: id + '-' + index,\n      name: name,\n      onChange: onChange,\n      checked: child.props.value === value\n    });\n  }));\n}\n\nRadioGroup.propTypes = {\n  name: _propTypes2.default.string.isRequired,\n  onChange: _propTypes2.default.func,\n  direction: _propTypes2.default.oneOf(['horizontal', 'vertical']),\n  value: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string.isRequired,\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.node.isRequired\n};\nRadioGroup.defaultProps = {\n  direction: 'vertical'\n};\nCheckboxGroup.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'CheckboxGroup',\n  'props': {\n    'direction': {\n      'defaultValue': {\n        'value': '\\'vertical\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'horizontal\\'',\n          'computed': false\n        }, {\n          'value': '\\'vertical\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'id': {\n      'type': {\n        'name': 'string'\n      },\n      'required': true,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': true,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'onChange': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};\nRadioGroup.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'RadioGroup',\n  'props': {\n    'direction': {\n      'defaultValue': {\n        'value': '\\'vertical\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'horizontal\\'',\n          'computed': false\n        }, {\n          'value': '\\'vertical\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'name': {\n      'type': {\n        'name': 'string'\n      },\n      'required': true,\n      'description': ''\n    },\n    'onChange': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    },\n    'value': {\n      'type': {\n        'name': 'string'\n      },\n      'required': true,\n      'description': ''\n    },\n    'id': {\n      'type': {\n        'name': 'string'\n      },\n      'required': true,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': true,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}