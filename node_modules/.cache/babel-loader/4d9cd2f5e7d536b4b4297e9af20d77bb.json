{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InputButton = function (_Component) {\n  _inherits(InputButton, _Component);\n\n  function InputButton() {\n    _classCallCheck(this, InputButton);\n\n    var _this = _possibleConstructorReturn(this, (InputButton.__proto__ || Object.getPrototypeOf(InputButton)).call(this));\n\n    _this.refHandler = function (el) {\n      var refCallback = _this.props.refCallback;\n      _this.inputEl = el;\n      refCallback && refCallback(el);\n    };\n\n    _this.state = {\n      hasFocus: false\n    };\n    _this.handleInputFocus = _this.toggleFocus.bind(_this, true);\n    _this.handleInputBlur = _this.toggleFocus.bind(_this, false);\n    return _this;\n  }\n\n  _createClass(InputButton, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.inputEl.addEventListener('focus', this.handleInputFocus);\n      this.inputEl.addEventListener('blur', this.handleInputBlur);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.inputEl.removeEventListener('focus', this.handleInputFocus);\n      this.inputEl.removeEventListener('blur', this.handleInputBlur);\n    }\n  }, {\n    key: 'toggleFocus',\n    value: function toggleFocus(hasFocus) {\n      this.setState({\n        hasFocus: hasFocus\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          id = _props.id,\n          className = _props.className,\n          focusClassName = _props.focusClassName,\n          type = _props.type,\n          children = _props.children,\n          value = _props.value,\n          checked = _props.checked,\n          disabled = _props.disabled,\n          refCallback = _props.refCallback,\n          style = _props.style,\n          rest = _objectWithoutProperties(_props, ['id', 'className', 'focusClassName', 'type', 'children', 'value', 'checked', 'disabled', 'refCallback', 'style']);\n\n      var hasFocus = this.state.hasFocus;\n      var classNames = (0, _classnames2.default)(className, _defineProperty({}, focusClassName, hasFocus));\n      return _react2.default.createElement('label', {\n        htmlFor: id,\n        className: classNames,\n        style: style\n      }, children, _react2.default.createElement('input', _extends({\n        ref: this.refHandler,\n        id: id,\n        className: 'visuallyhidden',\n        type: type,\n        value: value,\n        checked: checked,\n        disabled: disabled\n      }, rest)));\n    }\n  }]);\n\n  return InputButton;\n}(_react.Component);\n\nInputButton.propTypes = {\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string.isRequired,\n  focusClassName: _propTypes2.default.string,\n  type: _propTypes2.default.oneOf(['checkbox', 'radio']),\n  checked: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  value: _propTypes2.default.string,\n  children: _propTypes2.default.node,\n  refCallback: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\nexports.default = InputButton;\nInputButton.__docgenInfo = {\n  'description': '',\n  'methods': [{\n    'name': 'toggleFocus',\n    'docblock': null,\n    'modifiers': [],\n    'params': [{\n      'name': 'hasFocus',\n      'type': null\n    }],\n    'returns': null\n  }, {\n    'name': 'refHandler',\n    'docblock': null,\n    'modifiers': [],\n    'params': [{\n      'name': 'el',\n      'type': null\n    }],\n    'returns': null\n  }],\n  'displayName': 'InputButton',\n  'props': {\n    'id': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': true,\n      'description': ''\n    },\n    'focusClassName': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'type': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'checkbox\\'',\n          'computed': false\n        }, {\n          'value': '\\'radio\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'checked': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'disabled': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'value': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'refCallback': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    },\n    'style': {\n      'type': {\n        'name': 'object'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}