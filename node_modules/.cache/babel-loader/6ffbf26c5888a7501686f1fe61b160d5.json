{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Home from './components/home';\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\n\nvar convert = require('xml-js');\n\nrequire('dotenv').config();\n\nconst firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nconsole.log(process.env);\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_TMDB_API_KEY\n};\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      key: 'GOA:Authority:GOA',\n      lines: '',\n      id: ''\n    };\n  }\n\n  componentDidMount() {\n    //api.organisationID(userInfo.id);\n    db.collection(this.state.key).get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.id === 'Issues') {\n          if (doc.data().PtSituationElement) {\n            this.setState({\n              data: doc.data(),\n              id: doc.id\n            });\n          } else {\n            this.setState({\n              data: {\n                PtSituationElement: []\n              },\n              id: doc.id\n            });\n          }\n        }\n      });\n    });\n    api.run(this.state.key, null, null).then(response => {\n      this.setState({\n        lines: response.data.lines\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, {\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:deviationId?\",\n      render: props => React.createElement(Edit, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: props => React.createElement(Register, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        lines: this.state.lines,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/overview\",\n      render: props => React.createElement(Overview, Object.assign({}, props, {\n        data: this.state.data,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst renderIndex = userInfo => {\n  ReactDOM.render(React.createElement(App, {\n    userInfo: userInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nrenderIndex(\"null\"); //auth.initAuth();\n\nexport default renderIndex;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Home","Overview","Register","Edit","auth","api","convert","require","config","firebase","console","log","process","env","firebaseConfig","apiKey","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_TMDB_API_KEY","initializeApp","db","firestore","App","Component","state","data","key","lines","id","componentDidMount","collection","get","then","querySnapshot","forEach","doc","PtSituationElement","setState","run","response","render","props","split","userInfo","logoutUrl","renderIndex","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Home from './components/home'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth'\nimport api from \"./api/api\";\nvar convert = require('xml-js');\nrequire('dotenv').config();\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nconsole.log(process.env);\n\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        key: 'GOA:Authority:GOA',\n        lines: '',\n        id: '',\n    };\n\n    componentDidMount() {\n        //api.organisationID(userInfo.id);\n\n        db.collection(this.state.key).get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                if(doc.id === 'Issues'){\n                    if(doc.data().PtSituationElement){\n                        this.setState({\n                            data: doc.data(),\n                            id: doc.id,\n                        });\n                    }else{\n                        this.setState({\n                            data: {PtSituationElement: []},\n                            id: doc.id,\n                        })\n                    }\n                }\n            });\n        });\n\n        api.run(this.state.key, null, null)\n            .then(response => {\n                this.setState({\n                    lines: response.data.lines\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path=\"/\" render={props => <Home {...props} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/edit/:deviationId?\" render={props =>\n                        <Edit {...props} data={this.state.data} firebase={db} docID={this.state.id}\n                              orgID={this.state.key} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/register\" render={props =>\n                        <Register {...props} data={this.state.data} firebase={db} docID={this.state.id}\n                                  orgID={this.state.key} lines={this.state.lines} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/overview\" render={props => <Overview {...props} data={this.state.data}\n                                                                       user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nconst renderIndex = (userInfo) => {\n    ReactDOM.render(\n        <App userInfo={userInfo} />,\n        document.getElementById('root')\n    );\n};\n\nrenderIndex(\"null\");\n//auth.initAuth();\n\nexport default renderIndex;"]},"metadata":{},"sourceType":"module"}