{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Home from './components/home';\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\nimport Keycloak from \"keycloak-js\";\nimport token from \"./authenticate/token\";\n\nconst firebase = require(\"firebase\");\n\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCKcRzWRYlZkwG4I4WTTb2uRnI7VczCX5M\",\n  authDomain: \"deviation-messages.firebaseapp.com\",\n  databaseURL: \"https://deviation-messages.firebaseio.com\",\n  projectId: \"deviation-messages\",\n  storageBucket: \"deviation-messages.appspot.com\",\n  messagingSenderId: \"132641363074\",\n  appId: \"1:132641363074:web:1069e5f0a9717b4c\"\n};\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      key: 'GOA:Authority:GOA'\n    };\n  }\n\n  componentDidUpdate(data) {\n    console.log(this.state.data);\n  }\n\n  componentDidMount() {\n    localStorage.setItem('netexAuthorityId', 'GOA:Authority:GOA'); //api.organisationID(userInfo.id);\n\n    db.collection(this.state.key).get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        this.setState({\n          data: doc.data()\n        });\n      });\n    });\n    const authorities = localStorage.getItem(\"netexAuthorityId\");\n    api.run('lines', authorities, null, null);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:deviationId?\",\n      component: Edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/overview\",\n      component: Overview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst renderIndex = userInfo => {\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), document.getElementById('root'));\n}; // Minimum number of seconds left of token before a refresh is needed\n\n\nconst minValiditySeconds = 60; // How often should lib check for valid token\n\nconst refreshRateMs = 10000;\n\nconst initAuth = () => {\n  const kc = new Keycloak('/key.json');\n  const options = {\n    checkLoginIframe: false\n  };\n  kc.init(options).success(authenticated => {\n    if (authenticated) {\n      token.save(kc.token);\n      setInterval(() => {\n        kc.updateToken(minValiditySeconds).error(() => kc.logout());\n        token.save(kc.token);\n      }, refreshRateMs);\n      const userInfo = {\n        logoutUrl: kc.createLogoutUrl(options),\n        familyName: kc.idTokenParsed.family_name,\n        givenName: kc.idTokenParsed.given_name,\n        email: kc.idTokenParsed.email,\n        username: kc.idTokenParsed.preferred_username,\n        id: kc.idTokenParsed.organisationID\n      };\n      renderIndex(userInfo);\n    } else {\n      kc.login();\n    }\n  });\n};\n\ninitAuth();","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Home","Overview","Register","Edit","auth","api","Keycloak","token","firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","App","Component","state","data","key","componentDidUpdate","console","log","componentDidMount","localStorage","setItem","collection","get","then","querySnapshot","forEach","doc","setState","authorities","getItem","run","render","renderIndex","userInfo","document","getElementById","minValiditySeconds","refreshRateMs","initAuth","kc","options","checkLoginIframe","init","success","authenticated","save","setInterval","updateToken","error","logout","logoutUrl","createLogoutUrl","familyName","idTokenParsed","family_name","givenName","given_name","email","username","preferred_username","id","organisationID","login"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Home from './components/home'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth'\nimport api from \"./api/api\";\nimport Keycloak from \"keycloak-js\";\nimport token from \"./authenticate/token\";\n\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCKcRzWRYlZkwG4I4WTTb2uRnI7VczCX5M\",\n    authDomain: \"deviation-messages.firebaseapp.com\",\n    databaseURL: \"https://deviation-messages.firebaseio.com\",\n    projectId: \"deviation-messages\",\n    storageBucket: \"deviation-messages.appspot.com\",\n    messagingSenderId: \"132641363074\",\n    appId: \"1:132641363074:web:1069e5f0a9717b4c\"\n};\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        key: 'GOA:Authority:GOA',\n    };\n\n    componentDidUpdate(data) {\n        console.log(this.state.data);\n    }\n\n    componentDidMount() {\n        localStorage.setItem('netexAuthorityId', 'GOA:Authority:GOA');\n\n        //api.organisationID(userInfo.id);\n\n        db.collection(this.state.key).get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                this.setState({\n                     data: doc.data(),\n                })\n            });\n        });\n\n        const authorities = localStorage.getItem(\"netexAuthorityId\");\n        api.run('lines', authorities, null, null);\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path=\"/\" component={Home} />\n                    <Route path=\"/edit/:deviationId?\" component={Edit} />\n                    <Route path=\"/register\" component={Register} />\n                    <Route path=\"/overview\" component={Overview} />\n                </div>\n            </Router>\n        )\n    }\n\n}\n\n\nconst renderIndex = (userInfo) => {\n\n    ReactDOM.render(\n        <App/>,\n        document.getElementById('root')\n    );\n};\n\n// Minimum number of seconds left of token before a refresh is needed\nconst minValiditySeconds = 60;\n\n// How often should lib check for valid token\nconst refreshRateMs = 10000;\n\nconst initAuth = () => {\n    const kc = new Keycloak('/key.json');\n    const options = { checkLoginIframe: false };\n    kc.init(options).success(authenticated => {\n        if (authenticated) {\n            token.save(kc.token);\n            setInterval(() => {\n                kc.updateToken(minValiditySeconds).error(() => kc.logout());\n                token.save(kc.token);\n            }, refreshRateMs);\n            const userInfo = {\n                logoutUrl: kc.createLogoutUrl(options),\n                familyName: kc.idTokenParsed.family_name,\n                givenName: kc.idTokenParsed.given_name,\n                email: kc.idTokenParsed.email,\n                username: kc.idTokenParsed.preferred_username,\n                id: kc.idTokenParsed.organisationID,\n            };\n            renderIndex(userInfo);\n        } else {\n            kc.login();\n        }\n    });\n};\n\ninitAuth();"]},"metadata":{},"sourceType":"module"}