{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.Button = Button;\nexports.LinkButton = LinkButton;\nexports.CheckboxButton = CheckboxButton;\nexports.RadioButton = RadioButton;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _inputButton = require('./inputButton');\n\nvar _inputButton2 = _interopRequireDefault(_inputButton);\n\nvar _helper = require('./helper');\n\nrequire('./styles.css');\n\nvar _styles = {\n  'groupClassName': 'entur-button-group',\n  'rootClassName': 'entur-button',\n  'entur-button': 'entur-button',\n  'entur-button--has-focus': 'entur-button--has-focus',\n  'entur-button--disabled': 'entur-button--disabled',\n  'entur-button--size-md': 'entur-button--size-md',\n  'entur-button--width-square': 'entur-button--width-square',\n  'entur-button--size-lg': 'entur-button--size-lg',\n  'entur-button--width-sm': 'entur-button--width-sm',\n  'entur-button--width-md': 'entur-button--width-md',\n  'entur-button--width-lg': 'entur-button--width-lg',\n  'entur-button--width-fluid': 'entur-button--width-fluid',\n  'entur-button--variant-primary': 'entur-button--variant-primary',\n  'entur-button--active': 'entur-button--active',\n  'entur-button--variant-secondary': 'entur-button--variant-secondary',\n  'entur-button--variant-success': 'entur-button--variant-success',\n  'entur-button--variant-negative': 'entur-button--variant-negative',\n  'entur-button--loading': 'entur-button--loading',\n  'entur-button__loading-spinner': 'entur-button__loading-spinner'\n};\n\nvar _loadingSpinner = require('../loadingSpinner');\n\nvar _loadingSpinner2 = _interopRequireDefault(_loadingSpinner);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar propTypes = {\n  className: _propTypes2.default.string,\n  children: _propTypes2.default.node.isRequired,\n  disabled: _propTypes2.default.bool,\n  variant: _propTypes2.default.oneOf(['primary', 'secondary', 'success', 'negative']),\n  size: _propTypes2.default.oneOf(['md', 'lg']).isRequired,\n  width: _propTypes2.default.oneOf(['md', 'lg', 'fluid', 'square']),\n  active: _propTypes2.default.bool,\n  loading: _propTypes2.default.bool,\n  refCallback: _propTypes2.default.func\n};\nvar defaultProps = {\n  variant: 'primary',\n  size: 'md',\n  loading: false\n};\n\nfunction Button(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      variant = _ref.variant,\n      size = _ref.size,\n      width = _ref.width,\n      active = _ref.active,\n      refCallback = _ref.refCallback,\n      loading = _ref.loading,\n      rest = _objectWithoutProperties(_ref, ['className', 'children', 'variant', 'size', 'width', 'active', 'refCallback', 'loading']);\n\n  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {\n    className: className,\n    variant: variant,\n    size: size,\n    width: width,\n    active: active,\n    loading: loading\n  });\n  return _react2.default.createElement('button', _extends({}, rest, {\n    ref: refCallback,\n    className: classNames\n  }), children, loading && _react2.default.createElement(_loadingSpinner2.default, {\n    className: _styles.rootClassName + '__loading-spinner',\n    variant: variant\n  }));\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nfunction LinkButton(_ref2) {\n  var className = _ref2.className,\n      children = _ref2.children,\n      variant = _ref2.variant,\n      size = _ref2.size,\n      width = _ref2.width,\n      active = _ref2.active,\n      refCallback = _ref2.refCallback,\n      loading = _ref2.loading,\n      rest = _objectWithoutProperties(_ref2, ['className', 'children', 'variant', 'size', 'width', 'active', 'refCallback', 'loading']);\n\n  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {\n    className: className,\n    variant: variant,\n    size: size,\n    width: width,\n    active: active\n  });\n  return _react2.default.createElement('a', _extends({}, rest, {\n    ref: refCallback,\n    className: classNames\n  }), children);\n}\n\nLinkButton.propTypes = propTypes;\nLinkButton.defaultProps = defaultProps;\n\nfunction CheckboxButton(_ref3) {\n  var className = _ref3.className,\n      children = _ref3.children,\n      variant = _ref3.variant,\n      size = _ref3.size,\n      width = _ref3.width,\n      active = _ref3.active,\n      disabled = _ref3.disabled,\n      loading = _ref3.loading,\n      rest = _objectWithoutProperties(_ref3, ['className', 'children', 'variant', 'size', 'width', 'active', 'disabled', 'loading']);\n\n  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {\n    className: className,\n    variant: variant,\n    size: size,\n    width: width,\n    active: active,\n    disabled: disabled\n  });\n  return _react2.default.createElement(_inputButton2.default, _extends({}, rest, {\n    className: classNames,\n    focusClassName: (0, _helper.getFocusClassName)(_styles.rootClassName),\n    type: 'checkbox',\n    checked: active,\n    disabled: disabled\n  }), children);\n}\n\nCheckboxButton.propTypes = propTypes;\nCheckboxButton.defaultProps = defaultProps;\n\nfunction RadioButton(_ref4) {\n  var className = _ref4.className,\n      children = _ref4.children,\n      variant = _ref4.variant,\n      size = _ref4.size,\n      width = _ref4.width,\n      active = _ref4.active,\n      disabled = _ref4.disabled,\n      loading = _ref4.loading,\n      rest = _objectWithoutProperties(_ref4, ['className', 'children', 'variant', 'size', 'width', 'active', 'disabled', 'loading']);\n\n  var classNames = (0, _helper.getClassNames)(_styles.rootClassName, {\n    className: className,\n    variant: variant,\n    size: size,\n    width: width,\n    active: active,\n    disabled: disabled\n  });\n  return _react2.default.createElement(_inputButton2.default, _extends({}, rest, {\n    className: classNames,\n    focusClassName: (0, _helper.getFocusClassName)(_styles.rootClassName),\n    type: 'radio',\n    checked: active,\n    disabled: disabled\n  }), children);\n}\n\nRadioButton.propTypes = propTypes;\nRadioButton.defaultProps = defaultProps;\nButton.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'Button',\n  'props': {\n    'variant': {\n      'defaultValue': {\n        'value': '\\'primary\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'primary\\'',\n          'computed': false\n        }, {\n          'value': '\\'secondary\\'',\n          'computed': false\n        }, {\n          'value': '\\'success\\'',\n          'computed': false\n        }, {\n          'value': '\\'negative\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'loading': {\n      'defaultValue': {\n        'value': 'false',\n        'computed': false\n      },\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': true,\n      'description': ''\n    },\n    'disabled': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'width': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }, {\n          'value': '\\'fluid\\'',\n          'computed': false\n        }, {\n          'value': '\\'square\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'active': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'refCallback': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};\nLinkButton.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'LinkButton',\n  'props': {\n    'variant': {\n      'defaultValue': {\n        'value': '\\'primary\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'primary\\'',\n          'computed': false\n        }, {\n          'value': '\\'secondary\\'',\n          'computed': false\n        }, {\n          'value': '\\'success\\'',\n          'computed': false\n        }, {\n          'value': '\\'negative\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'loading': {\n      'defaultValue': {\n        'value': 'false',\n        'computed': false\n      },\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': true,\n      'description': ''\n    },\n    'disabled': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'width': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }, {\n          'value': '\\'fluid\\'',\n          'computed': false\n        }, {\n          'value': '\\'square\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'active': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'refCallback': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};\nCheckboxButton.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'CheckboxButton',\n  'props': {\n    'variant': {\n      'defaultValue': {\n        'value': '\\'primary\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'primary\\'',\n          'computed': false\n        }, {\n          'value': '\\'secondary\\'',\n          'computed': false\n        }, {\n          'value': '\\'success\\'',\n          'computed': false\n        }, {\n          'value': '\\'negative\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'loading': {\n      'defaultValue': {\n        'value': 'false',\n        'computed': false\n      },\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': true,\n      'description': ''\n    },\n    'disabled': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'width': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }, {\n          'value': '\\'fluid\\'',\n          'computed': false\n        }, {\n          'value': '\\'square\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'active': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'refCallback': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};\nRadioButton.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'RadioButton',\n  'props': {\n    'variant': {\n      'defaultValue': {\n        'value': '\\'primary\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'primary\\'',\n          'computed': false\n        }, {\n          'value': '\\'secondary\\'',\n          'computed': false\n        }, {\n          'value': '\\'success\\'',\n          'computed': false\n        }, {\n          'value': '\\'negative\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'loading': {\n      'defaultValue': {\n        'value': 'false',\n        'computed': false\n      },\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': true,\n      'description': ''\n    },\n    'disabled': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'width': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }, {\n          'value': '\\'fluid\\'',\n          'computed': false\n        }, {\n          'value': '\\'square\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'active': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'refCallback': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}