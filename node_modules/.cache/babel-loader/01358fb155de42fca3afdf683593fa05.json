{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/components/overview.js\";\nimport React from \"react\";\nimport NavBar from \"./navbar\";\nimport red from \"../img/red.png\";\nimport green from \"../img/green.png\";\nimport Background from \"../img/background.jpg\";\n\nvar convert = require('xml-js');\n\nclass Overview extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: ''\n    };\n\n    this.handleClick = () => {\n      this.props.history.push('/');\n    };\n\n    this.returnRedOrGreenIcon = param => {\n      if (Date.parse(param.ValidityPeriod.EndTime) < Date.parse(this.state.date) || param.Progress === 'closed') {\n        return React.createElement(\"img\", {\n          src: red,\n          id: \"not_active\",\n          alt: \"\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"img\", {\n          src: green,\n          id: \"active\",\n          alt: \"\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.getType = param => {\n      if (param != null) {\n        if (Object.keys(param)[0] === \"Networks\") {\n          return \"Linje\";\n        }\n\n        if (Object.keys(param)[0] === \"StopPoints\") {\n          return \"Stopp\";\n        }\n\n        if (Object.keys(param)[0] === \"VehicleJourneys\") {\n          return \"Avgang\";\n        } else {\n          return \"Error\";\n        }\n      } else {\n        return \"Error\";\n      }\n    };\n\n    this.getDate = param => {\n      if (param) {\n        var datePart = param.match(/\\d+/g),\n            year = datePart[0].substring(2),\n            // get only two digits\n        month = datePart[1],\n            day = datePart[2],\n            hour = datePart[3],\n            minutes = datePart[4];\n        return hour + ':' + minutes + '  ' + day + '.' + month + '.' + year;\n      } else {\n        return '';\n      }\n    };\n\n    this.edit = event => {\n      this.props.history.push(\"/edit/\".concat(event.target.value));\n    };\n  }\n\n  componentDidMount() {\n    let that = this;\n    let date = new Date().getDate();\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n\n    let month = new Date().getMonth() + 1;\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let year = new Date().getFullYear();\n    let hours = new Date().getHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    let min = new Date().getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    let sec = new Date().getSeconds();\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    that.setState({\n      date: year + '-' + month + '-' + date + 'T' + hours + ':' + min + ':' + sec + \"+02:00\"\n    }); //var result = convert.json2xml(localStorage.getItem(\"issues\"), {compact: true,ignoreComment: true, spaces: 4});\n    //console.log(result);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"background\",\n      src: Background,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"register_box\",\n      id: \"overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Oversikt\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"table-responsive-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"dtOrderExample\",\n      className: \"table table-striped table-light table-borderless table-hover\",\n      bgcolor: \"#000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Summary\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"ReportType\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"StartTime\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"EndTime\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Affects\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, JSON.parse(localStorage.getItem(\"issues\")).PtSituationElement.map(item => React.createElement(\"tr\", {\n      key: item.SituationNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.returnRedOrGreenIcon(item)), React.createElement(\"td\", {\n      className: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, item.SituationNumber.split(\":\").pop()), React.createElement(\"td\", {\n      className: \"Melding\",\n      width: \"30%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, item.Summary['@Value']), React.createElement(\"td\", {\n      className: \"ReportType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, item.ReportType), React.createElement(\"td\", {\n      className: \"Fra-dato\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.getDate(item.ValidityPeriod.StartTime)), React.createElement(\"td\", {\n      className: \"Til-dato\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.getDate(item.ValidityPeriod.EndTime)), React.createElement(\"td\", {\n      className: \"Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.getType(item.Affects)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"bg-warning\",\n      value: item.SituationNumber.split(\":\").pop(),\n      onClick: this.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Endre\")))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"submit\",\n      className: \"btn btn-warning btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Tilbake\")));\n  }\n\n}\n\nexport default Overview;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/components/overview.js"],"names":["React","NavBar","red","green","Background","convert","require","Overview","Component","state","date","handleClick","props","history","push","returnRedOrGreenIcon","param","Date","parse","ValidityPeriod","EndTime","Progress","getType","Object","keys","getDate","datePart","match","year","substring","month","day","hour","minutes","edit","event","target","value","componentDidMount","that","getMonth","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","setState","render","JSON","localStorage","getItem","PtSituationElement","map","item","SituationNumber","split","pop","Summary","ReportType","StartTime","Affects"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavBar from \"./navbar\";\nimport red from \"../img/red.png\";\nimport green from \"../img/green.png\"\nimport Background from \"../img/background.jpg\";\nvar convert = require('xml-js');\n\nclass Overview extends React.Component {\n\n    state = {\n        date: '',\n    };\n\n    componentDidMount() {\n        let that = this;\n        let date = new Date().getDate(); if(date < 10){ date = \"0\"+date }\n        let month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        let year = new Date().getFullYear();\n        let hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        let min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        let sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n\n        that.setState({\n            date: year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\"+02:00\",\n        });\n\n        //var result = convert.json2xml(localStorage.getItem(\"issues\"), {compact: true,ignoreComment: true, spaces: 4});\n        //console.log(result);\n    }\n\n    handleClick = () => {\n        this.props.history.push('/');\n    };\n\n    returnRedOrGreenIcon = (param) => {\n        if(Date.parse(param.ValidityPeriod.EndTime) < Date.parse(this.state.date) || param.Progress === 'closed'){\n            return <img src={red} id='not_active' alt=\"\" height=\"30\" width=\"30\" />\n        }else {\n            return <img src={green} id='active' alt=\"\" height=\"30\" width=\"30\"/>\n        }\n    };\n\n    getType = (param) => {\n        if(param != null){\n            if(Object.keys(param)[0] === \"Networks\"){\n                return \"Linje\"\n            }\n            if(Object.keys(param)[0] === \"StopPoints\"){\n                return \"Stopp\"\n            }\n            if(Object.keys(param)[0] === \"VehicleJourneys\"){\n                return \"Avgang\"\n            }\n            else{\n                return \"Error\"\n            }\n        }else{\n            return \"Error\"\n        }\n    };\n\n    getDate = (param) => {\n        if(param){\n            var datePart = param.match(/\\d+/g),\n                year = datePart[0].substring(2), // get only two digits\n                month = datePart[1], day = datePart[2],\n                hour = datePart[3], minutes = datePart[4];\n\n            return hour+':'+minutes+'  '+day+'.'+month+'.'+year;\n        }else{\n            return ''\n        }\n    };\n\n    edit = (event) => {\n        this.props.history.push(`/edit/${event.target.value}`);\n    };\n\n    render() {\n        return (\n            <div>\n                <img id=\"background\" src={ Background } alt=\"\" />\n                <div className=\"navBar\">\n                </div>\n                <NavBar />\n                <div className=\"register_box\" id=\"overview\" >\n                    <h2 className=\"text-center text-white\">Oversikt</h2>\n                    <br></br>\n                    <div className=\"table-responsive-md\">\n                        <table id=\"dtOrderExample\" className=\"table table-striped table-light table-borderless table-hover\" bgcolor=\"#000000\" >\n                            <thead className=\"bg-primary\">\n                            <tr>\n                                <th scope=\"col\">Status</th>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Summary</th>\n                                <th scope=\"col\">ReportType</th>\n                                <th scope=\"col\">StartTime</th>\n                                <th scope=\"col\">EndTime</th>\n                                <th scope=\"col\">Affects</th>\n                                <th scope=\"col\"></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {(JSON.parse(localStorage.getItem(\"issues\"))).PtSituationElement.map((item) => (\n                                <tr key={item.SituationNumber}>\n                                    <td className='Status'>{this.returnRedOrGreenIcon(item)}</td>\n                                    <td className='#'>{item.SituationNumber.split(\":\").pop()}</td>\n                                    <td className='Melding' width=\"30%\">{item.Summary['@Value']}</td>\n                                    <td className='ReportType' >{item.ReportType}</td>\n                                    <td className='Fra-dato'>{this.getDate(item.ValidityPeriod.StartTime)}</td>\n                                    <td className='Til-dato'>{this.getDate(item.ValidityPeriod.EndTime)}</td>\n                                    <td className='Type'>{this.getType(item.Affects)}</td>\n                                    <td><button className=\"bg-warning\" value={item.SituationNumber.split(\":\").pop()} onClick={this.edit}>Endre</button></td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                        <br></br>\n                    </div>\n                    <button onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Overview;"]},"metadata":{},"sourceType":"module"}