{"ast":null,"code":"var _jsxFileName = \"/Users/marcusgoplen/Desktop/entur/deviation-messages/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\nimport NavBar from \"./components/navbar\";\nimport Background from \"./img/background.jpg\";\nvar config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nconst firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      organizations: [],\n      organizationsName: [],\n      selectedOrganization: '',\n      lines: '',\n      id: ''\n    };\n\n    this.updateOrganization = selectedOrg => {\n      this.setState({\n        selectedOrganization: selectedOrg\n      }, () => this.setDeviationsAndLines(selectedOrg));\n    };\n  }\n\n  componentDidMount() {\n    this.setOrganizations();\n  }\n\n  setOrganizations() {\n    let roles = this.props.userInfo.roles;\n    let setRoles = [];\n    let orgName = [];\n\n    if (!roles) {\n      window.alert(\"You are not assigned to a company\");\n      window.location.href = this.props.userInfo.logoutUrl;\n    }\n\n    for (let i = 0; i < roles.length; i++) {\n      if (roles[i].includes('editSX')) {\n        setRoles.push(roles[i].split(\"\\\"\")[7]);\n      }\n    }\n\n    api.getAuthorities().then(response => {\n      const authorities = response.data.authorities;\n\n      for (let i = 0; i < setRoles.length; i++) {\n        for (let j = 0; j < authorities.length; j++) {\n          if (authorities[j].id.includes(setRoles[i])) {\n            setRoles[i] = authorities[j].id;\n            orgName[i] = authorities[j].name;\n          }\n        }\n      }\n\n      this.setState({\n        organizations: setRoles,\n        organizationsName: orgName,\n        selectedOrganization: setRoles[0]\n      }, () => this.setDeviationsAndLines(this.state.organizations[0]));\n    });\n  }\n\n  setDeviationsAndLines(selectedOrganization) {\n    db.collection(selectedOrganization).get().then(querySnapshot => {\n      for (let i = 0; i < querySnapshot.docs.length; i++) {\n        if (querySnapshot.docs[i].id === 'Issues') {\n          if (querySnapshot.docs[i].data().PtSituationElement) {\n            this.setState({\n              data: querySnapshot.docs[i].data(),\n              id: querySnapshot.docs[i].id\n            });\n          } else {\n            this.setState({\n              data: {\n                PtSituationElement: []\n              },\n              id: querySnapshot.docs[i].id\n            });\n          }\n        }\n      }\n\n      ;\n    });\n    api.getLines(selectedOrganization).then(response => {\n      if (response.data) {\n        this.setState({\n          lines: response.data.lines\n        });\n      } else {\n        console.log(\"Could not find any lines for this organization\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(NavBar, Object.assign({}, props, {\n        NavBar: true,\n        onSelectOrganization: this.updateOrganization,\n        user: this.state.organizations,\n        name: this.state.organizationsName,\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Overview, Object.assign({}, props, {\n        firebase: db,\n        data: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:deviationId?\",\n      render: props => React.createElement(Edit, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        organization: this.state.selectedOrganization,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: props => React.createElement(Register, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        lines: this.state.lines,\n        organization: this.state.selectedOrganization,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst renderIndex = userInfo => {\n  ReactDOM.render(React.createElement(App, {\n    userInfo: userInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nauth.initAuth();\nexport default renderIndex;","map":{"version":3,"sources":["/Users/marcusgoplen/Desktop/entur/deviation-messages/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Overview","Register","Edit","auth","api","NavBar","Background","config","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_TMDB_API_KEY","firebase","require","initializeApp","db","firestore","App","Component","state","data","organizations","organizationsName","selectedOrganization","lines","id","updateOrganization","selectedOrg","setState","setDeviationsAndLines","componentDidMount","setOrganizations","roles","props","userInfo","setRoles","orgName","window","alert","location","href","logoutUrl","i","length","includes","push","split","getAuthorities","then","response","authorities","j","name","collection","get","querySnapshot","docs","PtSituationElement","getLines","console","log","render","renderIndex","document","getElementById","initAuth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\nimport NavBar from \"./components/navbar\";\nimport Background from \"./img/background.jpg\";\n\nvar config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        organizations: [],\n        organizationsName: [],\n        selectedOrganization: '',\n        lines: '',\n        id: '',\n    };\n\n    componentDidMount() {\n        this.setOrganizations();\n    }\n\n    updateOrganization = (selectedOrg) => {\n        this.setState({\n            selectedOrganization: selectedOrg,\n        },\n          () => this.setDeviationsAndLines(selectedOrg));\n    };\n\n    setOrganizations() {\n        let roles = this.props.userInfo.roles;\n        let setRoles = [];\n        let orgName = [];\n        if(!roles){\n            window.alert(\"You are not assigned to a company\");\n            window.location.href = this.props.userInfo.logoutUrl;\n        }\n        for (let i = 0; i < roles.length; i++) {\n            if(roles[i].includes('editSX')) {\n                setRoles.push(roles[i].split(\"\\\"\")[7]);\n            }\n        }\n        api.getAuthorities()\n          .then(response => {\n              const authorities = response.data.authorities;\n              for (let i = 0; i < setRoles.length; i++) {\n                  for (let j = 0; j < authorities.length; j++) {\n                      if(authorities[j].id.includes(setRoles[i])){\n                          setRoles[i] = authorities[j].id;\n                          orgName[i] = authorities[j].name;\n                      }\n                  }\n              }\n              this.setState(\n                { organizations: setRoles, organizationsName: orgName, selectedOrganization: setRoles[0] },\n                ()  => this.setDeviationsAndLines(this.state.organizations[0]));\n          });\n    }\n\n    setDeviationsAndLines(selectedOrganization) {\n\n        db.collection(selectedOrganization).get().then((querySnapshot) => {\n            for (let i = 0; i < querySnapshot.docs.length; i++) {\n                if(querySnapshot.docs[i].id === 'Issues'){\n                    if(querySnapshot.docs[i].data().PtSituationElement){\n                        this.setState({\n                            data: querySnapshot.docs[i].data(),\n                            id: querySnapshot.docs[i].id,\n                        });\n                    }else{\n                        this.setState({\n                            data: {PtSituationElement: []},\n                            id: querySnapshot.docs[i].id,\n                        })\n                    }\n                }\n            };\n        });\n\n        api.getLines(selectedOrganization)\n          .then(response => {\n              if(response.data){\n                  this.setState({\n                      lines: response.data.lines\n                  })\n              }else{\n                  console.log(\"Could not find any lines for this organization\");\n              }\n          })\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n\n\n                    <Route path=\"/\"\n                           render={props => <NavBar {...props}\n                                                    NavBar onSelectOrganization={this.updateOrganization}\n                                                    user={this.state.organizations}\n                                                    name={this.state.organizationsName}\n                                                    logout={this.props.userInfo.logoutUrl} />} />\n                    <Route exact path=\"/\"\n                           render={props => <Overview {...props}\n                                                      firebase={db}\n                                                      data={this.state.data} />} />\n                    <Route path=\"/edit/:deviationId?\"\n                           render={props => <Edit {...props}\n                                                  data={this.state.data}\n                                                  firebase={db}\n                                                  docID={this.state.id}\n                                                  organization={this.state.selectedOrganization} />} />\n                    <Route path=\"/register\"\n                           render={props => <Register {...props}\n                                                      data={this.state.data}\n                                                      firebase={db}\n                                                      docID={this.state.id}\n                                                      lines={this.state.lines}\n                                                      organization={this.state.selectedOrganization} />} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nconst renderIndex = (userInfo) => {\n    ReactDOM.render(\n        <App userInfo={userInfo} />,\n        document.getElementById('root')\n    );\n};\n\nauth.initAuth();\n\nexport default renderIndex;\n"]},"metadata":{},"sourceType":"module"}