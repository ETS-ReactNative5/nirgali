{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/components/overview.js\";\nimport React from \"react\";\nimport NavBar from \"./navbar\";\nimport red from \"../img/red.png\";\nimport green from \"../img/green.png\";\nimport Background from \"../img/background.jpg\";\n\nclass Overview extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: ''\n    };\n\n    this.handleClick = event => {\n      this.props.history.push('/');\n    };\n\n    this.returnRedOrGreenIcon = param => {\n      if (Date.parse(param) < Date.parse(this.state.date)) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          hidden: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"A\"), React.createElement(\"img\", {\n          src: red,\n          alt: \"\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          hidden: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"N\"), React.createElement(\"img\", {\n          src: green,\n          alt: \"\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.getType = param => {\n      if (param != null) {\n        if (Object.keys(param)[0] === \"Networks\") {\n          return \"Linje\";\n        }\n\n        if (Object.keys(param)[0] === \"StopPoints\") {\n          return \"Stopp\";\n        }\n\n        if (Object.keys(param)[0] === \"VehicleJourneys\") {\n          return \"Avgang\";\n        } else {\n          return \"Error\";\n        }\n      } else {\n        return \"Error\";\n      }\n    };\n\n    this.getDate = param => {\n      var datePart = param.match(/\\d+/g),\n          year = datePart[0].substring(2),\n          // get only two digits\n      month = datePart[1],\n          day = datePart[2],\n          hour = datePart[3],\n          minutes = datePart[4];\n      return hour + ':' + minutes + '  ' + day + '.' + month + '.' + year;\n    };\n\n    this.edit = event => {\n      this.props.history.push('/edit', {\n        id: event.target.value\n      });\n    };\n\n    this.sortTable = () => {\n      var table, rows, switching, i, x, y, shouldSwitch;\n      table = document.getElementById(\"dtOrderExample\");\n      switching = true;\n\n      while (switching) {\n        switching = false;\n        rows = table.rows;\n\n        for (i = 1; i < rows.length - 1; i++) {\n          shouldSwitch = false;\n          x = rows[i].getElementsByTagName(\"TD\")[0];\n          y = rows[i + 1].getElementsByTagName(\"TD\")[0];\n\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            shouldSwitch = true;\n            break;\n          }\n        }\n\n        if (shouldSwitch) {\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true;\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    var that = this;\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    var year = new Date().getFullYear();\n    var hours = new Date().getHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    var min = new Date().getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    var sec = new Date().getSeconds();\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    that.setState({\n      date: year + '-' + month + '-' + date + 'T' + hours + ':' + min + ':' + sec + \"+02:00\"\n    });\n    this.sortTable();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"background\",\n      src: Background,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"register_box\",\n      id: \"overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Oversikt\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"table-responsive-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"dtOrderExample\",\n      className: \"table table-striped table-light table-borderless table-hover\",\n      bgcolor: \"#000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"bg-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Melding\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Gyldighet\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, JSON.parse(localStorage.getItem(\"issues\")).PtSituationElement.map((item, key) => React.createElement(\"tr\", {\n      key: item.SituationNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.returnRedOrGreenIcon(item.ValidityPeriod.EndTime)), React.createElement(\"td\", {\n      className: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, item.SituationNumber.split(\":\").pop()), React.createElement(\"td\", {\n      className: \"Melding\",\n      width: \"30%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, item.Summary['@Value']), React.createElement(\"td\", {\n      className: \"Gyldighet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.getDate(item.ValidityPeriod.StartTime), \" -\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), this.getDate(item.ValidityPeriod.EndTime)), React.createElement(\"td\", {\n      className: \"Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.getType(item.Affects)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"bg-info\",\n      value: item.SituationNumber.split(\":\").pop(),\n      onClick: this.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Endre\"))))))), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"submit\",\n      className: \"btn btn-warning btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Tilbake\")));\n  }\n\n}\n\nexport default Overview;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/components/overview.js"],"names":["React","NavBar","red","green","Background","Overview","Component","state","date","handleClick","event","props","history","push","returnRedOrGreenIcon","param","Date","parse","getType","Object","keys","getDate","datePart","match","year","substring","month","day","hour","minutes","edit","id","target","value","sortTable","table","rows","switching","i","x","y","shouldSwitch","document","getElementById","length","getElementsByTagName","innerHTML","toLowerCase","parentNode","insertBefore","componentDidMount","that","getMonth","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","setState","render","JSON","localStorage","getItem","PtSituationElement","map","item","key","SituationNumber","ValidityPeriod","EndTime","split","pop","Summary","StartTime","Affects"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavBar from \"./navbar\";\nimport red from \"../img/red.png\";\nimport green from \"../img/green.png\"\nimport Background from \"../img/background.jpg\";\n\nclass Overview extends React.Component {\n\n    state = {\n        date: '',\n    };\n\n    componentDidMount() {\n        var that = this;\n        var date = new Date().getDate();\n        var month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        var year = new Date().getFullYear();\n        var hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        var min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        var sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n        that.setState({\n            date: year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\"+02:00\",\n        });\n        this.sortTable()\n    }\n\n    handleClick =  (event) => {\n        this.props.history.push('/');\n    };\n\n    returnRedOrGreenIcon = (param) => {\n        if(Date.parse(param) < Date.parse(this.state.date)){\n            return <div><p hidden>A</p><img src={red} alt=\"\" height=\"30\" width=\"30\" /></div>\n        }else {\n            return <div><p hidden>N</p><img src={green} alt=\"\" height=\"30\" width=\"30\"/></div>\n        }\n    };\n\n    getType = (param) => {\n        if(param != null){\n            if(Object.keys(param)[0] === \"Networks\"){\n                return \"Linje\"\n            }\n            if(Object.keys(param)[0] === \"StopPoints\"){\n                return \"Stopp\"\n            }\n            if(Object.keys(param)[0] === \"VehicleJourneys\"){\n                return \"Avgang\"\n            }\n            else{\n                return \"Error\"\n            }\n        }else{\n            return \"Error\"\n        }\n    };\n\n    getDate = (param) => {\n        var datePart = param.match(/\\d+/g),\n            year = datePart[0].substring(2), // get only two digits\n            month = datePart[1], day = datePart[2],\n            hour = datePart[3], minutes = datePart[4];\n\n        return hour+':'+minutes+'  '+day+'.'+month+'.'+year;\n    };\n\n    edit = (event) => {\n        this.props.history.push('/edit', { id: event.target.value });\n    };\n\n    sortTable = () => {\n        var table, rows, switching, i, x, y, shouldSwitch;\n        table = document.getElementById(\"dtOrderExample\");\n        switching = true;\n        while (switching) {\n            switching = false;\n            rows = table.rows;\n            for (i = 1; i < (rows.length - 1); i++) {\n                shouldSwitch = false;\n                x = rows[i].getElementsByTagName(\"TD\")[0];\n                y = rows[i + 1].getElementsByTagName(\"TD\")[0];\n                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n                    shouldSwitch = true;\n                    break;\n                }\n            }\n            if (shouldSwitch) {\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n                switching = true;\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <img id=\"background\" src={ Background } alt=\"\" />\n                <div className=\"navBar\">\n                </div>\n                <NavBar />\n                <div className=\"register_box\" id=\"overview\" >\n                    <h2 className=\"text-center text-white\">Oversikt</h2>\n                    <br></br>\n                    <div className=\"table-responsive-md\">\n                        <table id=\"dtOrderExample\" className=\"table table-striped table-light table-borderless table-hover\" bgcolor=\"#000000\" >\n                            <thead className=\"bg-info\">\n                            <tr>\n                                <th scope=\"col\">Status</th>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Melding</th>\n                                <th scope=\"col\">Gyldighet</th>\n                                <th scope=\"col\">Type</th>\n                                <th scope=\"col\"></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {(JSON.parse(localStorage.getItem(\"issues\"))).PtSituationElement.map((item, key) => (\n                                <tr key={item.SituationNumber}>\n                                    <td className='Status'>{this.returnRedOrGreenIcon(item.ValidityPeriod.EndTime)}</td>\n                                    <td className='#'>{item.SituationNumber.split(\":\").pop()}</td>\n                                    <td className='Melding' width=\"30%\">{item.Summary['@Value']}</td>\n                                    <td className='Gyldighet'>{this.getDate(item.ValidityPeriod.StartTime)} -<br></br>{this.getDate(item.ValidityPeriod.EndTime)}</td>\n                                    <td className='Type'>{this.getType(item.Affects)}</td>\n                                    <td><button className=\"bg-info\" value={item.SituationNumber.split(\":\").pop()} onClick={this.edit}>Endre</button></td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <button onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Overview;"]},"metadata":{},"sourceType":"module"}