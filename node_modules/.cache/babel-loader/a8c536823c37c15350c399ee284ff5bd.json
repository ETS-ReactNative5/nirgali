{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/register.js\";\nimport React from \"react\";\nimport Background from \"./background.jpg\";\nimport NavBar from \"./navbar\";\nimport Select from 'react-select';\nvar stops = [];\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      newAffect: '',\n      searchBar: '',\n      stops: ''\n    };\n    this.handleChangeSpecifyStops = this.handleChangeSpecifyStops.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeStops = this.handleChangeStops.bind(this);\n    this.handleChangeLine = this.handleChangeLine.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    var that = this;\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    var year = new Date().getFullYear();\n    var hours = new Date().getHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    var min = new Date().getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    var sec = new Date().getSeconds();\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    that.setState({\n      date: year + '-' + month + '-' + date + 'T' + hours + ':' + min + ':' + sec + \".000+02:00\"\n    });\n    {\n      JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => stops = stops.concat(item.quays));\n    }\n  }\n\n  handleSubmit(event) {\n    const newIssue = {\n      CreationTime: this.state.date,\n      ParticipantRef: localStorage.getItem(\"loggedInAs\"),\n      SituationNumber: localStorage.getItem(\"loggedInAs\") + \":SituationNumber:\" + (parseInt(localStorage.getItem(\"countIssues\")) + 1),\n      Source: {\n        SourceType: \"directReport\"\n      },\n      Progress: \"open\",\n      ValidityPeriod: {\n        StartTime: event.target.from.value + \"+02:00\",\n        EndTime: event.target.to.value + \"+02:00\"\n      },\n      Severity: \"normal\",\n      ReportType: \"incident\",\n      Summary: {\n        \"@Value\": event.target.oppsummering.value,\n        \"@Language\": \"NO\"\n      },\n      Description: {\n        \"@Value\": event.target.beskrivelse.value,\n        \"@Language\": \"NO\"\n      },\n      Affects: []\n    };\n    localStorage.setItem('countIssues', parseInt(localStorage.getItem(\"countIssues\")) + 1);\n    const type = localStorage.getItem(\"type\");\n\n    if (type === \"Linje\") {\n      let newAffect = {\n        Networks: {\n          AffectedNetwork: {\n            AffectedLine: {\n              LineRef: localStorage.getItem(\"chosen\"),\n              Routes: null\n            }\n          }\n        }\n      };\n      newIssue.Affects.push(newAffect);\n    }\n\n    const tmp = JSON.parse(localStorage.getItem(\"issues\"));\n    tmp.PtSituationElement.push(newIssue);\n    localStorage.setItem('issues', JSON.stringify(tmp));\n    this.props.history.push('/overview');\n  }\n\n  handleChangeSpecifyStops(event) {\n    const checkBox = document.getElementById(\"gridCheck\");\n\n    if (checkBox.checked === true) {\n      this.setState({\n        stops: React.createElement(\"div\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"gridCheck\",\n          value: \"stops\",\n          onChange: this.handleChangeSpecifyStops,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"gridCheck1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-center text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Gjelder avviket for spesifikke stopp?\")), React.createElement(Select, {\n          isMulti: true,\n          options: stops.map(item => ({\n            label: item.name,\n            value: item.id\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }))\n      });\n    } else {\n      this.setState({\n        stops: React.createElement(\"div\", {\n          className: \"form-check\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"gridCheck\",\n          value: \"stops\",\n          onChange: this.handleChangeSpecifyStops,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"gridCheck1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-center text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"Gjelder avviket for spesifikke stopp?\")))\n      });\n    }\n  }\n\n  handleClick(event) {\n    this.props.history.push('/');\n  }\n\n  handleType() {\n    const type = localStorage.getItem(\"type\");\n\n    if (type === \"Linje\") {\n      this.setState({\n        searchBar: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"browser-default custom-select\",\n          defaultValue: \"default\",\n          onChange: this.handleChangeLine,\n          name: \"type\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"default\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => React.createElement(\"option\", {\n          key: key,\n          value: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, item.name))))\n      });\n    }\n\n    if (type === \"Stopp\") {\n      this.setState({\n        searchBar: React.createElement(Select, {\n          options: stops.map(item => ({\n            label: item.name,\n            value: item.id\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        })\n      });\n    }\n  }\n\n  handleChange(event) {\n    localStorage.setItem('type', event.target.value);\n    this.handleType();\n  }\n\n  handleChangeStops(event) {\n    localStorage.setItem('chosen', event.target.value);\n  }\n\n  handleChangeLine(event) {\n    localStorage.setItem('chosen', event.target.value);\n    this.setState({\n      stops: React.createElement(\"div\", {\n        className: \"form-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: \"gridCheck\",\n        value: \"stops\",\n        onChange: this.handleChangeSpecifyStops,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"gridCheck1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Gjelder avviket for spesifikke stopp?\")))\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"background\",\n      src: Background,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"register_box\",\n      id: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"register\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Registrer ny melding\"), React.createElement(\"div\", {\n      className: \"form-row d-flex flex-row bd-highlight mb-2 justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fromDate p-2 flex-grow-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Fra\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      step: \"1\",\n      name: \"from\",\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toDate p-2 flex-grow-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Til\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      step: \"1\",\n      name: \"to\",\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Melding\"), React.createElement(\"input\", {\n      type: \"String\",\n      name: \"oppsummering\",\n      className: \"form-control\",\n      placeholder: \"Oppsummering\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"String\",\n      name: \"beskrivelse\",\n      className: \"form-control\",\n      placeholder: \"Beskrivelse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"choose_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Velg linje, stopp eller avgang\"), React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      defaultValue: \"default\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"default\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"Linje\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Linje\"), React.createElement(\"option\", {\n      value: \"Stopp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Stopp\"), React.createElement(\"option\", {\n      value: \"Avgang\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Avgang\"))), React.createElement(\"div\", {\n      className: \"choose_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.state.searchBar, this.state.stops), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submit justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Registrer\"), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"submit\",\n      className: \"btn btn-warning btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Tilbake\")))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/register.js"],"names":["React","Background","NavBar","Select","stops","Register","Component","constructor","props","state","date","newAffect","searchBar","handleChangeSpecifyStops","bind","handleChange","handleChangeStops","handleChangeLine","handleSubmit","handleClick","componentDidMount","that","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","setState","JSON","parse","localStorage","getItem","map","item","key","concat","quays","event","newIssue","CreationTime","ParticipantRef","SituationNumber","parseInt","Source","SourceType","Progress","ValidityPeriod","StartTime","target","from","value","EndTime","to","Severity","ReportType","Summary","oppsummering","Description","beskrivelse","Affects","setItem","type","Networks","AffectedNetwork","AffectedLine","LineRef","Routes","push","tmp","PtSituationElement","stringify","history","checkBox","document","getElementById","checked","label","name","id","handleType","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Background from \"./background.jpg\";\nimport NavBar from \"./navbar\";\nimport Select from 'react-select';\n\nvar stops = [];\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: '',\n            newAffect: '',\n            searchBar: '',\n            stops: '',\n        };\n\n        this.handleChangeSpecifyStops = this.handleChangeSpecifyStops.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeStops = this.handleChangeStops.bind(this);\n        this.handleChangeLine = this.handleChangeLine.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        var that = this;\n        var date = new Date().getDate();\n        var month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        var year = new Date().getFullYear();\n        var hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        var min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        var sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n        that.setState({\n            date: year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\".000+02:00\",\n        });\n\n        {JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => (\n            stops = stops.concat(item.quays)\n        ))}\n    }\n\n    handleSubmit(event) {\n        const newIssue = {\n                CreationTime: this.state.date,\n                ParticipantRef: localStorage.getItem(\"loggedInAs\"),\n                SituationNumber: localStorage.getItem(\"loggedInAs\") + \":SituationNumber:\" + (parseInt(localStorage.getItem(\"countIssues\")) + 1),\n                Source: {\n                    SourceType: \"directReport\",\n                },\n                Progress: \"open\",\n                ValidityPeriod: {\n                    StartTime: event.target.from.value + \"+02:00\",\n                    EndTime: event.target.to.value + \"+02:00\",\n                },\n                Severity: \"normal\",\n                ReportType: \"incident\",\n                Summary: {\n                    \"@Value\": event.target.oppsummering.value,\n                    \"@Language\": \"NO\"\n                },\n                Description: {\n                    \"@Value\": event.target.beskrivelse.value,\n                    \"@Language\": \"NO\"\n                },\n                Affects: [],\n            };\n\n        localStorage.setItem('countIssues', (parseInt(localStorage.getItem(\"countIssues\"))+1));\n\n        const type = localStorage.getItem(\"type\");\n        if(type === \"Linje\"){\n            let newAffect = {\n                Networks: {\n                    AffectedNetwork: {\n                        AffectedLine: {\n                            LineRef: localStorage.getItem(\"chosen\"),\n                            Routes: null\n                        }\n                    }\n                }\n            };\n            newIssue.Affects.push(newAffect);\n        }\n\n        const tmp = JSON.parse(localStorage.getItem(\"issues\"));\n        tmp.PtSituationElement.push(newIssue);\n        localStorage.setItem('issues', JSON.stringify(tmp));\n        this.props.history.push('/overview');\n    }\n\n    handleChangeSpecifyStops(event){\n        const checkBox = document.getElementById(\"gridCheck\");\n        if (checkBox.checked === true){\n            this.setState({\n                stops:\n                    <div className=\"\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" value=\"stops\" onChange={this.handleChangeSpecifyStops} />\n                        <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                            <p className=\"text-center text-white\">Gjelder avviket for spesifikke stopp?</p>\n                        </label>\n                        <Select isMulti options={\n                            stops.map(item => (\n                                { label: item.name, value: item.id }\n                            ))}\n                        />\n                    </div>\n            });\n        } else {\n            this.setState({\n                stops:\n                    <div className=\"form-check\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" value=\"stops\" onChange={this.handleChangeSpecifyStops} />\n                        <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                            <p className=\"text-center text-white\">Gjelder avviket for spesifikke stopp?</p>\n                        </label>\n                    </div>\n            });\n        }\n    }\n\n    handleClick(event) {\n        this.props.history.push('/');\n    }\n\n    handleType(){\n        const type = localStorage.getItem(\"type\");\n        if(type === \"Linje\"){\n            this.setState({\n                searchBar:\n                    <div>\n                        <select className=\"browser-default custom-select\" defaultValue={\"default\"} onChange={this.handleChangeLine} name=\"type\">\n                            <option value=\"default\" disabled></option>\n                            {JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => (\n                                <option key={key} value={item.id}>{item.name}</option>\n                                ))}\n                        </select>\n                    </div>\n            });\n        }\n        if(type === \"Stopp\"){\n            this.setState({\n                searchBar:\n                    <Select options={\n                        stops.map(item => (\n                            { label: item.name, value: item.id }\n                        ))}\n                    />\n            });\n        }\n    }\n\n    handleChange(event) {\n        localStorage.setItem('type', event.target.value);\n        this.handleType();\n    }\n\n    handleChangeStops(event) {\n        localStorage.setItem('chosen', event.target.value);\n    }\n\n    handleChangeLine(event) {\n        localStorage.setItem('chosen', event.target.value);\n        this.setState({\n            stops:\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" value=\"stops\" onChange={this.handleChangeSpecifyStops} />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                        <p className=\"text-center text-white\">Gjelder avviket for spesifikke stopp?</p>\n                    </label>\n                </div>\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"navBar\">\n                    <img id=\"background\" src={ Background } alt=\"\" />\n                    <NavBar />\n                </div>\n                <div className=\"register_box\" id=\"small\" >\n                    <form className=\"register\" onSubmit={this.handleSubmit}>\n                        <h3 className=\"text-center text-white\">Registrer ny melding</h3>\n                        <div className=\"form-row d-flex flex-row bd-highlight mb-2 justify-content-center\">\n                            <div className=\"fromDate p-2 flex-grow-1\">\n                                <p className=\"text-center text-white\">Fra</p>\n                                <input type=\"datetime-local\" step=\"1\" name=\"from\" className=\"form-control\" required/>\n                            </div>\n                            <div className=\"toDate p-2 flex-grow-1\">\n                                <p className=\"text-center text-white\">Til</p>\n                                <input type=\"datetime-local\" step=\"1\" name=\"to\" className=\"form-control\" required/>\n                            </div>\n                        </div>\n                        <div className=\"message\">\n                            <p className=\"text-center text-white\">Melding</p>\n                            <input type=\"String\" name=\"oppsummering\" className=\"form-control\" placeholder=\"Oppsummering\" required/>\n                            <input type=\"String\" name=\"beskrivelse\" className=\"form-control\" placeholder=\"Beskrivelse\"/>\n                        </div>\n                        <br></br>\n                        <div className=\"choose_type\">\n                            <p className=\"text-center text-white\">Velg linje, stopp eller avgang</p>\n                            <select className=\"browser-default custom-select\" defaultValue={\"default\"} onChange={this.handleChange}>\n                                <option value=\"default\" disabled></option>\n                                <option value=\"Linje\">Linje</option>\n                                <option value=\"Stopp\">Stopp</option>\n                                <option value=\"Avgang\">Avgang</option>\n                            </select>\n                        </div>\n                        <div className=\"choose_type\">\n                            {this.state.searchBar}\n                            {this.state.stops}\n                        </div>\n                        <br></br>\n                        <br></br>\n                        <div className=\"submit justify-content-center\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">Registrer</button>\n                            <button onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}