{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.Expandable = Expandable;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _chevron = require('../icons/arrows/chevron');\n\nvar _chevron2 = _interopRequireDefault(_chevron);\n\nrequire('./styles.css');\n\nvar _styles = {\n  'groupClassName': 'entur-expandable-group',\n  'rootClassName': 'entur-expandable',\n  'entur-expandable': 'entur-expandable',\n  'entur-expandable--disabled': 'entur-expandable--disabled',\n  'entur-expandable__header': 'entur-expandable__header',\n  'entur-expandable__icon': 'entur-expandable__icon',\n  'entur-expandable__content': 'entur-expandable__content',\n  'entur-expandable--size-md': 'entur-expandable--size-md',\n  'entur-expandable--size-lg': 'entur-expandable--size-lg',\n  'entur-expandable--variant-default': 'entur-expandable--variant-default',\n  'entur-expandable__header--disabled': 'entur-expandable__header--disabled',\n  'entur-expandable--variant-midnight': 'entur-expandable--variant-midnight',\n  'entur-expandable__header--expanded': 'entur-expandable__header--expanded'\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction getIcon(expanded) {\n  var direction = expanded ? 'up' : 'down';\n  return _react2.default.createElement(_chevron2.default, {\n    direction: direction,\n    height: '14',\n    width: '14'\n  });\n}\n\nfunction getExpandedHandlers(expanded, onHeaderClick, disabled, defaultExpanded) {\n  if (disabled) return [expanded];\n  if (onHeaderClick !== undefined) return [expanded, onHeaderClick];\n\n  var _useState = (0, _react.useState)(defaultExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      updatedExpandedState = _useState2[1];\n\n  return [expandedState, function () {\n    return updatedExpandedState(!expandedState);\n  }];\n}\n\nfunction Expandable(props) {\n  var _cx, _cx2;\n\n  var className = props.className,\n      icon = props.icon,\n      title = props.title,\n      disabled = props.disabled,\n      children = props.children,\n      variant = props.variant,\n      size = props.size,\n      expanded = props.expanded,\n      onHeaderClick = props.onHeaderClick,\n      defaultExpanded = props.defaultExpanded,\n      rest = _objectWithoutProperties(props, ['className', 'icon', 'title', 'disabled', 'children', 'variant', 'size', 'expanded', 'onHeaderClick', 'defaultExpanded']);\n\n  var _getExpandedHandlers = getExpandedHandlers(expanded, onHeaderClick, disabled, defaultExpanded),\n      _getExpandedHandlers2 = _slicedToArray(_getExpandedHandlers, 2),\n      expandedState = _getExpandedHandlers2[0],\n      headerClickHandler = _getExpandedHandlers2[1];\n\n  var classNames = (0, _classnames2.default)(_styles.rootClassName, _styles.rootClassName + '--variant-' + variant, _styles.rootClassName + '--size-' + size, (_cx = {}, _defineProperty(_cx, _styles.rootClassName + '--disabled', disabled), _defineProperty(_cx, _styles.rootClassName + '--expanded', expandedState), _cx), className);\n  var headerClassNames = (0, _classnames2.default)(_styles.rootClassName + '__header', (_cx2 = {}, _defineProperty(_cx2, _styles.rootClassName + '__header--expanded', expandedState), _defineProperty(_cx2, _styles.rootClassName + '__header--disabled', disabled), _cx2));\n  return _react2.default.createElement('div', _extends({\n    className: classNames\n  }, rest), _react2.default.createElement('div', {\n    className: headerClassNames,\n    onClick: headerClickHandler\n  }, _react2.default.createElement('span', null, title), icon !== null && _react2.default.createElement('div', {\n    className: _styles.rootClassName + '__icon'\n  }, icon || getIcon(expandedState))), expandedState && _react2.default.createElement('div', {\n    className: _styles.rootClassName + '__content'\n  }, children));\n}\n\nExpandable.propTypes = {\n  children: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  defaultExpanded: _propTypes2.default.bool,\n  disabled: _propTypes2.default.bool,\n  expanded: _propTypes2.default.bool,\n  icon: _propTypes2.default.node,\n  onHeaderClick: _propTypes2.default.func,\n  title: _propTypes2.default.node,\n  size: _propTypes2.default.oneOf(['md', 'lg']),\n  variant: _propTypes2.default.oneOf(['default', 'midnight'])\n};\nExpandable.defaultProps = {\n  defaultExpanded: false,\n  size: 'md',\n  variant: 'default'\n};\nExpandable.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'Expandable',\n  'props': {\n    'defaultExpanded': {\n      'defaultValue': {\n        'value': 'false',\n        'computed': false\n      },\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'variant': {\n      'defaultValue': {\n        'value': '\\'default\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'default\\'',\n          'computed': false\n        }, {\n          'value': '\\'midnight\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'disabled': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'expanded': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'icon': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'onHeaderClick': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    },\n    'title': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}