{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _helper = require('../helper');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n} // Nucleo Icon, see LICENCE.md\n// https://nucleoapp.com/license\n\n\nfunction Wheelchair(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === undefined ? 'currentColor' : _ref$color,\n      size = _ref.size,\n      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);\n\n  return _react2.default.createElement('svg', _extends({\n    xmlns: 'http://www.w3.org/2000/svg',\n    viewBox: '0 0 16 16'\n  }, (0, _helper.getIconSize)(size), svgProps), _react2.default.createElement('path', {\n    fill: color,\n    d: 'M6.40234,2.93981c-0.72803-0.51709-0.90527-1.51904-0.396-2.25391 c0.50879-0.72705,1.51904-0.90479,2.25391-0.39502c0.72705,0.51611,0.90479,1.51807,0.396,2.25293 C8.13818,3.27086,7.13721,3.44908,6.40234,2.93981z M7.91113,12.51207h1.64355l-0.03711,0.12695 c-0.56836,1.97852-2.40381,3.36133-4.46143,3.36133c-2.56201,0-4.646-2.08398-4.646-4.64551 c0-2.44531,1.90967-4.48145,4.34961-4.63574l0.104-0.00684v1.55371L4.77295,8.27525 c-1.57617,0.14307-2.81006,1.49561-2.81006,3.07959c0,1.7041,1.38623,3.09277,3.09326,3.09277 c1.22803,0,2.33789-0.73633,2.82861-1.875L7.91113,12.51207z M11.87109,9.43981l2.97363,4.43457 c0.24512,0.36523,0.14844,0.86035-0.21484,1.10742l-0.18652,0.12695c-0.36328,0.24609-0.85645,0.15332-1.10645-0.20605 l-2.25586-3.25098h-3.75c-0.89209,0-1.61523-0.72363-1.61523-1.61523V5.6776c0-0.98096,0.875-1.7583,1.88623-1.59326 C8.396,4.21324,8.9458,4.95934,8.9458,5.76451v3.67529H11.87109z'\n  }));\n}\n\nWheelchair.propTypes = {\n  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),\n  color: _propTypes2.default.string\n};\nexports.default = Wheelchair;\nWheelchair.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'Wheelchair',\n  'props': {\n    'color': {\n      'defaultValue': {\n        'value': '\\'currentColor\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'xlarge\\'',\n          'computed': false\n        }, {\n          'value': '\\'large\\'',\n          'computed': false\n        }, {\n          'value': '\\'medium\\'',\n          'computed': false\n        }, {\n          'value': '\\'small\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}