{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/register.js\";\nimport React from \"react\";\nimport Background from \"./background.jpg\";\nimport NavBar from \"./navbar\";\nimport Select from 'react-select';\nimport issues from \"./data\";\nimport api from \"./api\";\nvar stops = [];\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: '',\n      newAffect: '',\n      searchBar: '',\n      stops: '',\n      type: undefined,\n      chosenLine: undefined,\n      departure: undefined,\n      checkbox: undefined,\n      multipleStops: undefined,\n      dateFromTo: undefined,\n      message: undefined,\n      submit: undefined,\n      departureSok: undefined\n    };\n\n    this.getIssuesCount = () => parseInt(JSON.stringify(issues.PtSituationElement.length));\n\n    this.createNewIssue = event => {\n      return {\n        CreationTime: this.state.date,\n        ParticipantRef: localStorage.getItem(\"loggedInAs\"),\n        SituationNumber: localStorage.getItem(\"loggedInAs\") + \":SituationNumber:\" + (this.getIssuesCount() + 1),\n        Source: {\n          SourceType: \"directReport\"\n        },\n        Progress: \"open\",\n        ValidityPeriod: {\n          StartTime: event.target.from.value + \":00+02:00\",\n          EndTime: event.target.to.value + \":00+02:00\"\n        },\n        Severity: \"normal\",\n        ReportType: \"incident\",\n        Summary: {\n          \"@Value\": event.target.oppsummering.value,\n          \"@Language\": \"NO\"\n        },\n        Description: {\n          \"@Value\": event.target.beskrivelse.value,\n          \"@Language\": \"NO\"\n        },\n        Affects: []\n      };\n    };\n\n    this.createNewLine = () => {\n      return {\n        Networks: {\n          AffectedNetwork: {\n            AffectedLine: {\n              LineRef: this.state.chosenLine,\n              Routes: null\n            }\n          }\n        }\n      };\n    };\n\n    this.createAffectedRoute = () => {\n      return this.state.multipleStops.map(item => ({\n        StopPoints: {\n          AffectedStopPoint: {\n            StopPointRef: item.value\n          }\n        }\n      }));\n    };\n\n    this.createNewSpecifiedStops = () => {\n      return {\n        Networks: {\n          AffectedNetwork: {\n            AffectedLine: {\n              LineRef: this.state.chosenLine,\n              Routes: {\n                AffectedRoute: this.createAffectedRoute()\n              }\n            }\n          }\n        }\n      };\n    };\n\n    this.handleSubmit = event => {\n      const newIssue = this.createNewIssue(event);\n\n      if (this.state.type === \"line\") {\n        if (this.state.checkbox) {\n          const newAffect = this.createNewSpecifiedStops();\n          newIssue.Affects = newAffect;\n        } else {\n          const newAffect = this.createNewLine();\n          newIssue.Affects = newAffect;\n        }\n      }\n\n      if (this.state.type === \"stop\") {\n        const newAffect = this.createAffectedRoute();\n        newIssue.Affects = newAffect;\n      }\n\n      if (this.state.type === \"departure\") {\n        console.log(\"to do\");\n      } else {\n        const tmp = JSON.parse(localStorage.getItem(\"issues\"));\n        tmp.PtSituationElement.push(newIssue);\n        localStorage.setItem('issues', JSON.stringify(tmp));\n        this.props.history.push('/overview');\n      }\n    };\n\n    this.handleChangeSpecifyStops = () => {\n      const checkBox = document.getElementById(\"gridCheck\");\n\n      if (checkBox.checked === true) {\n        this.setState({\n          checkbox: true\n        });\n      } else {\n        this.setState({\n          checkbox: undefined\n        });\n      }\n    };\n\n    this.handleClick = () => {\n      this.props.history.push('/');\n    };\n\n    this.callApiDeparture = event => {\n      this.setState({\n        departureSok: true\n      });\n      const date = document.getElementById(\"date\").value;\n      const authorities = localStorage.getItem(\"loggedInAs\") + ':Authority:' + localStorage.getItem(\"loggedInAs\");\n      const line = this.state.chosenLine;\n      api.run('departure', authorities, line, date);\n    };\n\n    this.handleChangeType = event => {\n      this.setState({\n        type: event.target.value,\n        checkbox: undefined,\n        chosenLine: undefined\n      });\n\n      if (event.target.value === 'departure') {\n        this.setState({\n          departure: true\n        });\n      }\n    };\n\n    this.handleChangeDate = props => {\n      if (this.state.type !== 'departure') {\n        this.setState({\n          message: true,\n          submit: true\n        });\n      }\n    };\n\n    this.handleChangeLine = event => {\n      if (this.state.type === 'departure') {\n        this.setState({\n          chosenLine: event.value\n        });\n      } else {\n        this.setState({\n          chosenLine: event.value,\n          dateFromTo: true\n        });\n      }\n    };\n\n    this.handleChangeSpecifiedStops = event => {\n      this.setState({\n        multipleStops: event,\n        dateFromTo: true\n      });\n    };\n\n    this.getFromLocalParsed = key => {\n      return JSON.parse(localStorage.getItem(key));\n    };\n\n    this.returnMappedObjects = list => {\n      return list.map(item => ({\n        label: item.name,\n        value: item.id\n      }));\n    };\n\n    this.returnSpecifiedLines = () => {\n      const tmp = JSON.parse(localStorage.getItem(\"lines\")).find(item => item.id === this.state.chosenLine);\n\n      if (tmp) {\n        return this.returnMappedObjects(tmp.quays);\n      }\n\n      return [];\n    };\n\n    this.returnServiceJourney = () => {\n      return JSON.parse(localStorage.getItem(\"departure\")).map(item => ({\n        label: 'Med avgang: ' + item.departureTime,\n        value: item.id\n      }));\n    };\n  }\n\n  componentDidMount() {\n    var that = this;\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    var year = new Date().getFullYear();\n    var hours = new Date().getHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    var min = new Date().getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    var sec = new Date().getSeconds();\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    that.setState({\n      date: year + '-' + month + '-' + date + 'T' + hours + ':' + min + ':' + sec + \".000+02:00\"\n    });\n    setTimeout(() => {\n      JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => stops = stops.concat(item.quays));\n    }, 800);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"background\",\n      src: Background,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"register_box\",\n      id: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"register\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Registrer ny melding\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"choose_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Velg linje, stopp eller avgang\"), React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      defaultValue: \"default\",\n      onChange: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"default\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Linje\"), React.createElement(\"option\", {\n      value: \"stop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Stopp\"), React.createElement(\"option\", {\n      value: \"departure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Avgang\"))), React.createElement(\"div\", {\n      className: \"choose_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, (this.state.type === \"line\" || this.state.type === \"departure\") && React.createElement(Select, {\n      placeholder: \"Velg linje\",\n      onChange: this.handleChangeLine,\n      options: this.returnMappedObjects(this.getFromLocalParsed(\"lines\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), this.state.type === \"line\" && this.state.chosenLine && React.createElement(\"div\", {\n      className: \"form-check d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"gridCheck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: \"gridCheck\",\n      value: \"stops\",\n      onChange: this.handleChangeSpecifyStops,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Gjelder avviket for spesifikke stopp?\"))), this.state.type === \"line\" && this.state.chosenLine && this.state.checkbox && React.createElement(Select, {\n      isMulti: true,\n      placeholder: \"Velg stopp\",\n      onChange: this.handleChangeSpecifiedStops,\n      options: this.returnSpecifiedLines(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), this.state.type === \"stop\" && React.createElement(Select, {\n      isMulti: true,\n      placeholder: \"Velg stopp\",\n      onChange: this.handleChangeSpecifiedStops,\n      options: this.returnMappedObjects(stops),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    })), this.state.departure && this.state.chosenLine && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Gyldighetsdato\"), React.createElement(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.callApiDeparture,\n      type: \"button\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"S\\xF8k avganger\")), this.state.departureSok && this.state.chosenLine && React.createElement(\"div\", {\n      className: \"choose_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Velg avgang\"), React.createElement(Select, {\n      onChange: console.log(\"trykka\"),\n      options: this.returnServiceJourney(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), this.state.dateFromTo && React.createElement(\"div\", {\n      className: \"bd-highlight justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Gyldighetsdato\"), React.createElement(\"div\", {\n      className: \"form-group d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"datetime-local\",\n      name: \"from\",\n      id: \"from\",\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChangeDate,\n      type: \"datetime-local\",\n      name: \"to\",\n      id: \"to\",\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))), this.state.message && React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Melding\"), React.createElement(\"input\", {\n      type: \"String\",\n      name: \"oppsummering\",\n      className: \"form-control\",\n      placeholder: \"Oppsummering\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"String\",\n      name: \"beskrivelse\",\n      className: \"form-control\",\n      placeholder: \"Beskrivelse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submit justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, this.state.submit && React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Registrer\"), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"submit\",\n      className: \"btn btn-warning btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Tilbake\")))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/register.js"],"names":["React","Background","NavBar","Select","issues","api","stops","Register","Component","state","date","newAffect","searchBar","type","undefined","chosenLine","departure","checkbox","multipleStops","dateFromTo","message","submit","departureSok","getIssuesCount","parseInt","JSON","stringify","PtSituationElement","length","createNewIssue","event","CreationTime","ParticipantRef","localStorage","getItem","SituationNumber","Source","SourceType","Progress","ValidityPeriod","StartTime","target","from","value","EndTime","to","Severity","ReportType","Summary","oppsummering","Description","beskrivelse","Affects","createNewLine","Networks","AffectedNetwork","AffectedLine","LineRef","Routes","createAffectedRoute","map","item","StopPoints","AffectedStopPoint","StopPointRef","createNewSpecifiedStops","AffectedRoute","handleSubmit","newIssue","console","log","tmp","parse","push","setItem","props","history","handleChangeSpecifyStops","checkBox","document","getElementById","checked","setState","handleClick","callApiDeparture","authorities","line","run","handleChangeType","handleChangeDate","handleChangeLine","handleChangeSpecifiedStops","getFromLocalParsed","key","returnMappedObjects","list","label","name","id","returnSpecifiedLines","find","quays","returnServiceJourney","departureTime","componentDidMount","that","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","setTimeout","concat","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Background from \"./background.jpg\";\nimport NavBar from \"./navbar\";\nimport Select from 'react-select';\nimport issues from \"./data\";\nimport api from \"./api\";\n\nvar stops = [];\n\nclass Register extends React.Component {\n\n    state = {\n            date: '',\n            newAffect: '',\n            searchBar: '',\n            stops: '',\n            type: undefined,\n            chosenLine: undefined,\n            departure: undefined,\n            checkbox: undefined,\n            multipleStops: undefined,\n            dateFromTo: undefined,\n            message: undefined,\n            submit: undefined,\n            departureSok: undefined,\n        };\n\n    componentDidMount() {\n        var that = this;\n        var date = new Date().getDate();\n        var month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        var year = new Date().getFullYear();\n        var hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        var min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        var sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n        that.setState({\n            date: year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\".000+02:00\",\n        });\n\n        setTimeout(() => {\n            JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => (\n                stops = stops.concat(item.quays)\n            ))\n        }, 800);\n    }\n\n    getIssuesCount = () => parseInt(JSON.stringify(issues.PtSituationElement.length));\n\n    createNewIssue = event => {\n        return {\n            CreationTime: this.state.date,\n            ParticipantRef: localStorage.getItem(\"loggedInAs\"),\n            SituationNumber: localStorage.getItem(\"loggedInAs\") + \":SituationNumber:\" + (this.getIssuesCount()+1),\n            Source: {\n                SourceType: \"directReport\",\n            },\n            Progress: \"open\",\n            ValidityPeriod: {\n                StartTime: event.target.from.value + \":00+02:00\",\n                EndTime: event.target.to.value + \":00+02:00\",\n            },\n            Severity: \"normal\",\n            ReportType: \"incident\",\n            Summary: {\n                \"@Value\": event.target.oppsummering.value,\n                \"@Language\": \"NO\"\n            },\n            Description: {\n                \"@Value\": event.target.beskrivelse.value,\n                \"@Language\": \"NO\"\n            },\n            Affects: [],\n        };\n    };\n\n    createNewLine = () => {\n        return {\n            Networks: { AffectedNetwork: { AffectedLine: { LineRef: this.state.chosenLine, Routes: null } } }\n        }\n    };\n\n    createAffectedRoute = () => {\n        return this.state.multipleStops.map(item => (\n            { StopPoints: { AffectedStopPoint: { StopPointRef: item.value } } }\n        ))\n    };\n\n    createNewSpecifiedStops = () => {\n        return {\n            Networks: { AffectedNetwork: { AffectedLine: { LineRef: this.state.chosenLine,\n                        Routes: { AffectedRoute: this.createAffectedRoute() }\n            } } }\n        }\n    };\n\n    handleSubmit = (event) => {\n        const newIssue = this.createNewIssue(event);\n\n        if(this.state.type === \"line\"){\n            if(this.state.checkbox){\n                const newAffect = this.createNewSpecifiedStops();\n                newIssue.Affects = newAffect;\n            }else{\n                const newAffect = this.createNewLine();\n                newIssue.Affects = newAffect;\n            }\n        }\n        if(this.state.type === \"stop\"){\n            const newAffect = this.createAffectedRoute();\n            newIssue.Affects = newAffect;\n        }\n        if(this.state.type === \"departure\"){\n            console.log(\"to do\");\n        }else{\n            const tmp = JSON.parse(localStorage.getItem(\"issues\"));\n            tmp.PtSituationElement.push(newIssue);\n            localStorage.setItem('issues', JSON.stringify(tmp));\n            this.props.history.push('/overview');\n        }\n    };\n\n    handleChangeSpecifyStops = () => {\n        const checkBox = document.getElementById(\"gridCheck\");\n        if (checkBox.checked === true){\n            this.setState({\n                checkbox: true,\n            });\n        }else{\n            this.setState({\n                checkbox: undefined,\n            });\n        }\n    };\n\n    handleClick = () => {\n        this.props.history.push('/');\n    };\n\n    callApiDeparture = (event) => {\n        this.setState({\n            departureSok: true,\n        });\n        const date = document.getElementById(\"date\").value;\n        const authorities = localStorage.getItem(\"loggedInAs\")+':Authority:'+localStorage.getItem(\"loggedInAs\");\n        const line = this.state.chosenLine;\n\n        api.run('departure', authorities, line, date);\n    };\n\n    handleChangeType = (event) =>{\n        this.setState({\n            type: event.target.value,\n            checkbox: undefined,\n            chosenLine: undefined,\n        });\n        if(event.target.value === 'departure'){\n            this.setState({\n                departure: true,\n            })\n        }\n    };\n\n    handleChangeDate = (props) => {\n        if(this.state.type !== 'departure'){\n            this.setState({\n                message: true,\n                submit: true,\n            });\n        }\n    };\n\n    handleChangeLine = (event) => {\n        if(this.state.type === 'departure'){\n            this.setState({\n                chosenLine: event.value,\n            });\n        }else{\n            this.setState({\n                chosenLine: event.value,\n                dateFromTo: true,\n            });\n        }\n    };\n\n    handleChangeSpecifiedStops = (event) => {\n        this.setState({ multipleStops: event, dateFromTo: true, });\n    };\n\n    getFromLocalParsed = (key) => {\n        return JSON.parse(localStorage.getItem(key))\n    };\n\n    returnMappedObjects = (list) => {\n        return list.map(item => (\n            { label: item.name, value: item.id }\n        ))\n    };\n\n    returnSpecifiedLines = () => {\n        const tmp = JSON.parse(localStorage.getItem(\"lines\")).find(item => (\n            (item.id === this.state.chosenLine)\n        ));\n\n        if(tmp){\n            return this.returnMappedObjects(tmp.quays);\n        }\n        return []\n    };\n\n    returnServiceJourney = () => {\n        return JSON.parse(localStorage.getItem(\"departure\")).map(item => (\n            { label: 'Med avgang: '+item.departureTime, value: item.id }\n        ))\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"navBar\">\n                    <img id=\"background\" src={ Background } alt=\"\" />\n                    <NavBar />\n                </div>\n                <div className=\"register_box\" id=\"small\" >\n                    <form className=\"register\" onSubmit={this.handleSubmit}>\n                        <h3 className=\"text-center text-white\">Registrer ny melding</h3>\n                        <br></br>\n                        <div className=\"choose_type\">\n                            <p className=\"text-center text-white\">Velg linje, stopp eller avgang</p>\n                            <select className=\"browser-default custom-select\" defaultValue={\"default\"} onChange={this.handleChangeType}>\n                                <option value=\"default\" disabled></option>\n                                <option value=\"line\">Linje</option>\n                                <option value=\"stop\">Stopp</option>\n                                <option value=\"departure\">Avgang</option>\n                            </select>\n                        </div>\n                        <div className=\"choose_type\">\n                            {((this.state.type === \"line\") || (this.state.type === \"departure\")) &&\n                            <Select placeholder=\"Velg linje\"\n                                onChange={this.handleChangeLine}\n                                    options={this.returnMappedObjects(this.getFromLocalParsed(\"lines\"))}\n                            />\n                            }\n                            {(this.state.type === \"line\") && (this.state.chosenLine) &&\n                            <div className=\"form-check d-flex justify-content-center\">\n                                <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" value=\"stops\" onChange={this.handleChangeSpecifyStops} />\n                                    <p className=\"text-center text-white\">Gjelder avviket for spesifikke stopp?</p>\n                                </label>\n                            </div>\n                            }\n                            {(this.state.type === \"line\") && (this.state.chosenLine) && (this.state.checkbox) &&\n                            <Select isMulti\n                                    placeholder=\"Velg stopp\"\n                                    onChange={this.handleChangeSpecifiedStops}\n                                    options={this.returnSpecifiedLines()}\n                            />\n                            }\n                            {(this.state.type === \"stop\") &&\n                            <Select isMulti\n                                    placeholder=\"Velg stopp\"\n                                    onChange={this.handleChangeSpecifiedStops}\n                                    options={this.returnMappedObjects(stops)}\n                            />\n                            }\n                        </div>\n\n                        {(this.state.departure) && (this.state.chosenLine)  &&\n                        <div>\n                            <br></br>\n                            <p className=\"text-center text-white\">Gyldighetsdato</p>\n                            <input type=\"date\" id=\"date\" className=\"form-control\" required/>\n                            <button onClick={this.callApiDeparture} type=\"button\" className=\"btn btn-primary btn-lg btn-block\">Søk avganger</button>\n                        </div>}\n\n                        {(this.state.departureSok) && (this.state.chosenLine) &&\n                        <div className=\"choose_type\">\n                            <br></br>\n                            <p className=\"text-center text-white\">Velg avgang</p>\n                            <Select onChange={console.log(\"trykka\")}\n                                    options={ this.returnServiceJourney() }\n                            />\n                        </div>}\n\n                        {(this.state.dateFromTo) &&\n                        <div className=\"bd-highlight justify-content-center\">\n                            <br></br>\n                            <p className=\"text-center text-white\">Gyldighetsdato</p>\n                            <div className=\"form-group d-flex\">\n                                <input type=\"datetime-local\" name=\"from\" id=\"from\" className=\"form-control\" required/>\n                                <input onChange={this.handleChangeDate} type=\"datetime-local\" name=\"to\" id=\"to\" className=\"form-control\" required/>\n                            </div>\n                        </div>\n                        }\n\n                        {(this.state.message) &&\n                        <div className=\"message\">\n                            <br></br>\n                            <p className=\"text-center text-white\">Melding</p>\n                            <input type=\"String\" name=\"oppsummering\" className=\"form-control\" placeholder=\"Oppsummering\"\n                                   required/>\n                            <input type=\"String\" name=\"beskrivelse\" className=\"form-control\" placeholder=\"Beskrivelse\"/>\n                        </div>\n                        }\n                        <br></br>\n                        <br></br>\n                        <div className=\"submit justify-content-center\">\n                            {(this.state.submit) &&\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">Registrer</button>}\n                            <button onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}