{"ast":null,"code":"var _jsxFileName = \"/Users/marcusgoplen/Desktop/entur/deviation-messages/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\nimport NavBar from \"./components/navbar\";\nimport Background from \"./img/background.jpg\";\nvar config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nconst firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      organizations: [],\n      organizationsName: [],\n      lines: '',\n      id: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setOrganizations();\n  }\n\n  updateOrganization(selectedOrg) {\n    this.setDeviationsAndLines(selectedOrg);\n  }\n\n  setOrganizations() {\n    let roles = this.props.userInfo.roles;\n    let setRoles = [];\n    let orgName = [];\n\n    for (let i = 0; i < roles.length; i++) {\n      if (roles[i].includes('editSX')) {\n        setRoles.push(roles[i].split(\"\\\"\")[7]);\n      }\n    }\n\n    api.getAuthorities().then(response => {\n      const authorities = response.data.authorities;\n\n      for (let i = 0; i < setRoles.length; i++) {\n        for (let j = 0; j < authorities.length; j++) {\n          if (authorities[j].id.includes(setRoles[i])) {\n            setRoles[i] = authorities[j].id;\n            orgName[i] = authorities[j].name;\n          }\n        }\n      }\n\n      this.setState({\n        organizations: setRoles,\n        organizationsName: orgName\n      }, () => this.setDeviationsAndLines(this.state.organizations[0]));\n    });\n  }\n\n  setDeviationsAndLines(selectedOrganization) {\n    db.collection(selectedOrganization).get().then(querySnapshot => {\n      for (let i = 0; i < querySnapshot.docs.length; i++) {\n        if (querySnapshot.docs[i].id === 'Issues') {\n          if (querySnapshot.docs[i].data().PtSituationElement) {\n            this.setState({\n              data: querySnapshot.docs[i].data(),\n              id: querySnapshot.docs[i].id\n            });\n          } else {\n            this.setState({\n              data: {\n                PtSituationElement: []\n              },\n              id: querySnapshot.docs[i].id\n            });\n          }\n        }\n      }\n\n      ;\n    });\n    api.getLines(selectedOrganization).then(response => {\n      if (response.data) {\n        this.setState({\n          lines: response.data.lines\n        });\n      } else {\n        console.log(\"Could not find any lines for this organization\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"background\",\n      src: Background,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      onSelectOrganization: this.updateOrganization,\n      user: this.state.organizations,\n      name: this.state.organizationsName,\n      logout: this.props.userInfo.logoutUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Overview, Object.assign({}, props, {\n        firebase: db,\n        data: this.state.data,\n        organizations: this.state.organizations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:deviationId?\",\n      render: props => React.createElement(Edit, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        organizations: this.state.organizations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: props => React.createElement(Register, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        lines: this.state.lines,\n        organizations: this.state.organizations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst renderIndex = userInfo => {\n  ReactDOM.render(React.createElement(App, {\n    userInfo: userInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nauth.initAuth();\nexport default renderIndex;","map":{"version":3,"sources":["/Users/marcusgoplen/Desktop/entur/deviation-messages/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Overview","Register","Edit","auth","api","NavBar","Background","config","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_TMDB_API_KEY","firebase","require","initializeApp","db","firestore","App","Component","state","data","organizations","organizationsName","lines","id","componentDidMount","setOrganizations","updateOrganization","selectedOrg","setDeviationsAndLines","roles","props","userInfo","setRoles","orgName","i","length","includes","push","split","getAuthorities","then","response","authorities","j","name","setState","selectedOrganization","collection","get","querySnapshot","docs","PtSituationElement","getLines","console","log","render","logoutUrl","renderIndex","document","getElementById","initAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,kCAAP;AACA,OAAO,mBAAP;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,QAA+C,kBAA/C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,IAAIC,MAAM,GAAG;AACTC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADX;AAETC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFf;AAGTC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,+BAHhB;AAITC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,6BAJd;AAKTC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,gCALlB;AAMTC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,sCANtB;AAOTC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPV,CAAb;;AAUA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;AAEAD,QAAQ,CAACE,aAAT,CAAuBnB,MAAvB;AACA,IAAIoB,EAAE,GAAGH,QAAQ,CAACI,SAAT,EAAT;;AAEA,MAAMC,GAAN,SAAkBlC,KAAK,CAACmC,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,aAAa,EAAE,EAFX;AAGJC,MAAAA,iBAAiB,EAAE,EAHf;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,EAAE,EAAE;AALA,KADsB;AAAA;;AAS9BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,gBAAL;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,WAAD,EAAc;AAC5B,SAAKC,qBAAL,CAA2BD,WAA3B;AACH;;AAEDF,EAAAA,gBAAgB,GAAG;AACf,QAAII,KAAK,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,KAAhC;AACA,QAAIG,QAAQ,GAAG,EAAf;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,UAAGL,KAAK,CAACK,CAAD,CAAL,CAASE,QAAT,CAAkB,QAAlB,CAAH,EAAgC;AAC5BJ,QAAAA,QAAQ,CAACK,IAAT,CAAcR,KAAK,CAACK,CAAD,CAAL,CAASI,KAAT,CAAe,IAAf,EAAqB,CAArB,CAAd;AACH;AACJ;;AACD/C,IAAAA,GAAG,CAACgD,cAAJ,GACGC,IADH,CACQC,QAAQ,IAAI;AACd,YAAMC,WAAW,GAAGD,QAAQ,CAACtB,IAAT,CAAcuB,WAAlC;;AACA,WAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACP,MAAhC,EAAwCQ,CAAC,EAAzC,EAA6C;AACzC,cAAGD,WAAW,CAACC,CAAD,CAAX,CAAepB,EAAf,CAAkBa,QAAlB,CAA2BJ,QAAQ,CAACE,CAAD,CAAnC,CAAH,EAA2C;AACvCF,YAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcQ,WAAW,CAACC,CAAD,CAAX,CAAepB,EAA7B;AACAU,YAAAA,OAAO,CAACC,CAAD,CAAP,GAAaQ,WAAW,CAACC,CAAD,CAAX,CAAeC,IAA5B;AACH;AACJ;AACJ;;AACD,WAAKC,QAAL,CACE;AAAEzB,QAAAA,aAAa,EAAEY,QAAjB;AAA2BX,QAAAA,iBAAiB,EAAEY;AAA9C,OADF,EAEE,MAAO,KAAKL,qBAAL,CAA2B,KAAKV,KAAL,CAAWE,aAAX,CAAyB,CAAzB,CAA3B,CAFT;AAGH,KAdH;AAeH;;AAEDQ,EAAAA,qBAAqB,CAACkB,oBAAD,EAAuB;AACxChC,IAAAA,EAAE,CAACiC,UAAH,CAAcD,oBAAd,EAAoCE,GAApC,GAA0CR,IAA1C,CAAgDS,aAAD,IAAmB;AAC9D,WAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,aAAa,CAACC,IAAd,CAAmBf,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,YAAGe,aAAa,CAACC,IAAd,CAAmBhB,CAAnB,EAAsBX,EAAtB,KAA6B,QAAhC,EAAyC;AACrC,cAAG0B,aAAa,CAACC,IAAd,CAAmBhB,CAAnB,EAAsBf,IAAtB,GAA6BgC,kBAAhC,EAAmD;AAC/C,iBAAKN,QAAL,CAAc;AACV1B,cAAAA,IAAI,EAAE8B,aAAa,CAACC,IAAd,CAAmBhB,CAAnB,EAAsBf,IAAtB,EADI;AAEVI,cAAAA,EAAE,EAAE0B,aAAa,CAACC,IAAd,CAAmBhB,CAAnB,EAAsBX;AAFhB,aAAd;AAIH,WALD,MAKK;AACD,iBAAKsB,QAAL,CAAc;AACV1B,cAAAA,IAAI,EAAE;AAACgC,gBAAAA,kBAAkB,EAAE;AAArB,eADI;AAEV5B,cAAAA,EAAE,EAAE0B,aAAa,CAACC,IAAd,CAAmBhB,CAAnB,EAAsBX;AAFhB,aAAd;AAIH;AACJ;AACJ;;AAAA;AACJ,KAhBD;AAkBAhC,IAAAA,GAAG,CAAC6D,QAAJ,CAAaN,oBAAb,EACGN,IADH,CACQC,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACtB,IAAZ,EAAiB;AACb,aAAK0B,QAAL,CAAc;AACVvB,UAAAA,KAAK,EAAEmB,QAAQ,CAACtB,IAAT,CAAcG;AADX,SAAd;AAGH,OAJD,MAIK;AACD+B,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACH;AACJ,KATH;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,GAAG,EAAG9D,UAA3B;AAAwC,MAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,oBAAoB,EAAE,KAAKiC,kBAAnC;AAAuD,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWE,aAAxE;AAAuF,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,iBAAxG;AAA2H,MAAA,MAAM,EAAE,KAAKS,KAAL,CAAWC,QAAX,CAAoByB,SAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAKI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AACO,MAAA,MAAM,EAAE1B,KAAK,IAAI,oBAAC,QAAD,oBAAcA,KAAd;AACU,QAAA,QAAQ,EAAEhB,EADpB;AAEU,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWC,IAF3B;AAGU,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWE,aAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAUI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,qBAAZ;AACO,MAAA,MAAM,EAAEU,KAAK,IAAI,oBAAC,IAAD,oBAAUA,KAAV;AACM,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,IADvB;AAEM,QAAA,QAAQ,EAAEL,EAFhB;AAGM,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWK,EAHxB;AAIM,QAAA,aAAa,EAAE,KAAKL,KAAL,CAAWE,aAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAgBI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AACO,MAAA,MAAM,EAAEU,KAAK,IAAI,oBAAC,QAAD,oBAAcA,KAAd;AACU,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,IAD3B;AAEU,QAAA,QAAQ,EAAEL,EAFpB;AAGU,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWK,EAH5B;AAIU,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWI,KAJ5B;AAKU,QAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWE,aALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CADJ,CADJ;AA4BH;;AAvG6B;;AA0GlC,MAAMqC,WAAW,GAAI1B,QAAD,IAAc;AAC9BhD,EAAAA,QAAQ,CAACwE,MAAT,CACI,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAExB,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI2B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ;AAIH,CALD;;AAOArE,IAAI,CAACsE,QAAL;AAEA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\nimport NavBar from \"./components/navbar\";\nimport Background from \"./img/background.jpg\";\n\nvar config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        organizations: [],\n        organizationsName: [],\n        lines: '',\n        id: '',\n    };\n\n    componentDidMount() {\n        this.setOrganizations();\n    }\n\n    updateOrganization(selectedOrg) {\n        this.setDeviationsAndLines(selectedOrg);\n    };\n\n    setOrganizations() {\n        let roles = this.props.userInfo.roles;\n        let setRoles = [];\n        let orgName = [];\n        for (let i = 0; i < roles.length; i++) {\n            if(roles[i].includes('editSX')) {\n                setRoles.push(roles[i].split(\"\\\"\")[7]);\n            }\n        }\n        api.getAuthorities()\n          .then(response => {\n              const authorities = response.data.authorities;\n              for (let i = 0; i < setRoles.length; i++) {\n                  for (let j = 0; j < authorities.length; j++) {\n                      if(authorities[j].id.includes(setRoles[i])){\n                          setRoles[i] = authorities[j].id;\n                          orgName[i] = authorities[j].name;\n                      }\n                  }\n              }\n              this.setState(\n                { organizations: setRoles, organizationsName: orgName },\n                ()  => this.setDeviationsAndLines(this.state.organizations[0]));\n          });\n    }\n\n    setDeviationsAndLines(selectedOrganization) {\n        db.collection(selectedOrganization).get().then((querySnapshot) => {\n            for (let i = 0; i < querySnapshot.docs.length; i++) {\n                if(querySnapshot.docs[i].id === 'Issues'){\n                    if(querySnapshot.docs[i].data().PtSituationElement){\n                        this.setState({\n                            data: querySnapshot.docs[i].data(),\n                            id: querySnapshot.docs[i].id,\n                        });\n                    }else{\n                        this.setState({\n                            data: {PtSituationElement: []},\n                            id: querySnapshot.docs[i].id,\n                        })\n                    }\n                }\n            };\n        });\n\n        api.getLines(selectedOrganization)\n          .then(response => {\n              if(response.data){\n                  this.setState({\n                      lines: response.data.lines\n                  })\n              }else{\n                  console.log(\"Could not find any lines for this organization\");\n              }\n          })\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <img id=\"background\" src={ Background } alt=\"\" />\n                    <div className=\"navBar\">\n                        <NavBar onSelectOrganization={this.updateOrganization} user={this.state.organizations} name={this.state.organizationsName} logout={this.props.userInfo.logoutUrl} />\n                    </div>\n                    <Route exact path=\"/\"\n                           render={props => <Overview {...props}\n                                                      firebase={db}\n                                                      data={this.state.data}\n                                                      organizations={this.state.organizations} />} />\n                    <Route path=\"/edit/:deviationId?\"\n                           render={props => <Edit {...props}\n                                                  data={this.state.data}\n                                                  firebase={db}\n                                                  docID={this.state.id}\n                                                  organizations={this.state.organizations} />} />\n                    <Route path=\"/register\"\n                           render={props => <Register {...props}\n                                                      data={this.state.data}\n                                                      firebase={db}\n                                                      docID={this.state.id}\n                                                      lines={this.state.lines}\n                                                      organizations={this.state.organizations} />} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nconst renderIndex = (userInfo) => {\n    ReactDOM.render(\n        <App userInfo={userInfo} />,\n        document.getElementById('root')\n    );\n};\n\nauth.initAuth();\n\nexport default renderIndex;\n"]},"metadata":{},"sourceType":"module"}