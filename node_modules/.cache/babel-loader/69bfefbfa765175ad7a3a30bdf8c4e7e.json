{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.DropDownOptions = DropDownOptions;\nexports.DropDown = DropDown;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _ = require('./');\n\nrequire('./styles.css');\n\nvar _styles = {\n  'buttonClassName': 'entur-form-control--button',\n  'buttonGroupClassName': 'entur-button-group',\n  'inputGroupClassName': 'entur-input-group',\n  'rootClassName': 'entur-form-control',\n  'entur-form-control': 'entur-form-control',\n  'entur-form-control-prepend': 'entur-form-control-prepend',\n  'entur-form-control-append': 'entur-form-control-append',\n  'entur-form-control--disabled': 'entur-form-control--disabled',\n  'entur-form-control-prepend--disabled': 'entur-form-control-prepend--disabled',\n  'entur-form-control-append--disabled': 'entur-form-control-append--disabled',\n  'entur-form-control--has-focus': 'entur-form-control--has-focus',\n  'entur-form-control-prepend--has-focus': 'entur-form-control-prepend--has-focus',\n  'entur-form-control-append--has-focus': 'entur-form-control-append--has-focus',\n  'entur-form-control--size-md': 'entur-form-control--size-md',\n  'entur-form-control-prepend--size-md': 'entur-form-control-prepend--size-md',\n  'entur-form-control-append--size-md': 'entur-form-control-append--size-md',\n  'entur-form-control--size-lg': 'entur-form-control--size-lg',\n  'entur-form-control-prepend--size-lg': 'entur-form-control-prepend--size-lg',\n  'entur-form-control-append--size-lg': 'entur-form-control-append--size-lg',\n  'entur-form-control--is-prepended': 'entur-form-control--is-prepended',\n  'entur-form-control-prepend--is-prepended': 'entur-form-control-prepend--is-prepended',\n  'entur-form-control-append--is-prepended': 'entur-form-control-append--is-prepended',\n  'entur-form-control--is-appended': 'entur-form-control--is-appended',\n  'entur-form-control-prepend--is-appended': 'entur-form-control-prepend--is-appended',\n  'entur-form-control-append--is-appended': 'entur-form-control-append--is-appended',\n  'entur-form-control--valid-success': 'entur-form-control--valid-success',\n  'entur-form-control-prepend--valid-success': 'entur-form-control-prepend--valid-success',\n  'entur-form-control-append--valid-success': 'entur-form-control-append--valid-success',\n  'entur-form-control--valid-error': 'entur-form-control--valid-error',\n  'entur-form-control-prepend--valid-error': 'entur-form-control-prepend--valid-error',\n  'entur-form-control-append--valid-error': 'entur-form-control-append--valid-error',\n  'entur-form-control--width-fluid': 'entur-form-control--width-fluid',\n  'entur-form-control-prepend--width-fluid': 'entur-form-control-prepend--width-fluid',\n  'entur-form-control-append--width-fluid': 'entur-form-control-append--width-fluid',\n  'entur-form-control--variant-midnight': 'entur-form-control--variant-midnight',\n  'entur-form-control-prepend--variant-midnight': 'entur-form-control-prepend--variant-midnight',\n  'entur-form-control-append--variant-midnight': 'entur-form-control-append--variant-midnight',\n  'entur-form-control--button': 'entur-form-control--button',\n  'entur-form-control--active': 'entur-form-control--active',\n  'entur-button-group': 'entur-button-group',\n  'entur-button-group__btn': 'entur-button-group__btn',\n  'entur-button-group--width-fluid': 'entur-button-group--width-fluid',\n  'entur-input-group': 'entur-input-group',\n  'entur-input-group--width-fluid': 'entur-input-group--width-fluid'\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction DropDownOptions(_ref) {\n  var value = _ref.value,\n      label = _ref.label,\n      rest = _objectWithoutProperties(_ref, ['value', 'label']);\n\n  return _react2.default.createElement('option', _extends({\n    value: value\n  }, rest), label);\n}\n\nDropDownOptions.propTypes = {\n  label: _propTypes2.default.string.isRequired,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired\n};\n\nfunction DropDown(_ref2) {\n  var className = _ref2.className,\n      variant = _ref2.variant,\n      size = _ref2.size,\n      width = _ref2.width,\n      valid = _ref2.valid,\n      disabled = _ref2.disabled,\n      refCallback = _ref2.refCallback,\n      prepend = _ref2.prepend,\n      append = _ref2.append,\n      children = _ref2.children,\n      style = _ref2.style,\n      rest = _objectWithoutProperties(_ref2, ['className', 'variant', 'size', 'width', 'valid', 'disabled', 'refCallback', 'prepend', 'append', 'children', 'style']);\n\n  var classNames = (0, _.getClassNames)(_styles.rootClassName, {\n    variant: variant,\n    size: size,\n    width: width,\n    valid: valid,\n    prepend: prepend,\n    append: append\n  });\n\n  var childrenArray = _react2.default.Children.toArray(children);\n\n  var isOnlyDropDownOptions = childrenArray.every(function (_ref3) {\n    var type = _ref3.type;\n    return type === DropDownOptions;\n  });\n\n  if (!isOnlyDropDownOptions) {\n    throw new Error('DropDown only allow children of type DropDownOptions');\n  }\n\n  if (!prepend && !append) {\n    return _react2.default.createElement('select', _extends({}, rest, {\n      ref: refCallback,\n      className: (0, _classnames2.default)(classNames, className),\n      style: style,\n      disabled: disabled\n    }), children);\n  }\n\n  return _react2.default.createElement(_.FormControlWrapper, {\n    prepend: prepend,\n    append: append,\n    valid: valid,\n    variant: variant,\n    size: size,\n    width: width,\n    className: className,\n    style: style,\n    disabled: disabled\n  }, _react2.default.createElement('select', _extends({}, rest, {\n    ref: refCallback,\n    className: classNames,\n    disabled: disabled\n  }), children));\n}\n\nDropDown.propTypes = {\n  append: _propTypes2.default.node,\n  className: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  size: _propTypes2.default.oneOf(['md', 'lg']).isRequired,\n  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  valid: _propTypes2.default.oneOf(['success', 'error', 'warning', 'info', 'none']),\n  variant: _propTypes2.default.oneOf(['primary', 'midnight']),\n  width: _propTypes2.default.oneOf(['fluid']),\n  prepend: _propTypes2.default.node,\n  disabled: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  style: _propTypes2.default.object,\n  refCallback: _propTypes2.default.func\n};\nDropDown.defaultProps = {\n  size: 'md',\n  value: ''\n};\nDropDownOptions.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'DropDownOptions',\n  'props': {\n    'label': {\n      'type': {\n        'name': 'string'\n      },\n      'required': true,\n      'description': ''\n    },\n    'value': {\n      'type': {\n        'name': 'union',\n        'value': [{\n          'name': 'string'\n        }, {\n          'name': 'number'\n        }]\n      },\n      'required': true,\n      'description': ''\n    }\n  }\n};\nDropDown.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'DropDown',\n  'props': {\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'value': {\n      'defaultValue': {\n        'value': '\\'\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'union',\n        'value': [{\n          'name': 'string'\n        }, {\n          'name': 'number'\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'append': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'onChange': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    },\n    'valid': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'success\\'',\n          'computed': false\n        }, {\n          'value': '\\'error\\'',\n          'computed': false\n        }, {\n          'value': '\\'warning\\'',\n          'computed': false\n        }, {\n          'value': '\\'info\\'',\n          'computed': false\n        }, {\n          'value': '\\'none\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'variant': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'primary\\'',\n          'computed': false\n        }, {\n          'value': '\\'midnight\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'width': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'fluid\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'prepend': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'disabled': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'style': {\n      'type': {\n        'name': 'object'\n      },\n      'required': false,\n      'description': ''\n    },\n    'refCallback': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}