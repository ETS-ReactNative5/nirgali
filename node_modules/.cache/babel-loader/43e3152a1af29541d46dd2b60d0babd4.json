{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _helper = require('../helper');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n} // Nucleo Icon, see LICENCE.md\n// https://nucleoapp.com/license\n\n\nfunction Teddy(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === undefined ? 'currentColor' : _ref$color,\n      size = _ref.size,\n      svgProps = _objectWithoutProperties(_ref, ['color', 'size']);\n\n  return _react2.default.createElement('svg', _extends({\n    xmlns: 'http://www.w3.org/2000/svg',\n    viewBox: '0 0 16 16'\n  }, (0, _helper.getIconSize)(size), svgProps), _react2.default.createElement('path', {\n    fill: color,\n    d: 'M14.89453,3.26012c0-1.20605-0.94824-2.1543-2.15527-2.1543c-1.20605,0-2.1543,0.94824-2.1543,2.1543 v0.17236C9.80957,3.08775,8.94775,2.82945,8,2.82945s-1.80957,0.2583-2.58545,0.60303V3.26012 c0-1.20605-0.94775-2.1543-2.1543-2.1543s-2.1543,0.94824-2.1543,2.1543c0,1.12061,0.86182,2.06836,1.98193,2.15479 C2.39844,6.36266,1.96777,7.5692,1.96777,8.86168c0,3.36133,2.67139,6.03223,6.03223,6.03223 c3.36133,0,6.03223-2.6709,6.03223-6.03223c0-1.29248-0.43066-2.49902-1.12012-3.44678 C14.03223,5.32848,14.89453,4.38072,14.89453,3.26012z M5.41455,7.99986c0-0.51709,0.34473-0.86182,0.86182-0.86182 s0.86182,0.34473,0.86182,0.86182S6.79346,8.86168,6.27637,8.86168S5.41455,8.51695,5.41455,7.99986z M9.72363,12.30895H6.27637 v-0.8623h0.86182V9.72398h1.72363v1.72266h0.86182V12.30895z M9.72363,8.86168c-0.51758,0-0.86182-0.34473-0.86182-0.86182 s0.34424-0.86182,0.86182-0.86182c0.5166,0,0.86133,0.34473,0.86133,0.86182S10.24023,8.86168,9.72363,8.86168z'\n  }));\n}\n\nTeddy.propTypes = {\n  size: _propTypes2.default.oneOf(['xlarge', 'large', 'medium', 'small']),\n  color: _propTypes2.default.string\n};\nexports.default = Teddy;\nTeddy.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'Teddy',\n  'props': {\n    'color': {\n      'defaultValue': {\n        'value': '\\'currentColor\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'xlarge\\'',\n          'computed': false\n        }, {\n          'value': '\\'large\\'',\n          'computed': false\n        }, {\n          'value': '\\'medium\\'',\n          'computed': false\n        }, {\n          'value': '\\'small\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}