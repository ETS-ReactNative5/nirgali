{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Home from './components/home';\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\n\nvar convert = require('xml-js');\n\nconst firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCKcRzWRYlZkwG4I4WTTb2uRnI7VczCX5M\",\n  authDomain: \"deviation-messages.firebaseapp.com\",\n  databaseURL: \"https://deviation-messages.firebaseio.com\",\n  projectId: \"deviation-messages\",\n  storageBucket: \"deviation-messages.appspot.com\",\n  messagingSenderId: \"132641363074\",\n  appId: \"1:132641363074:web:1069e5f0a9717b4c\"\n};\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      key: 'GOA:Authority:GOA',\n      lines: '',\n      id: ''\n    };\n  }\n\n  componentDidMount() {\n    //api.organisationID(userInfo.id);\n    var siri = {\n      Siri: {\n        _attributes: {\n          version: \"2.0\",\n          xmlns: \"http://www.siri.org.uk/siri\",\n          'xmlns:ns2': \"http://www.ifopt.org.uk/acsb\",\n          'xmlns:ns3': \"http://www.ifopt.org.uk/ifopt\",\n          'xmlns:ns4': \"http://datex2.eu/schema/2_0RC1/2_0\"\n        }\n      }\n    };\n    var array = {\n      ResponseTimestamp: dateTime,\n      ProducerRef: \"ENT\",\n      SituationExchangeDelivery: {\n        ResponseTimestamp: dateTime,\n        Situations: []\n      }\n    };\n    db.collection(this.state.key).get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.id === 'Issues') {\n          if (doc.data().PtSituationElement) {\n            this.setState({\n              data: doc.data(),\n              id: doc.id\n            });\n          } else {\n            this.setState({\n              data: {\n                PtSituationElement: []\n              },\n              id: doc.id\n            });\n          }\n        }\n\n        var situations = {\n          PtSituationElement: []\n        };\n\n        for (var i = 0; i < doc.data().PtSituationElement.length; i++) {\n          if (Date.parse(doc.data().PtSituationElement[i].ValidityPeriod.EndTime) < Date.parse(dateTime) || doc.data().PtSituationElement[i].Progress === 'closed') {\n            console.log('ignore');\n          } else {\n            situations.PtSituationElement.push(doc.data().PtSituationElement[i]);\n          }\n        }\n\n        array.SituationExchangeDelivery.Situations.push(situations);\n        siri.Siri.ServiceDelivery = array;\n        var result = convert.js2xml(siri, {\n          compact: true,\n          spaces: 4\n        });\n        console.log(result);\n      });\n    });\n    api.run(this.state.key, null, null).then(response => {\n      this.setState({\n        lines: response.data.lines\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, {\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:deviationId?\",\n      render: props => React.createElement(Edit, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: props => React.createElement(Register, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        lines: this.state.lines,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/overview\",\n      render: props => React.createElement(Overview, Object.assign({}, props, {\n        data: this.state.data,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst renderIndex = userInfo => {\n  ReactDOM.render(React.createElement(App, {\n    userInfo: userInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nrenderIndex(\"null\"); //auth.initAuth();\n\nexport default renderIndex;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Home","Overview","Register","Edit","auth","api","convert","require","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","App","Component","state","data","key","lines","id","componentDidMount","siri","Siri","_attributes","version","xmlns","array","ResponseTimestamp","dateTime","ProducerRef","SituationExchangeDelivery","Situations","collection","get","then","querySnapshot","forEach","doc","PtSituationElement","setState","situations","i","length","Date","parse","ValidityPeriod","EndTime","Progress","console","log","push","ServiceDelivery","result","js2xml","compact","spaces","run","response","render","props","split","userInfo","logoutUrl","renderIndex","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Home from './components/home'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth'\nimport api from \"./api/api\";\nvar convert = require('xml-js');\n\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCKcRzWRYlZkwG4I4WTTb2uRnI7VczCX5M\",\n    authDomain: \"deviation-messages.firebaseapp.com\",\n    databaseURL: \"https://deviation-messages.firebaseio.com\",\n    projectId: \"deviation-messages\",\n    storageBucket: \"deviation-messages.appspot.com\",\n    messagingSenderId: \"132641363074\",\n    appId: \"1:132641363074:web:1069e5f0a9717b4c\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        key: 'GOA:Authority:GOA',\n        lines: '',\n        id: '',\n    };\n\n    componentDidMount() {\n        //api.organisationID(userInfo.id);\n\n        var siri = {\n            Siri: {\n                _attributes: {\n                    version: \"2.0\" ,\n                    xmlns: \"http://www.siri.org.uk/siri\",\n                    'xmlns:ns2': \"http://www.ifopt.org.uk/acsb\",\n                    'xmlns:ns3': \"http://www.ifopt.org.uk/ifopt\",\n                    'xmlns:ns4': \"http://datex2.eu/schema/2_0RC1/2_0\"\n                },\n            }\n        };\n\n        var array = {\n            ResponseTimestamp: dateTime,\n            ProducerRef: \"ENT\",\n            SituationExchangeDelivery: {\n                ResponseTimestamp: dateTime,\n                Situations: [],\n            }\n        };\n\n        db.collection(this.state.key).get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                if(doc.id === 'Issues'){\n                    if(doc.data().PtSituationElement){\n                        this.setState({\n                            data: doc.data(),\n                            id: doc.id,\n                        })\n                    }else{\n                        this.setState({\n                            data: {PtSituationElement: []},\n                            id: doc.id,\n                        })\n                    }\n                }\n                var situations = {PtSituationElement: []};\n                for (var i = 0; i < doc.data().PtSituationElement.length; i++) {\n                    if(Date.parse(doc.data().PtSituationElement[i].ValidityPeriod.EndTime) < Date.parse(dateTime) || doc.data().PtSituationElement[i].Progress === 'closed'){\n                        console.log('ignore');\n                    }else{\n                        situations.PtSituationElement.push(doc.data().PtSituationElement[i])\n                    }\n                }\n                array.SituationExchangeDelivery.Situations.push(situations);\n                siri.Siri.ServiceDelivery = array;\n                var result = convert.js2xml(siri, {compact: true, spaces: 4});\n                console.log(result);\n            });\n        });\n\n        api.run(this.state.key, null, null)\n            .then(response => {\n                this.setState({\n                    lines: response.data.lines\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path=\"/\" render={props => <Home {...props} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/edit/:deviationId?\" render={props =>\n                        <Edit {...props} data={this.state.data} firebase={db} docID={this.state.id}\n                              orgID={this.state.key} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/register\" render={props =>\n                        <Register {...props} data={this.state.data} firebase={db} docID={this.state.id}\n                                  orgID={this.state.key} lines={this.state.lines} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/overview\" render={props => <Overview {...props} data={this.state.data}\n                                                                       user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nconst renderIndex = (userInfo) => {\n    ReactDOM.render(\n        <App userInfo={userInfo} />,\n        document.getElementById('root')\n    );\n};\n\nrenderIndex(\"null\");\n//auth.initAuth();\n\nexport default renderIndex;"]},"metadata":{},"sourceType":"module"}