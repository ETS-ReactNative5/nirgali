{"ast":null,"code":"var _jsxFileName = \"/Users/marcusgoplen/Desktop/entur/deviation-messages/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\nvar config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nconst firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      key: 'GOA:Authority:GOA',\n      keys: [],\n      lines: '',\n      id: ''\n    };\n  }\n\n  componentDidMount() {\n    let roles = this.props.userInfo.roles;\n\n    for (let i = 0; i < roles.length; i++) {\n      if (roles[i].includes('editSX')) {\n        console.log(roles[i]);\n      }\n    }\n\n    db.collection(this.state.key).get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.id === 'Issues') {\n          if (doc.data().PtSituationElement) {\n            this.setState({\n              data: doc.data(),\n              id: doc.id\n            });\n          } else {\n            this.setState({\n              data: {\n                PtSituationElement: []\n              },\n              id: doc.id\n            });\n          }\n        }\n      });\n    });\n    api.getLines(this.state.key).then(response => {\n      this.setState({\n        lines: response.data.lines\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Overview, Object.assign({}, props, {\n        data: this.state.data,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:deviationId?\",\n      render: props => React.createElement(Edit, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        user: this.state.key.split(':')[0],\n        ogout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: props => React.createElement(Register, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        lines: this.state.lines,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst renderIndex = userInfo => {\n  ReactDOM.render(React.createElement(App, {\n    userInfo: userInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nauth.initAuth();\nexport default renderIndex;","map":{"version":3,"sources":["/Users/marcusgoplen/Desktop/entur/deviation-messages/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Overview","Register","Edit","auth","api","config","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_TMDB_API_KEY","firebase","require","initializeApp","db","firestore","App","Component","state","data","key","keys","lines","id","componentDidMount","roles","props","userInfo","i","length","includes","console","log","collection","get","then","querySnapshot","forEach","doc","PtSituationElement","setState","getLines","response","render","split","logoutUrl","renderIndex","document","getElementById","initAuth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\n\nvar config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        key: 'GOA:Authority:GOA',\n        keys: [],\n        lines: '',\n        id: '',\n    };\n\n    componentDidMount() {\n        let roles = this.props.userInfo.roles;\n        for (let i = 0; i < roles.length; i++) {\n            if(roles[i].includes('editSX')) {\n                console.log(roles[i]);\n            }\n        }\n\n        db.collection(this.state.key).get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                if(doc.id === 'Issues'){\n                    if(doc.data().PtSituationElement){\n                        this.setState({\n                            data: doc.data(),\n                            id: doc.id,\n                        });\n                    }else{\n                        this.setState({\n                            data: {PtSituationElement: []},\n                            id: doc.id,\n                        })\n                    }\n                }\n            });\n        });\n\n        api.getLines(this.state.key)\n            .then(response => {\n                this.setState({\n                    lines: response.data.lines\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path=\"/\"\n                           render={props => <Overview {...props}\n                                                      data={this.state.data}\n                                                      user={this.state.key.split(':')[0]}\n                                                      logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/edit/:deviationId?\"\n                           render={props => <Edit {...props}\n                                                  data={this.state.data}\n                                                  firebase={db}\n                                                  docID={this.state.id}\n                                                  orgID={this.state.key}\n                                                  user={this.state.key.split(':')[0]}\n                                                  ogout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/register\"\n                           render={props => <Register {...props}\n                                                      data={this.state.data}\n                                                      firebase={db}\n                                                      docID={this.state.id}\n                                                      orgID={this.state.key}\n                                                      lines={this.state.lines}\n                                                      user={this.state.key.split(':')[0]}\n                                                      logout={this.props.userInfo.logoutUrl} />} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nconst renderIndex = (userInfo) => {\n    ReactDOM.render(\n        <App userInfo={userInfo} />,\n        document.getElementById('root')\n    );\n};\n\nauth.initAuth();\n\nexport default renderIndex;\n"]},"metadata":{},"sourceType":"module"}