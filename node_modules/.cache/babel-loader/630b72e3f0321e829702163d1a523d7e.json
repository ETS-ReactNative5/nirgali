{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Home from './components/home';\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\n\nvar convert = require('xml-js');\n\nrequire('dotenv').config();\n\nconst firebase = require(\"firebase/app\");\n\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n  apiKey: data.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: data.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: data.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: data.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: data.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: data.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: data.env.REACT_APP_TMDB_API_KEY\n};\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: '',\n      key: 'GOA:Authority:GOA',\n      lines: '',\n      id: ''\n    };\n  }\n\n  componentDidMount() {\n    //api.organisationID(userInfo.id);\n    let date = new Date().getDate();\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n\n    let month = new Date().getMonth() + 1;\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let year = new Date().getFullYear();\n    let hours = new Date().getHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    let min = new Date().getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    let sec = new Date().getSeconds();\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    const dateTime = year + '-' + month + '-' + date + 'T' + hours + ':' + min + ':' + sec + \"+02:00\";\n    var siri = {\n      Siri: {\n        _attributes: {\n          version: \"2.0\",\n          xmlns: \"http://www.siri.org.uk/siri\",\n          'xmlns:ns2': \"http://www.ifopt.org.uk/acsb\",\n          'xmlns:ns3': \"http://www.ifopt.org.uk/ifopt\",\n          'xmlns:ns4': \"http://datex2.eu/schema/2_0RC1/2_0\"\n        }\n      }\n    };\n    var array = {\n      ResponseTimestamp: dateTime,\n      ProducerRef: \"ENT\",\n      SituationExchangeDelivery: {\n        ResponseTimestamp: dateTime,\n        Situations: []\n      }\n    };\n    db.collection(this.state.key).get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        if (doc.id === 'Issues') {\n          if (doc.data().PtSituationElement) {\n            this.setState({\n              data: doc.data(),\n              id: doc.id\n            });\n            var situations = {\n              PtSituationElement: []\n            };\n\n            for (var i = 0; i < doc.data().PtSituationElement.length; i++) {\n              if (Date.parse(doc.data().PtSituationElement[i].ValidityPeriod.EndTime) < Date.parse(dateTime) || doc.data().PtSituationElement[i].Progress === 'closed') {\n                console.log('ignore');\n              } else {\n                var swapPlaces = doc.data().PtSituationElement[i];\n                var tmp = {};\n                tmp['CreationTime'] = swapPlaces.CreationTime;\n                tmp['ParticipantRef'] = swapPlaces.ParticipantRef;\n                tmp['SituationNumber'] = swapPlaces.SituationNumber;\n                tmp['Source'] = swapPlaces.Source;\n                tmp['Progress'] = swapPlaces.Progress;\n                tmp['ValidityPeriod'] = swapPlaces.ValidityPeriod;\n\n                if (tmp.ValidityPeriod.EndTime) {\n                  var endTime = tmp.ValidityPeriod.EndTime;\n                  delete tmp.ValidityPeriod.EndTime;\n                  tmp.ValidityPeriod['EndTime'] = endTime;\n                }\n\n                tmp['UndefinedReason'] = {};\n                tmp['Severity'] = swapPlaces.Severity;\n                tmp['ReportType'] = swapPlaces.ReportType;\n                tmp['Summary'] = swapPlaces.Summary;\n\n                if (swapPlaces.Description) {\n                  tmp['Description'] = swapPlaces.Description;\n                }\n\n                tmp['Affects'] = swapPlaces.Affects;\n\n                if (tmp.Affects.Networks) {\n                  if (tmp.Affects.Networks.AffectedNetwork.AffectedLine.Routes) {\n                    var routes = tmp.Affects.Networks.AffectedNetwork.AffectedLine.Routes;\n                    delete tmp.Affects.Networks.AffectedNetwork.AffectedLine.Routes;\n                    tmp.Affects.Networks.AffectedNetwork.AffectedLine['Routes'] = routes;\n                  }\n                }\n\n                if (tmp.Affects.VehicleJourneys) {\n                  if (tmp.Affects.VehicleJourneys.AffectedVehicleJourney.Route === null) {\n                    delete tmp.Affects.VehicleJourneys.AffectedVehicleJourney.Route;\n                  }\n                }\n\n                situations.PtSituationElement.push(tmp);\n              }\n            }\n\n            array.SituationExchangeDelivery.Situations.push(situations);\n            siri.Siri.ServiceDelivery = array;\n            var result = convert.js2xml(siri, {\n              compact: true,\n              spaces: 4\n            });\n            console.log(result);\n          } else {\n            this.setState({\n              data: {\n                PtSituationElement: []\n              },\n              id: doc.id\n            });\n          }\n        }\n      });\n    });\n    api.run(this.state.key, null, null).then(response => {\n      this.setState({\n        lines: response.data.lines\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Home, Object.assign({}, props, {\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit/:deviationId?\",\n      render: props => React.createElement(Edit, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/register\",\n      render: props => React.createElement(Register, Object.assign({}, props, {\n        data: this.state.data,\n        firebase: db,\n        docID: this.state.id,\n        orgID: this.state.key,\n        lines: this.state.lines,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/overview\",\n      render: props => React.createElement(Overview, Object.assign({}, props, {\n        data: this.state.data,\n        user: this.state.key.split(':')[0],\n        logout: this.props.userInfo.logoutUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst renderIndex = userInfo => {\n  ReactDOM.render(React.createElement(App, {\n    userInfo: userInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nrenderIndex(\"null\"); //auth.initAuth();\n\nexport default renderIndex;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/index.js"],"names":["React","ReactDOM","Route","BrowserRouter","Router","Home","Overview","Register","Edit","auth","api","convert","require","config","firebase","firebaseConfig","apiKey","data","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_TMDB_API_KEY","initializeApp","db","firestore","App","Component","state","key","lines","id","componentDidMount","date","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","dateTime","siri","Siri","_attributes","version","xmlns","array","ResponseTimestamp","ProducerRef","SituationExchangeDelivery","Situations","collection","get","then","querySnapshot","forEach","doc","PtSituationElement","setState","situations","i","length","parse","ValidityPeriod","EndTime","Progress","console","log","swapPlaces","tmp","CreationTime","ParticipantRef","SituationNumber","Source","endTime","Severity","ReportType","Summary","Description","Affects","Networks","AffectedNetwork","AffectedLine","Routes","routes","VehicleJourneys","AffectedVehicleJourney","push","ServiceDelivery","result","js2xml","compact","spaces","run","response","render","props","split","userInfo","logoutUrl","renderIndex","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Home from './components/home'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth'\nimport api from \"./api/api\";\nvar convert = require('xml-js');\nrequire('dotenv').config();\n\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n    apiKey: data.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: data.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: data.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: data.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: data.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: data.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: data.env.REACT_APP_TMDB_API_KEY\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        key: 'GOA:Authority:GOA',\n        lines: '',\n        id: '',\n    };\n\n    componentDidMount() {\n        //api.organisationID(userInfo.id);\n\n        let date = new Date().getDate(); if(date < 10){ date = \"0\"+date }\n        let month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        let year = new Date().getFullYear();\n        let hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        let min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        let sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n\n        const dateTime = year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\"+02:00\";\n\n        var siri = {\n            Siri: {\n                _attributes: {\n                    version: \"2.0\" ,\n                    xmlns: \"http://www.siri.org.uk/siri\",\n                    'xmlns:ns2': \"http://www.ifopt.org.uk/acsb\",\n                    'xmlns:ns3': \"http://www.ifopt.org.uk/ifopt\",\n                    'xmlns:ns4': \"http://datex2.eu/schema/2_0RC1/2_0\"\n                },\n            }\n        };\n\n        var array = {\n            ResponseTimestamp: dateTime,\n            ProducerRef: \"ENT\",\n            SituationExchangeDelivery: {\n                ResponseTimestamp: dateTime,\n                Situations: [],\n            }\n        };\n\n        db.collection(this.state.key).get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                if(doc.id === 'Issues'){\n                    if(doc.data().PtSituationElement){\n                        this.setState({\n                            data: doc.data(),\n                            id: doc.id,\n                        });\n                        var situations = {PtSituationElement: []};\n                        for (var i = 0; i < doc.data().PtSituationElement.length; i++) {\n                            if(Date.parse(doc.data().PtSituationElement[i].ValidityPeriod.EndTime) < Date.parse(dateTime) || doc.data().PtSituationElement[i].Progress === 'closed'){\n                                console.log('ignore');\n                            }else{\n                                var swapPlaces = doc.data().PtSituationElement[i];\n                                var tmp = {};\n                                tmp['CreationTime'] = swapPlaces.CreationTime;\n                                tmp['ParticipantRef'] = swapPlaces.ParticipantRef;\n                                tmp['SituationNumber'] = swapPlaces.SituationNumber;\n                                tmp['Source'] = swapPlaces.Source;\n                                tmp['Progress'] = swapPlaces.Progress;\n                                tmp['ValidityPeriod'] = swapPlaces.ValidityPeriod;\n                                if(tmp.ValidityPeriod.EndTime){\n                                    var endTime = tmp.ValidityPeriod.EndTime;\n                                    delete tmp.ValidityPeriod.EndTime;\n                                    tmp.ValidityPeriod['EndTime'] = endTime;\n                                }\n                                tmp['UndefinedReason'] = {};\n                                tmp['Severity'] = swapPlaces.Severity;\n                                tmp['ReportType'] = swapPlaces.ReportType;\n                                tmp['Summary'] = swapPlaces.Summary;\n                                if(swapPlaces.Description){ tmp['Description'] = swapPlaces.Description; }\n                                tmp['Affects'] = swapPlaces.Affects;\n                                if(tmp.Affects.Networks) {\n                                    if(tmp.Affects.Networks.AffectedNetwork.AffectedLine.Routes){\n                                        var routes = tmp.Affects.Networks.AffectedNetwork.AffectedLine.Routes;\n                                        delete tmp.Affects.Networks.AffectedNetwork.AffectedLine.Routes;\n                                        tmp.Affects.Networks.AffectedNetwork.AffectedLine['Routes'] = routes;\n                                    }\n                                }\n                                if(tmp.Affects.VehicleJourneys){\n                                    if(tmp.Affects.VehicleJourneys.AffectedVehicleJourney.Route === null){\n                                        delete tmp.Affects.VehicleJourneys.AffectedVehicleJourney.Route;\n                                    }\n                                }\n                                situations.PtSituationElement.push(tmp)\n                            }\n                        }\n                        array.SituationExchangeDelivery.Situations.push(situations);\n                        siri.Siri.ServiceDelivery = array;\n\n                        var result = convert.js2xml(siri, {compact: true, spaces: 4});\n                        console.log(result);\n                    }else{\n                        this.setState({\n                            data: {PtSituationElement: []},\n                            id: doc.id,\n                        })\n                    }\n                }\n            });\n        });\n\n        api.run(this.state.key, null, null)\n            .then(response => {\n                this.setState({\n                    lines: response.data.lines\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Route path=\"/\" render={props => <Home {...props} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/edit/:deviationId?\" render={props =>\n                        <Edit {...props} data={this.state.data} firebase={db} docID={this.state.id}\n                              orgID={this.state.key} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/register\" render={props =>\n                        <Register {...props} data={this.state.data} firebase={db} docID={this.state.id}\n                                  orgID={this.state.key} lines={this.state.lines} user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                    <Route path=\"/overview\" render={props => <Overview {...props} data={this.state.data}\n                                                                       user={this.state.key.split(':')[0]} logout={this.props.userInfo.logoutUrl} />} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nconst renderIndex = (userInfo) => {\n    ReactDOM.render(\n        <App userInfo={userInfo} />,\n        document.getElementById('root')\n    );\n};\n\nrenderIndex(\"null\");\n//auth.initAuth();\n\nexport default renderIndex;"]},"metadata":{},"sourceType":"module"}