{"ast":null,"code":"const client_id = 'knJ9iltoiODFZ9QDpS5KXtBC547uLUzu';\nconst client_secret = 'ly0IUXDzhBpgMCdN32p6uSZeoh2NGg8fIveqDdYO68WE8mQ4HKCqQygRnESy4sAW';\nconst auth0_domain = 'internal.staging.entur.org';\nconst auth0_audience = 'api.staging.entur.io';\n\nconst authorization = () => {\n  fetch('https://' + auth0_domain + '/oauth/token', {\n    method: 'POST',\n    mode: 'no-cors',\n    headers: {\n      'Content-type': 'application/json',\n      'ET-Client-Name': 'entur - avviksmeldinger'\n    },\n    body: {\n      'grant_type': \"client_credentials\",\n      \"client_id\": client_id,\n      \"client_secret\": client_secret,\n      \"audience\": 'https://' + auth0_audience\n    }\n  }).catch(error => error).then(response => console.log(response)).then(data => console.log(data));\n};\n\nexport default {\n  authorization\n};\n/*\n\nimport gql from 'graphql-tag';\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n    uri: 'https://api.entur.io/journey-planner/v2/graphql',\n    fetchOptions: {\n        mode: 'no-cors',\n    },\n});\n\nconst getLines = () => (\n\n    client.query({\n            query: gql`\n            {\n                lines(authorities:\"GOA:Authority:GOA\") {\n                    id\n                    name\n                    quays {\n                        id\n                        name\n                    }\n                }\n            }\n        `\n        ,\n    })\n    .then(data => console.log(data))\n    .catch(error => console.error(error))\n);\n */","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/api.js"],"names":["client_id","client_secret","auth0_domain","auth0_audience","authorization","fetch","method","mode","headers","body","catch","error","then","response","console","log","data"],"mappings":"AAAA,MAAMA,SAAS,GAAG,kCAAlB;AACA,MAAMC,aAAa,GAAG,kEAAtB;AACA,MAAMC,YAAY,GAAG,4BAArB;AACA,MAAMC,cAAc,GAAG,sBAAvB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAExBC,EAAAA,KAAK,CAAC,aAAWH,YAAX,GAAwB,cAAzB,EAAyC;AAC1CI,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAE,SAFoC;AAG1CC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,wBAAkB;AAFb,KAHiC;AAO1CC,IAAAA,IAAI,EAAE;AACF,oBAAc,oBADZ;AAEF,mBAAaT,SAFX;AAGF,uBAAiBC,aAHf;AAIF,kBAAY,aAAaE;AAJvB;AAPoC,GAAzC,CAAL,CAcKO,KAdL,CAcWC,KAAK,IAAIA,KAdpB,EAeKC,IAfL,CAeUC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAftB,EAgBKD,IAhBL,CAgBUI,IAAI,IAAIF,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAhBlB;AAiBH,CAnBD;;AAqBA,eAAc;AAAEZ,EAAAA;AAAF,CAAd;AAEA","sourcesContent":["const client_id = 'knJ9iltoiODFZ9QDpS5KXtBC547uLUzu';\nconst client_secret = 'ly0IUXDzhBpgMCdN32p6uSZeoh2NGg8fIveqDdYO68WE8mQ4HKCqQygRnESy4sAW';\nconst auth0_domain = 'internal.staging.entur.org';\nconst auth0_audience = 'api.staging.entur.io';\n\nconst authorization = () => {\n\n    fetch('https://'+auth0_domain+'/oauth/token', {\n        method: 'POST',\n        mode: 'no-cors',\n        headers: {\n            'Content-type': 'application/json',\n            'ET-Client-Name': 'entur - avviksmeldinger'\n        },\n        body: {\n            'grant_type': \"client_credentials\",\n            \"client_id\": client_id,\n            \"client_secret\": client_secret,\n            \"audience\": 'https://' + auth0_audience\n        }\n    })\n        .catch(error => error)\n        .then(response => console.log(response))\n        .then(data => console.log(data));\n};\n\nexport default{ authorization };\n\n/*\n\nimport gql from 'graphql-tag';\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n    uri: 'https://api.entur.io/journey-planner/v2/graphql',\n    fetchOptions: {\n        mode: 'no-cors',\n    },\n});\n\nconst getLines = () => (\n\n    client.query({\n            query: gql`\n            {\n                lines(authorities:\"GOA:Authority:GOA\") {\n                    id\n                    name\n                    quays {\n                        id\n                        name\n                    }\n                }\n            }\n        `\n        ,\n    })\n    .then(data => console.log(data))\n    .catch(error => console.error(error))\n);\n */"]},"metadata":{},"sourceType":"module"}