{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.SlideSwitch = SlideSwitch;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nrequire('./styles.css');\n\nvar _styles = {\n  'rootClassName': 'entur-switch',\n  'entur-switch__input': 'entur-switch__input',\n  'entur-switch__indicator': 'entur-switch__indicator',\n  'entur-switch__indicator__knob': 'entur-switch__indicator__knob',\n  'disabled': 'disabled',\n  'slider': 'slider',\n  'entur-switch--size-medium': 'entur-switch--size-medium',\n  'entur-switch--size-large': 'entur-switch--size-large',\n  'entur-switch__label': 'entur-switch__label'\n};\n\nvar _label = require('../label');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction SlideSwitch(props) {\n  var id = props.id,\n      value = props.value,\n      checked = props.checked,\n      className = props.className,\n      onChange = props.onChange,\n      label = props.label,\n      disabled = props.disabled,\n      color = props.color,\n      size = props.size,\n      knobIcon = props.knobIcon,\n      rest = _objectWithoutProperties(props, ['id', 'value', 'checked', 'className', 'onChange', 'label', 'disabled', 'color', 'size', 'knobIcon']);\n\n  var combinedClassNames = (0, _classnames2.default)(_styles.rootClassName, _defineProperty({}, _styles.rootClassName + '--size-' + size, size), className);\n  var checkboxClassName = _styles.rootClassName + '__input';\n  var indicatorClassName = _styles.rootClassName + '__indicator';\n  var labelClassName = _styles.rootClassName + '__label';\n  var knobClassName = indicatorClassName + '__knob';\n  var indicatorStyle = checked && !disabled ? {\n    backgroundColor: color,\n    borderColor: color\n  } : undefined;\n  var knobStyle = checked && !disabled ? {\n    borderColor: color\n  } : undefined;\n  return _react2.default.createElement('div', {\n    className: combinedClassNames\n  }, _react2.default.createElement('input', _extends({\n    id: id,\n    className: checkboxClassName,\n    type: 'checkbox',\n    value: value,\n    checked: checked,\n    onChange: onChange,\n    disabled: disabled\n  }, rest)), _react2.default.createElement('div', {\n    className: indicatorClassName,\n    style: indicatorStyle\n  }, _react2.default.createElement('div', {\n    className: knobClassName,\n    style: knobStyle\n  }, knobIcon)), _react2.default.createElement(_label.Label, {\n    htmlFor: id,\n    className: labelClassName\n  }, label));\n}\n\nSlideSwitch.propTypes = {\n  className: _propTypes2.default.string,\n  id: _propTypes2.default.string,\n  checked: _propTypes2.default.bool,\n  value: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  disabled: _propTypes2.default.bool,\n  label: _propTypes2.default.string,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOf(['medium', 'large']),\n  knobIcon: _propTypes2.default.node\n};\nSlideSwitch.defaultProps = {\n  checked: false,\n  value: '',\n  onChange: function onChange() {},\n  disabled: false,\n  label: '',\n  size: 'medium'\n};\nSlideSwitch.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'SlideSwitch',\n  'props': {\n    'checked': {\n      'defaultValue': {\n        'value': 'false',\n        'computed': false\n      },\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'value': {\n      'defaultValue': {\n        'value': '\\'\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'onChange': {\n      'defaultValue': {\n        'value': '() => {}',\n        'computed': false\n      },\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    },\n    'disabled': {\n      'defaultValue': {\n        'value': 'false',\n        'computed': false\n      },\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'label': {\n      'defaultValue': {\n        'value': '\\'\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'medium\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'medium\\'',\n          'computed': false\n        }, {\n          'value': '\\'large\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'id': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'color': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'knobIcon': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}