{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.RadioPanel = RadioPanel;\nexports.CheckboxPanel = CheckboxPanel;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _checkboxRadio = require('../checkbox-radio');\n\nrequire('./panel.css');\n\nvar _panel = {\n  'checkMarkClassName': 'entur-radio-panel__checkmark',\n  'labelClassName': 'entur-radio-panel__label',\n  'labelsClassName': 'entur-radio-panel__labels',\n  'radioPanelClassName': 'entur-radio-panel',\n  'entur-radio-panel': 'entur-radio-panel',\n  'entur-radio-panel--with-checkmark': 'entur-radio-panel--with-checkmark',\n  'entur-radio-panel--variant-default': 'entur-radio-panel--variant-default',\n  'entur-radio-panel--checked': 'entur-radio-panel--checked',\n  'entur-radio-panel__checkmark': 'entur-radio-panel__checkmark',\n  'entur-radio-panel--variant-midnight': 'entur-radio-panel--variant-midnight',\n  'entur-radio-panel--size-md': 'entur-radio-panel--size-md',\n  'entur-radio-panel--size-lg': 'entur-radio-panel--size-lg',\n  'entur-radio-panel__labels': 'entur-radio-panel__labels'\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  label: _propTypes2.default.string,\n  secondLabel: _propTypes2.default.string,\n  thirdLabel: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  variant: _propTypes2.default.oneOf(['default', 'midnight']),\n  checked: _propTypes2.default.bool,\n  children: _propTypes2.default.node,\n  onChange: _propTypes2.default.func,\n  size: _propTypes2.default.oneOf(['md', 'lg'])\n};\nvar defaultProps = {\n  variant: 'default',\n  size: 'md'\n};\n\nvar Panel = function (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel() {\n    _classCallCheck(this, Panel);\n\n    return _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).apply(this, arguments));\n  }\n\n  _createClass(Panel, [{\n    key: 'renderLabel',\n    value: function renderLabel(label, key) {\n      if (!label) {\n        return null;\n      }\n\n      return _react2.default.createElement('div', {\n        key: key,\n        className: _panel.labelClassName\n      }, label);\n    }\n  }, {\n    key: 'renderLabels',\n    value: function renderLabels() {\n      var _props = this.props,\n          label = _props.label,\n          secondLabel = _props.secondLabel,\n          thirdLabel = _props.thirdLabel,\n          children = _props.children;\n      var showLabels = Boolean(label || secondLabel || thirdLabel);\n      return _react2.default.createElement(_react.Fragment, null, showLabels && _react2.default.createElement('div', {\n        className: _panel.labelsClassName\n      }, [label, secondLabel, thirdLabel].map(this.renderLabel)), children);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _cx;\n\n      var _props2 = this.props,\n          className = _props2.className,\n          value = _props2.value,\n          _props2$variant = _props2.variant,\n          variant = _props2$variant === undefined ? '' : _props2$variant,\n          inputType = _props2.inputType,\n          checked = _props2.checked,\n          size = _props2.size,\n          onChange = _props2.onChange,\n          label = _props2.label,\n          secondLabel = _props2.secondLabel,\n          thirdLabel = _props2.thirdLabel,\n          children = _props2.children,\n          disabled = _props2.disabled,\n          rest = _objectWithoutProperties(_props2, ['className', 'value', 'variant', 'inputType', 'checked', 'size', 'onChange', 'label', 'secondLabel', 'thirdLabel', 'children', 'disabled']);\n\n      var classNames = (0, _classnames2.default)(_panel.radioPanelClassName, (_cx = {}, _defineProperty(_cx, _panel.radioPanelClassName + '--with-checkmark', onChange), _defineProperty(_cx, _panel.radioPanelClassName + '--checked', onChange && checked), _defineProperty(_cx, _panel.radioPanelClassName + '--variant-' + variant, variant), _defineProperty(_cx, _panel.radioPanelClassName + '--size-' + size, size), _cx), className);\n\n      if (onChange) {\n        var JustInput = inputType === 'radio' ? _checkboxRadio.JustRadio : _checkboxRadio.JustCheckbox;\n        return _react2.default.createElement('label', _extends({\n          className: classNames\n        }, rest), this.renderLabels(), _react2.default.createElement(JustInput, {\n          className: _panel.checkMarkClassName,\n          variant: 'midnight',\n          size: size,\n          checked: checked,\n          onChange: onChange,\n          value: value,\n          disabled: disabled\n        }));\n      }\n\n      return _react2.default.createElement('div', {\n        className: classNames\n      }, this.renderLabels());\n    }\n  }]);\n\n  return Panel;\n}(_react.Component);\n\nPanel.propTypes = _extends({}, propTypes, {\n  inputType: _propTypes2.default.oneOf(['checkbox', 'radio']).isRequired\n});\n\nfunction RadioPanel(props) {\n  return _react2.default.createElement(Panel, _extends({}, props, {\n    inputType: 'radio'\n  }));\n}\n\nRadioPanel.propTypes = propTypes;\nRadioPanel.defaultProps = defaultProps;\n\nfunction CheckboxPanel(props) {\n  return _react2.default.createElement(Panel, _extends({}, props, {\n    inputType: 'checkbox'\n  }));\n}\n\nCheckboxPanel.propTypes = propTypes;\nCheckboxPanel.defaultProps = defaultProps;\nRadioPanel.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'RadioPanel',\n  'props': {\n    'variant': {\n      'defaultValue': {\n        'value': '\\'default\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'default\\'',\n          'computed': false\n        }, {\n          'value': '\\'midnight\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'label': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'secondLabel': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'thirdLabel': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'checked': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'onChange': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};\nCheckboxPanel.__docgenInfo = {\n  'description': '',\n  'methods': [],\n  'displayName': 'CheckboxPanel',\n  'props': {\n    'variant': {\n      'defaultValue': {\n        'value': '\\'default\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'default\\'',\n          'computed': false\n        }, {\n          'value': '\\'midnight\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'size': {\n      'defaultValue': {\n        'value': '\\'md\\'',\n        'computed': false\n      },\n      'type': {\n        'name': 'enum',\n        'value': [{\n          'value': '\\'md\\'',\n          'computed': false\n        }, {\n          'value': '\\'lg\\'',\n          'computed': false\n        }]\n      },\n      'required': false,\n      'description': ''\n    },\n    'label': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'secondLabel': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'thirdLabel': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'className': {\n      'type': {\n        'name': 'string'\n      },\n      'required': false,\n      'description': ''\n    },\n    'checked': {\n      'type': {\n        'name': 'bool'\n      },\n      'required': false,\n      'description': ''\n    },\n    'children': {\n      'type': {\n        'name': 'node'\n      },\n      'required': false,\n      'description': ''\n    },\n    'onChange': {\n      'type': {\n        'name': 'func'\n      },\n      'required': false,\n      'description': ''\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}