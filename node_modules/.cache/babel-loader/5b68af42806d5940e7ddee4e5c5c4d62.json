{"ast":null,"code":"import React from \"react\";\nimport gql from 'graphql-tag';\n\nconst _require = require('apollo-fetch'),\n      createApolloFetch = _require.createApolloFetch;\n\nconst uri2 = 'https://api.staging.entur.io/journey-planner/v2/graphql';\nconst value = localStorage.getItem(\"loggedInAs\") + ':Authority:' + localStorage.getItem(\"loggedInAs\");\nconst query = \"\\n  {\\n  lines(authorities:\\\"GOA:Authority:GOA\\\") {\\n  \\tid\\n    name\\n    quays {\\n      id\\n      name\\n    }\\n  }\\n}\\n\";\n\nconst run = (localKey, uri) => {\n  const apolloFetch = createApolloFetch({\n    uri\n  });\n  apolloFetch({\n    query\n  }).catch(error => error).then(response => {\n    localStorage.setItem(localKey, JSON.stringify(response.data.lines));\n  });\n};\n\nexport default {\n  run\n};","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/api.js"],"names":["React","gql","require","createApolloFetch","uri2","value","localStorage","getItem","query","run","localKey","uri","apolloFetch","catch","error","then","response","setItem","JSON","stringify","data","lines"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;iBAC8BC,OAAO,CAAC,cAAD,C;MAA7BC,iB,YAAAA,iB;;AAER,MAAMC,IAAI,GAAG,yDAAb;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAmC,aAAnC,GAAiDD,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA/D;AAEA,MAAMC,KAAK,8HAAX;;AAaA,MAAMC,GAAG,GAAG,CAACC,QAAD,EAAWC,GAAX,KAAmB;AAC3B,QAAMC,WAAW,GAAGT,iBAAiB,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAArC;AAEAC,EAAAA,WAAW,CAAC;AAAEJ,IAAAA;AAAF,GAAD,CAAX,CACKK,KADL,CACWC,KAAK,IAAIA,KADpB,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACdV,IAAAA,YAAY,CAACW,OAAb,CAAqBP,QAArB,EAA+BQ,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAT,CAAcC,KAA7B,CAA/B;AACH,GAJL;AAKH,CARD;;AAUA,eAAe;AAAEZ,EAAAA;AAAF,CAAf","sourcesContent":["import React from \"react\";\nimport gql from 'graphql-tag';\nconst { createApolloFetch } = require('apollo-fetch');\n\nconst uri2 = 'https://api.staging.entur.io/journey-planner/v2/graphql';\nconst value = localStorage.getItem(\"loggedInAs\")+':Authority:'+localStorage.getItem(\"loggedInAs\");\n\nconst query = `\n  {\n  lines(authorities:\"GOA:Authority:GOA\") {\n  \tid\n    name\n    quays {\n      id\n      name\n    }\n  }\n}\n`;\n\nconst run = (localKey, uri) => {\n    const apolloFetch = createApolloFetch({ uri });\n\n    apolloFetch({ query })\n        .catch(error => error)\n        .then(response => {\n            localStorage.setItem(localKey, JSON.stringify(response.data.lines));\n        });\n};\n\nexport default { run }"]},"metadata":{},"sourceType":"module"}