{"ast":null,"code":"'use strict';\n\nconst BB = require('bluebird');\n\nconst figgyPudding = require('figgy-pudding');\n\nconst fixOwner = require('./fix-owner');\n\nconst path = require('path');\n\nconst rimraf = BB.promisify(require('rimraf'));\n\nconst uniqueFilename = require('unique-filename');\n\nconst TmpOpts = figgyPudding({\n  tmpPrefix: {},\n  uid: {},\n  gid: {}\n});\nmodule.exports.mkdir = mktmpdir;\n\nfunction mktmpdir(cache, opts) {\n  opts = TmpOpts(opts);\n  const tmpTarget = uniqueFilename(path.join(cache, 'tmp'), opts.tmpPrefix);\n  return fixOwner.mkdirfix(tmpTarget, opts.uid, opts.gid).then(() => {\n    return tmpTarget;\n  });\n}\n\nmodule.exports.withTmp = withTmp;\n\nfunction withTmp(cache, opts, cb) {\n  if (!cb) {\n    cb = opts;\n    opts = null;\n  }\n\n  opts = TmpOpts(opts);\n  return BB.using(mktmpdir(cache, opts).disposer(rimraf), cb);\n}\n\nmodule.exports.fix = fixtmpdir;\n\nfunction fixtmpdir(cache, opts) {\n  opts = TmpOpts(opts);\n  return fixOwner(path.join(cache, 'tmp'), opts.uid, opts.gid);\n}","map":null,"metadata":{},"sourceType":"script"}