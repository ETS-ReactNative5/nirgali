{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/components/overview.js\";\nimport React from \"react\";\nimport NavBar from \"./navbar\";\nimport red from \"../img/red.png\";\nimport green from \"../img/green.png\";\nimport Background from \"../img/background.jpg\";\n\nclass Overview extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      date: ''\n    };\n\n    this.handleClick = () => {\n      this.props.history.push('/');\n    };\n\n    this.returnRedOrGreenIcon = param => {\n      if (Date.parse(param) < Date.parse(this.state.date)) {\n        return React.createElement(\"img\", {\n          src: red,\n          id: \"not_active\",\n          alt: \"\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"img\", {\n          src: green,\n          id: \"active\",\n          alt: \"\",\n          height: \"30\",\n          width: \"30\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.returnButtonAorNotA = param => {\n      if (param === 'open') {\n        return React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: this.changeProgress(\"close\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Deaktiver\");\n      } else {\n        return React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: this.changeProgress(\"open\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Aktiver\");\n      }\n    };\n\n    this.changeProgress = param => {\n      console.log(param);\n    };\n\n    this.getType = param => {\n      if (param != null) {\n        if (Object.keys(param)[0] === \"Networks\") {\n          return \"Linje\";\n        }\n\n        if (Object.keys(param)[0] === \"StopPoints\") {\n          return \"Stopp\";\n        }\n\n        if (Object.keys(param)[0] === \"VehicleJourneys\") {\n          return \"Avgang\";\n        } else {\n          return \"Error\";\n        }\n      } else {\n        return \"Error\";\n      }\n    };\n\n    this.getDate = param => {\n      var datePart = param.match(/\\d+/g),\n          year = datePart[0].substring(2),\n          // get only two digits\n      month = datePart[1],\n          day = datePart[2],\n          hour = datePart[3],\n          minutes = datePart[4];\n      return hour + ':' + minutes + '  ' + day + '.' + month + '.' + year;\n    };\n\n    this.edit = event => {\n      this.props.history.push('/edit', {\n        id: event.target.value\n      });\n    };\n\n    this.sortTable = () => {\n      var table, rows, switching, i, x, y, shouldSwitch;\n      table = document.getElementById(\"dtOrderExample\");\n      switching = true;\n\n      while (switching) {\n        switching = false;\n        rows = table.rows;\n\n        for (i = 1; i < rows.length - 1; i++) {\n          shouldSwitch = false;\n          x = rows[i].getElementsByTagName(\"TD\")[3].innerHTML.split(\"  \").pop(-1);\n          y = rows[i + 1].getElementsByTagName(\"TD\")[3].innerHTML.split(\"  \").pop(-1);\n\n          if (x.split(\".\").reverse().join(\".\") < y.split(\".\").reverse().join(\".\")) {\n            shouldSwitch = true;\n            break;\n          }\n        }\n\n        if (shouldSwitch) {\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true;\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    let that = this;\n    let date = new Date().getDate();\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n\n    let month = new Date().getMonth() + 1;\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let year = new Date().getFullYear();\n    let hours = new Date().getHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    let min = new Date().getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    let sec = new Date().getSeconds();\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    that.setState({\n      date: year + '-' + month + '-' + date + 'T' + hours + ':' + min + ':' + sec + \"+02:00\"\n    });\n    this.sortTable();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"background\",\n      src: Background,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"register_box\",\n      id: \"overview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Oversikt\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"table-responsive-md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"dtOrderExample\",\n      className: \"table table-striped table-light table-borderless table-hover\",\n      bgcolor: \"#000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Melding\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Gyldighet\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, JSON.parse(localStorage.getItem(\"issues\")).PtSituationElement.map(item => React.createElement(\"tr\", {\n      key: item.SituationNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"Status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.returnRedOrGreenIcon(item.ValidityPeriod.EndTime)), React.createElement(\"td\", {\n      className: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, item.SituationNumber.split(\":\").pop()), React.createElement(\"td\", {\n      className: \"Melding\",\n      width: \"30%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, item.Summary['@Value']), React.createElement(\"td\", {\n      className: \"Gyldighet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.getDate(item.ValidityPeriod.StartTime), \" -\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), this.getDate(item.ValidityPeriod.EndTime)), React.createElement(\"td\", {\n      className: \"Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.getType(item.Affects)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"bg-warning\",\n      value: item.SituationNumber.split(\":\").pop(),\n      onClick: this.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Endre\"), this.returnButtonAorNotA(item.Progress))))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"submit\",\n      className: \"btn btn-warning btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Tilbake\")));\n  }\n\n}\n\nexport default Overview;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/components/overview.js"],"names":["React","NavBar","red","green","Background","Overview","Component","state","date","handleClick","props","history","push","returnRedOrGreenIcon","param","Date","parse","returnButtonAorNotA","changeProgress","console","log","getType","Object","keys","getDate","datePart","match","year","substring","month","day","hour","minutes","edit","event","id","target","value","sortTable","table","rows","switching","i","x","y","shouldSwitch","document","getElementById","length","getElementsByTagName","innerHTML","split","pop","reverse","join","parentNode","insertBefore","componentDidMount","that","getMonth","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","setState","render","JSON","localStorage","getItem","PtSituationElement","map","item","SituationNumber","ValidityPeriod","EndTime","Summary","StartTime","Affects","Progress"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavBar from \"./navbar\";\nimport red from \"../img/red.png\";\nimport green from \"../img/green.png\"\nimport Background from \"../img/background.jpg\";\n\nclass Overview extends React.Component {\n\n    state = {\n        date: '',\n    };\n\n    componentDidMount() {\n        let that = this;\n        let date = new Date().getDate(); if(date < 10){ date = \"0\"+date }\n        let month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        let year = new Date().getFullYear();\n        let hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        let min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        let sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n\n        that.setState({\n            date: year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\"+02:00\",\n        });\n        this.sortTable()\n    }\n\n    handleClick = () => {\n        this.props.history.push('/');\n    };\n\n    returnRedOrGreenIcon = (param) => {\n        if(Date.parse(param) < Date.parse(this.state.date)){\n            return <img src={red} id='not_active' alt=\"\" height=\"30\" width=\"30\" />\n        }else {\n            return <img src={green} id='active' alt=\"\" height=\"30\" width=\"30\"/>\n        }\n    };\n\n    returnButtonAorNotA = (param) => {\n        if(param === 'open'){\n            return <button className=\"btn btn-danger\" onClick={this.changeProgress(\"close\")}>Deaktiver</button>\n        }else{\n            return <button className=\"btn btn-danger\" onClick={this.changeProgress(\"open\")}>Aktiver</button>\n        }\n    };\n\n    changeProgress = (param) => {\n        console.log(param);\n    };\n\n    getType = (param) => {\n        if(param != null){\n            if(Object.keys(param)[0] === \"Networks\"){\n                return \"Linje\"\n            }\n            if(Object.keys(param)[0] === \"StopPoints\"){\n                return \"Stopp\"\n            }\n            if(Object.keys(param)[0] === \"VehicleJourneys\"){\n                return \"Avgang\"\n            }\n            else{\n                return \"Error\"\n            }\n        }else{\n            return \"Error\"\n        }\n    };\n\n    getDate = (param) => {\n        var datePart = param.match(/\\d+/g),\n            year = datePart[0].substring(2), // get only two digits\n            month = datePart[1], day = datePart[2],\n            hour = datePart[3], minutes = datePart[4];\n\n        return hour+':'+minutes+'  '+day+'.'+month+'.'+year;\n    };\n\n    edit = (event) => {\n        this.props.history.push('/edit', { id: event.target.value });\n    };\n\n    sortTable = () => {\n        var table, rows, switching, i, x, y, shouldSwitch;\n        table = document.getElementById(\"dtOrderExample\");\n        switching = true;\n        while (switching) {\n            switching = false;\n            rows = table.rows;\n            for (i = 1; i < (rows.length - 1); i++) {\n                shouldSwitch = false;\n                x = rows[i].getElementsByTagName(\"TD\")[3].innerHTML.split(\"  \").pop(-1);\n                y = rows[i + 1].getElementsByTagName(\"TD\")[3].innerHTML.split(\"  \").pop(-1);\n                if (x.split(\".\").reverse().join(\".\") < y.split(\".\").reverse().join(\".\")) {\n                    shouldSwitch = true;\n                    break;\n                }\n            }\n            if (shouldSwitch) {\n                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n                switching = true;\n            }\n        }\n    };\n\n\n\n    render() {\n        return (\n            <div>\n                <img id=\"background\" src={ Background } alt=\"\" />\n                <div className=\"navBar\">\n                </div>\n                <NavBar />\n                <div className=\"register_box\" id=\"overview\" >\n                    <h2 className=\"text-center text-white\">Oversikt</h2>\n                    <br></br>\n                    <div className=\"table-responsive-md\">\n                        <table id=\"dtOrderExample\" className=\"table table-striped table-light table-borderless table-hover\" bgcolor=\"#000000\" >\n                            <thead className=\"bg-primary\">\n                            <tr>\n                                <th scope=\"col\">Status</th>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Melding</th>\n                                <th scope=\"col\">Gyldighet</th>\n                                <th scope=\"col\">Type</th>\n                                <th scope=\"col\"></th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {(JSON.parse(localStorage.getItem(\"issues\"))).PtSituationElement.map((item) => (\n                                <tr key={item.SituationNumber}>\n                                    <td className='Status'>{this.returnRedOrGreenIcon(item.ValidityPeriod.EndTime)}</td>\n                                    <td className='#'>{item.SituationNumber.split(\":\").pop()}</td>\n                                    <td className='Melding' width=\"30%\">{item.Summary['@Value']}</td>\n                                    <td className='Gyldighet'>{this.getDate(item.ValidityPeriod.StartTime)} -<br></br>{this.getDate(item.ValidityPeriod.EndTime)}</td>\n                                    <td className='Type'>{this.getType(item.Affects)}</td>\n                                    <td>\n                                        <div>\n                                            <button className=\"bg-warning\" value={item.SituationNumber.split(\":\").pop()} onClick={this.edit}>Endre</button>\n                                            {this.returnButtonAorNotA(item.Progress)}\n                                        </div>\n                                    </td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                        <br></br>\n                    </div>\n                    <button onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Overview;"]},"metadata":{},"sourceType":"module"}