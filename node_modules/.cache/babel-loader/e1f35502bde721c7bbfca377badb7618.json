{"ast":null,"code":"var _jsxFileName = \"/Users/Goplen/Desktop/knowit/3psx/src/register.js\";\nimport React from \"react\";\nimport Background from \"./background.jpg\";\nimport NavBar from \"./navbar\";\nimport Select from 'react-select';\nimport issues from \"./data\";\nvar stops = [];\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: '',\n      newAffect: '',\n      searchBar: '',\n      stops: 0,\n      issues: 0,\n      type: undefined,\n      chosenLine: undefined,\n      checkbox: undefined,\n      multipleStops: undefined\n    };\n    this.handleChangeSpecifyStops = this.handleChangeSpecifyStops.bind(this);\n    this.handleChangeLine = this.handleChangeLine.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChangeType = this.handleChangeType.bind(this);\n    this.handleChangeSpecifiedLines = this.handleChangeSpecifiedLines.bind(this);\n  }\n\n  componentDidMount() {\n    var that = this;\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    var year = new Date().getFullYear();\n    var hours = new Date().getHours();\n\n    if (hours < 10) {\n      hours = \"0\" + hours;\n    }\n\n    var min = new Date().getMinutes();\n\n    if (min < 10) {\n      min = \"0\" + min;\n    }\n\n    var sec = new Date().getSeconds();\n\n    if (sec < 10) {\n      sec = \"0\" + sec;\n    }\n\n    that.setState({\n      date: year + '-' + month + '-' + date + 'T' + hours + ':' + min + ':' + sec + \".000+02:00\"\n    });\n    JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => stops = stops.concat(item.quays));\n    this.setState({\n      issues: parseInt(JSON.stringify(issues.PtSituationElement.length))\n    });\n  }\n\n  createNewIssue(event) {\n    window.alert(this.state.issues);\n    this.setState({\n      issues: this.state.issues + 1\n    });\n    window.alert(this.state.issues);\n    return {\n      CreationTime: this.state.date,\n      ParticipantRef: localStorage.getItem(\"loggedInAs\"),\n      SituationNumber: localStorage.getItem(\"loggedInAs\") + \":SituationNumber:\" + this.state.issues,\n      Source: {\n        SourceType: \"directReport\"\n      },\n      Progress: \"open\",\n      ValidityPeriod: {\n        StartTime: event.target.from.value + \"+02:00\",\n        EndTime: event.target.to.value + \"+02:00\"\n      },\n      Severity: \"normal\",\n      ReportType: \"incident\",\n      Summary: {\n        \"@Value\": event.target.oppsummering.value,\n        \"@Language\": \"NO\"\n      },\n      Description: {\n        \"@Value\": event.target.beskrivelse.value,\n        \"@Language\": \"NO\"\n      },\n      Affects: []\n    };\n  }\n\n  createNewLine() {\n    return {\n      Networks: {\n        AffectedNetwork: {\n          AffectedLine: {\n            LineRef: this.state.chosenLine,\n            Routes: null\n          }\n        }\n      }\n    };\n  }\n\n  handleSubmit(event) {\n    const newIssue = this.createNewIssue(event);\n\n    if (this.state.type === \"line\") {\n      if (this.state.checkbox) {\n        console.log(this.state.multipleStops);\n      } else {\n        const newAffect = this.createNewLine();\n        newIssue.Affects.push(newAffect);\n      }\n    }\n\n    const tmp = JSON.parse(localStorage.getItem(\"issues\"));\n    tmp.PtSituationElement.push(newIssue);\n    localStorage.setItem('issues', JSON.stringify(tmp));\n    this.props.history.push('/overview');\n  }\n\n  handleChangeSpecifyStops(event) {\n    const checkBox = document.getElementById(\"gridCheck\");\n\n    if (checkBox.checked === true) {\n      this.setState({\n        checkbox: true\n      });\n    } else {\n      this.setState({\n        checkbox: undefined\n      });\n    }\n  }\n\n  handleClick(event) {\n    this.props.history.push('/');\n  }\n\n  handleChangeType(event) {\n    this.setState({\n      type: event.target.value,\n      checkbox: undefined,\n      chosenLine: undefined\n    });\n  }\n\n  handleChangeLine(event) {\n    this.setState({\n      chosenLine: event.value\n    });\n  }\n\n  handleChangeSpecifiedLines(event) {\n    this.setState({\n      multipleStops: event\n    });\n  }\n\n  getFromLocal(key) {\n    return localStorage.getItem(key);\n  }\n\n  getFromLocalParsed(key) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  returnMappedObjects(list) {\n    return list.map(item => ({\n      label: item.name,\n      value: item.id\n    }));\n  }\n\n  returnSpecifiedLines() {\n    const tmp = JSON.parse(localStorage.getItem(\"lines\")).find(item => item.id === this.state.chosenLine);\n\n    if (tmp) {\n      return this.returnMappedObjects(tmp.quays);\n    }\n\n    return [];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"background\",\n      src: Background,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"register_box\",\n      id: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"register\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Registrer ny melding\"), React.createElement(\"div\", {\n      className: \"form-row d-flex flex-row bd-highlight mb-2 justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fromDate p-2 flex-grow-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Fra\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      step: \"1\",\n      name: \"from\",\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toDate p-2 flex-grow-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Til\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      step: \"1\",\n      name: \"to\",\n      className: \"form-control\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Melding\"), React.createElement(\"input\", {\n      type: \"String\",\n      name: \"oppsummering\",\n      className: \"form-control\",\n      placeholder: \"Oppsummering\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"String\",\n      name: \"beskrivelse\",\n      className: \"form-control\",\n      placeholder: \"Beskrivelse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"choose_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Velg linje, stopp eller avgang\"), React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      defaultValue: \"default\",\n      onChange: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"default\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"option\", {\n      value: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Linje\"), React.createElement(\"option\", {\n      value: \"stop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Stopp\"), React.createElement(\"option\", {\n      value: \"departure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Avgang\"))), React.createElement(\"div\", {\n      className: \"choose_type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.type === \"line\" && React.createElement(Select, {\n      onChange: this.handleChangeLine,\n      options: this.returnMappedObjects(this.getFromLocalParsed(\"lines\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), this.state.type === \"line\" && this.state.chosenLine && React.createElement(\"div\", {\n      className: \"form-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      id: \"gridCheck\",\n      value: \"stops\",\n      onChange: this.handleChangeSpecifyStops,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"gridCheck1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Gjelder avviket for spesifikke stopp?\"))), this.state.type === \"line\" && this.state.chosenLine && this.state.checkbox && React.createElement(Select, {\n      isMulti: true,\n      onChange: this.handleChangeSpecifiedLines,\n      options: this.returnSpecifiedLines(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), this.state.type === \"stop\" && React.createElement(Select, {\n      options: this.returnMappedObjects(stops),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submit justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Registrer\"), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"submit\",\n      className: \"btn btn-warning btn-lg btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Tilbake\")))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/register.js"],"names":["React","Background","NavBar","Select","issues","stops","Register","Component","constructor","props","state","date","newAffect","searchBar","type","undefined","chosenLine","checkbox","multipleStops","handleChangeSpecifyStops","bind","handleChangeLine","handleSubmit","handleClick","handleChangeType","handleChangeSpecifiedLines","componentDidMount","that","Date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","setState","JSON","parse","localStorage","getItem","map","item","key","concat","quays","parseInt","stringify","PtSituationElement","length","createNewIssue","event","window","alert","CreationTime","ParticipantRef","SituationNumber","Source","SourceType","Progress","ValidityPeriod","StartTime","target","from","value","EndTime","to","Severity","ReportType","Summary","oppsummering","Description","beskrivelse","Affects","createNewLine","Networks","AffectedNetwork","AffectedLine","LineRef","Routes","newIssue","console","log","push","tmp","setItem","history","checkBox","document","getElementById","checked","getFromLocal","getFromLocalParsed","returnMappedObjects","list","label","name","id","returnSpecifiedLines","find","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Background from \"./background.jpg\";\nimport NavBar from \"./navbar\";\nimport Select from 'react-select';\nimport issues from \"./data\";\n\nvar stops = [];\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: '',\n            newAffect: '',\n            searchBar: '',\n            stops: 0,\n            issues: 0,\n            type: undefined,\n            chosenLine: undefined,\n            checkbox: undefined,\n            multipleStops: undefined,\n        };\n\n        this.handleChangeSpecifyStops = this.handleChangeSpecifyStops.bind(this);\n        this.handleChangeLine = this.handleChangeLine.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChangeType = this.handleChangeType.bind(this);\n        this.handleChangeSpecifiedLines = this.handleChangeSpecifiedLines.bind(this);\n    }\n\n    componentDidMount() {\n        var that = this;\n        var date = new Date().getDate();\n        var month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        var year = new Date().getFullYear();\n        var hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        var min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        var sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n        that.setState({\n            date: year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\".000+02:00\",\n        });\n\n        JSON.parse(localStorage.getItem(\"lines\")).map((item, key) => (\n            stops = stops.concat(item.quays)\n        ));\n        this.setState({\n            issues: parseInt(JSON.stringify(issues.PtSituationElement.length))\n        })\n    }\n\n    createNewIssue(event){\n        window.alert(this.state.issues)\n        this.setState({\n            issues: (this.state.issues+1)\n        });\n        window.alert(this.state.issues)\n        return {\n            CreationTime: this.state.date,\n            ParticipantRef: localStorage.getItem(\"loggedInAs\"),\n            SituationNumber: localStorage.getItem(\"loggedInAs\") + \":SituationNumber:\" + (this.state.issues),\n            Source: {\n                SourceType: \"directReport\",\n            },\n            Progress: \"open\",\n            ValidityPeriod: {\n                StartTime: event.target.from.value + \"+02:00\",\n                EndTime: event.target.to.value + \"+02:00\",\n            },\n            Severity: \"normal\",\n            ReportType: \"incident\",\n            Summary: {\n                \"@Value\": event.target.oppsummering.value,\n                \"@Language\": \"NO\"\n            },\n            Description: {\n                \"@Value\": event.target.beskrivelse.value,\n                \"@Language\": \"NO\"\n            },\n            Affects: [],\n        };\n    }\n\n    createNewLine(){\n        return {\n            Networks: {\n                AffectedNetwork: {\n                    AffectedLine: {\n                        LineRef: this.state.chosenLine,\n                        Routes: null\n                    }\n                }\n            }\n        }\n    }\n\n    handleSubmit(event) {\n        const newIssue = this.createNewIssue(event);\n\n        if(this.state.type === \"line\"){\n            if(this.state.checkbox){\n                console.log(this.state.multipleStops);\n            }else{\n                const newAffect = this.createNewLine();\n                newIssue.Affects.push(newAffect);\n            }\n        }\n\n        const tmp = JSON.parse(localStorage.getItem(\"issues\"));\n        tmp.PtSituationElement.push(newIssue);\n        localStorage.setItem('issues', JSON.stringify(tmp));\n        this.props.history.push('/overview');\n    }\n\n    handleChangeSpecifyStops(event){\n        const checkBox = document.getElementById(\"gridCheck\");\n        if (checkBox.checked === true){\n            this.setState({\n                checkbox: true,\n            });\n        }else{\n            this.setState({\n                checkbox: undefined,\n            });\n        }\n    }\n\n    handleClick(event) {\n        this.props.history.push('/');\n    }\n\n    handleChangeType(event){\n        this.setState({\n            type: event.target.value,\n            checkbox: undefined,\n            chosenLine: undefined,\n        });\n    }\n\n    handleChangeLine(event) {\n        this.setState({\n            chosenLine: event.value\n        });\n    }\n\n    handleChangeSpecifiedLines(event) {\n        this.setState({ multipleStops: event });\n    }\n\n    getFromLocal(key) {\n        return localStorage.getItem(key)\n    }\n\n    getFromLocalParsed(key) {\n        return JSON.parse(localStorage.getItem(key))\n    }\n\n    returnMappedObjects(list){\n        return list.map(item => (\n            { label: item.name, value: item.id }\n        ))\n    }\n\n\n    returnSpecifiedLines() {\n        const tmp = JSON.parse(localStorage.getItem(\"lines\")).find(item => (\n            (item.id === this.state.chosenLine)\n        ));\n\n        if(tmp){\n            return this.returnMappedObjects(tmp.quays);\n        }\n        return []\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"navBar\">\n                    <img id=\"background\" src={ Background } alt=\"\" />\n                    <NavBar />\n                </div>\n                <div className=\"register_box\" id=\"small\" >\n                    <form className=\"register\" onSubmit={this.handleSubmit}>\n                        <h3 className=\"text-center text-white\">Registrer ny melding</h3>\n                        <div className=\"form-row d-flex flex-row bd-highlight mb-2 justify-content-center\">\n                            <div className=\"fromDate p-2 flex-grow-1\">\n                                <p className=\"text-center text-white\">Fra</p>\n                                <input type=\"datetime-local\" step=\"1\" name=\"from\" className=\"form-control\" required/>\n                            </div>\n                            <div className=\"toDate p-2 flex-grow-1\">\n                                <p className=\"text-center text-white\">Til</p>\n                                <input type=\"datetime-local\" step=\"1\" name=\"to\" className=\"form-control\" required/>\n                            </div>\n                        </div>\n                        <div className=\"message\">\n                            <p className=\"text-center text-white\">Melding</p>\n                            <input type=\"String\" name=\"oppsummering\" className=\"form-control\" placeholder=\"Oppsummering\" required/>\n                            <input type=\"String\" name=\"beskrivelse\" className=\"form-control\" placeholder=\"Beskrivelse\"/>\n                        </div>\n                        <br></br>\n                        <div className=\"choose_type\">\n                            <p className=\"text-center text-white\">Velg linje, stopp eller avgang</p>\n                            <select className=\"browser-default custom-select\" defaultValue={\"default\"} onChange={this.handleChangeType}>\n                                <option value=\"default\" disabled></option>\n                                <option value=\"line\">Linje</option>\n                                <option value=\"stop\">Stopp</option>\n                                <option value=\"departure\">Avgang</option>\n                            </select>\n                        </div>\n                        <div className=\"choose_type\">\n                            {(this.state.type === \"line\") &&\n                                <Select onChange={this.handleChangeLine}\n                                        options={this.returnMappedObjects(this.getFromLocalParsed(\"lines\"))}\n                                />\n                            }\n                            {(this.state.type === \"line\") && (this.state.chosenLine) &&\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" value=\"stops\" onChange={this.handleChangeSpecifyStops} />\n                                <label className=\"form-check-label\" htmlFor=\"gridCheck1\">\n                                    <p className=\"text-center text-white\">Gjelder avviket for spesifikke stopp?</p>\n                                </label>\n                            </div>\n                            }\n                            {(this.state.type === \"line\") && (this.state.chosenLine) && (this.state.checkbox) &&\n                            <Select isMulti\n                                    onChange={this.handleChangeSpecifiedLines}\n                                    options={this.returnSpecifiedLines()}\n                            />\n                            }\n                            {(this.state.type === \"stop\") &&\n                                <Select options={this.returnMappedObjects(stops)}\n                                />\n                            }\n                        </div>\n                        <br></br>\n                        <br></br>\n                        <div className=\"submit justify-content-center\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">Registrer</button>\n                            <button onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}