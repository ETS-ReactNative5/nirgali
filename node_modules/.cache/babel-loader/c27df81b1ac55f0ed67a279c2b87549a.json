{"ast":null,"code":"import React from \"react\";\n\nconst _require = require('apollo-fetch'),\n      createApolloFetch = _require.createApolloFetch;\n\nconst uri = 'https://api.staging.entur.io/journey-planner/v2/graphql';\nconst uri2 = 'https://api.staging.entur.io/journey-planner/v2/graphql';\nconst query = \"\\n  {\\n  lines(authorities:\\\"GOA:Authority:GOA\\\") {\\n  \\tid\\n    name\\n    quays {\\n      id\\n      name\\n    }\\n  }\\n}\\n\";\nconst variables = {\n  authorities: localStorage.getItem(\"loggedInAs\") + ':Authority:GOA' + localStorage.getItem(\"loggedInAs\")\n};\nconst apolloFetch = createApolloFetch({\n  uri\n});\napolloFetch({\n  query,\n  variables\n}).catch(error => error).then(response => {\n  localStorage.setItem('lines', JSON.stringify(response.data.lines));\n});","map":{"version":3,"sources":["/Users/Goplen/Desktop/knowit/3psx/src/api.js"],"names":["React","require","createApolloFetch","uri","uri2","query","variables","authorities","localStorage","getItem","apolloFetch","catch","error","then","response","setItem","JSON","stringify","data","lines"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;iBAE8BC,OAAO,CAAC,cAAD,C;MAA7BC,iB,YAAAA,iB;;AAER,MAAMC,GAAG,GAAG,yDAAZ;AACA,MAAMC,IAAI,GAAG,yDAAb;AAEA,MAAMC,KAAK,8HAAX;AAcA,MAAMC,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,IAAmC,gBAAnC,GAAoDD,YAAY,CAACC,OAAb,CAAqB,YAArB;AADnD,CAAlB;AAIA,MAAMC,WAAW,GAAGR,iBAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,CAArC;AAEAO,WAAW,CAAC;AAAEL,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,CAAX,CACKK,KADL,CACWC,KAAK,IAAIA,KADpB,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACdN,EAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACI,IAAT,CAAcC,KAA7B,CAA9B;AACH,CAJL","sourcesContent":["import React from \"react\";\n\nconst { createApolloFetch } = require('apollo-fetch');\n\nconst uri = 'https://api.staging.entur.io/journey-planner/v2/graphql';\nconst uri2 = 'https://api.staging.entur.io/journey-planner/v2/graphql';\n\nconst query = `\n  {\n  lines(authorities:\"GOA:Authority:GOA\") {\n  \tid\n    name\n    quays {\n      id\n      name\n    }\n  }\n}\n`;\n\n\nconst variables = {\n    authorities: localStorage.getItem(\"loggedInAs\")+':Authority:GOA'+localStorage.getItem(\"loggedInAs\"),\n};\n\nconst apolloFetch = createApolloFetch({ uri });\n\napolloFetch({ query, variables })\n    .catch(error => error)\n    .then(response => {\n        localStorage.setItem('lines', JSON.stringify(response.data.lines));\n    });"]},"metadata":{},"sourceType":"module"}