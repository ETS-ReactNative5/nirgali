{"version":3,"sources":["components/overview.js","api/api.js","components/register.js","components/edit.js","authenticate/token.js","authenticate/auth.js","components/navbar.js","index.js","img/red.png","img/green.png","img/entur_logo.jpg","img/background.jpg"],"names":["Overview","state","date","handleClick","_this","props","history","push","returnRedOrGreenIcon","param","Date","parse","ValidityPeriod","EndTime","Progress","react_default","a","createElement","src","red","id","alt","height","width","green","getType","Object","keys","getDate","datePart","match","year","substring","month","day","hour","minutes","concat","edit","event","target","value","getMonth","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","this","setState","_this2","className","lib","variant","onClick","type","data","PtSituationElement","SuperResponsiveTable","bgcolor","scope","map","item","index","key","SituationNumber","split","pop","Summary","ReportType","StartTime","Affects","React","Component","createApolloFetch","require","URI","fetchGet","method","headers","accept","ET-Client-Name","api","getAuthorities","uri","ET-client-Name","apolloFetch","query","catch","error","then","response","organisationID","fetch","getLines","authorities","getDepartures","line","Register","dateShort","newAffect","searchBar","stops","departures","undefined","chosenLine","departure","checkbox","checkbox2","multiples","dateFromTo","message","submit","departureSok","counter","from","getIssuesCount","firebase","collection","organization","doc","set","createNewIssue","CreationTime","ParticipantRef","Source","SourceType","Severity","_attributes","xml:lang","_text","oppsummering","Description","beskrivelse","Advice","forslag","createStops","stop","lines","quays","createNewLine","Networks","AffectedNetwork","AffectedLine","LineRef","createAffectedRoute","StopPoints","AffectedStopPoint","multipleStops","StopPointRef","createAffectedRouteLine","createNewSpecifiedStops","Routes","AffectedRoute","createAffectedDeparture","VehicleJourneys","AffectedVehicleJourney","FramedVehicleJourneyRef","DataFrameRef","document","getElementById","DatedVehicleJourneyRef","Route","createNewSpecifiedStopsDeparture","handleSubmit","newIssue","to","replace","tmp","handleChangeType","handleChangeLine","handleChangeDeparture","handleChangeSpecifiedStops","handleChangeSpecifyStopsLine","checked","handleChangeSpecifyStopsDeparture","handleChangeSpecifiedStopsDeparture","callApiDeparture","orgID","serviceJourneys","updateFromDate","returnMappedObjects","list","stopPlace","label","name","returnSpecifiedLines","find","returnSpecifiedLinesDeparture","estimatedCalls","quay","returnServiceJourney","aimedDepartureTime","sort","b","that","get","querySnapshot","parseInt","docs","onSubmit","autoComplete","defaultValue","onChange","disabled","react_select_browser_esm","placeholder","options","htmlFor","isMulti","build_default","enableTime","minDate","dateFormat","data-enable-time","onClose","time_24hr","maxLength","required","Edit","params","deviationId","reportType","setProgressToClosed","docID","checkStatus","returnValue","issue","handleChangeDate","token","save","localStorage","setItem","getItem","getBearer","auth","kc","Keycloak","checkLoginIframe","init","success","authenticated","setInterval","updateToken","logout","userInfo","logoutUrl","createLogoutUrl","familyName","idTokenParsed","family_name","givenName","given_name","email","username","preferred_username","roles","tokenParsed","renderIndex","login","NavBar","handleChange","onSelectOrganization","returnOptions","selectValues","i","user","length","href","logo","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","organizations","organizationsName","selectedOrganization","updateOrganization","selectedOrg","setDeviationsAndLines","setOrganizations","setRoles","orgName","window","alert","location","includes","j","_this3","console","log","_this4","react_router_dom","Background","react_router","path","render","navbar","assign","exact","overview","register","ReactDOM","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.13870cf0.chunk.js","sourcesContent":["import React from \"react\";\nimport red from \"../img/red.png\";\nimport green from \"../img/green.png\"\nimport { Button } from '@entur/component-library';\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\"\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\"\n\n\nclass Overview extends React.Component {\n\n    state = { date: '' };\n\n    componentDidMount() {\n        let date = new Date().getDate(); if(date < 10){ date = \"0\"+date }\n        let month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        let year = new Date().getFullYear();\n        let hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        let min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        let sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n\n        this.setState({ date: `${year}-${month}-${date}T${hours}:${min}:${sec}+02:00`, });\n    }\n\n    handleClick = () => {\n        this.props.history.push('/register');\n    };\n\n    returnRedOrGreenIcon = (param) => {\n        if(Date.parse(param.ValidityPeriod.EndTime) < Date.parse(this.state.date) || param.Progress === 'closed'){\n            return <img src={red} id='not_active' alt=\"\" height=\"30\" width=\"30\" />\n        }else {\n            return <img src={green} id='active' alt=\"\" height=\"30\" width=\"30\"/>\n        }\n    };\n\n    getType = (param) => {\n        if(param != null){\n            if(Object.keys(param)[0] === \"Networks\"){ return \"Linje\" }\n            if(Object.keys(param)[0] === \"StopPoints\"){ return \"Stopp\" }\n            if(Object.keys(param)[0] === \"VehicleJourneys\"){ return \"Avgang\" }\n            else{ return \"Error\" }\n        }else{ return \"Error\" }\n    };\n\n    getDate = (param) => {\n        if(param){\n            var datePart = param.match(/\\d+/g),\n                year = datePart[0].substring(2),\n                month = datePart[1], day = datePart[2],\n                hour = datePart[3], minutes = datePart[4];\n            return `${hour}:${minutes}  ${day}.${month}.${year}`;\n        }else{\n            return 'Ikke oppgitt'\n        }\n    };\n\n    edit = (event) => {\n        this.props.history.push(`/edit/${event.target.value}`);\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"register_box\" id=\"overview\" >\n                    <h2 className=\"text-center text-white\">Oversikt</h2>\n                    <br></br>\n                    <div>\n                        <Button variant=\"secondary\" onClick={this.handleClick} type=\"button\" className=\"btn btn-warning btn-lg btn-block\">Ny melding</Button>\n                    </div>\n                    <br></br>\n                    {(this.props.data.PtSituationElement) &&\n                    <div className=\"table-responsive-md\">\n                        <Table id=\"dtOrderExample\"\n                               className=\"table table-striped table-light table-borderless table-hover\"\n                               bgcolor=\"#000000\">\n                            <Thead className=\"bg-primary\">\n                            <Tr bgcolor=\"#babbcf\">\n                                <Th scope=\"col\"><b>Status</b></Th>\n                                <Th scope=\"col\"><b>#</b></Th>\n                                <Th scope=\"col\"><b>Oppsommering</b></Th>\n                                <Th scope=\"col\"><b>Rapporttype</b></Th>\n                                <Th scope=\"col\"><b>Fra-dato</b></Th>\n                                <Th scope=\"col\"><b>Til-dato</b></Th>\n                                <Th scope=\"col\"><b>Type</b></Th>\n                                <Th scope=\"col\"></Th>\n                            </Tr>\n                            </Thead>\n                            <Tbody>\n                            {this.props.data.PtSituationElement.map((item, index) => (\n                                <Tr key={item.SituationNumber}>\n                                    <Td className='Status'>{this.returnRedOrGreenIcon(item)}</Td>\n                                    <Td className='#'>{item.SituationNumber.split(\":\").pop()}</Td>\n                                    <Td className='Melding' width=\"25%\">{item.Summary['_text']}</Td>\n                                    <Td className='ReportType'>{item.ReportType}</Td>\n                                    <Td className='Fra-dato'>{this.getDate(item.ValidityPeriod.StartTime)}</Td>\n                                    <Td className='Til-dato'>{this.getDate(item.ValidityPeriod.EndTime)}</Td>\n                                    <Td className='Type'>{this.getType(item.Affects)}</Td>\n                                    <Td>\n                                        <Button variant=\"secondary\" value={index}\n                                                onClick={this.edit}>Endre\n                                        </Button>\n                                    </Td>\n                                </Tr>\n                            ))}\n                            </Tbody>\n                        </Table>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Overview;\n","const { createApolloFetch } = require('apollo-fetch');\n\nconst URI = 'https://api.dev.entur.io/journey-planner/v2/graphql';\n\nconst getAuthorities = () => {\n    const apolloFetch = createApolloFetch({ uri: URI, headers: { 'ET-client-Name': 'entur - deviation-messages' } });\n    const query = `\n      {\n        authorities{\n          id\n          name\n        }\n      } `;\n\n    return apolloFetch({ query })\n      .catch(error => error)\n      .then(response => response);\n};\n\nconst getLines = (authorities) => {\n    const apolloFetch = createApolloFetch({ uri: URI, headers: { 'ET-client-Name': 'entur - deviation-messages' } });\n    const query = `\n      { \n        lines(authorities: \"${authorities}\") { \n          name \n          id\n          quays {\n            id\n            name\n            stopPlace{\n              id\n            }\n          }\n        } \n      } `;\n\n    return apolloFetch({ query })\n      .catch(error => error)\n      .then(response => response);\n};\n\nconst getDepartures = (authorities, line, date) => {\n    const apolloFetch = createApolloFetch({ uri: URI, headers: { 'ET-client-Name': 'entur - deviation-messages' } });\n    const query = `\n      { \n        serviceJourneys(authorities: \"${authorities}\", lines: \"${line}\", activeDates: \"${date}\") { \n          id\n          estimatedCalls(date:\"${date}\") {\n            aimedDepartureTime\n            quay {\n              name\n              stopPlace {\n                id\n              }\n            }\n          }\n        }\n      }`;\n\n    return apolloFetch({ query })\n      .catch(error => error)\n      .then(response => response);\n};\n\nconst fetchGet = {\n    method: 'GET',\n    headers: {\n        'accept': 'application/json',\n        'ET-Client-Name': 'entur - deviation-messages'\n    }\n};\n\nconst organisationID = (id) => {\n    fetch('https://api.staging.entur.io/organisations/v1/register/organisations/'+id, fetchGet)\n        .catch (error => error)\n        .then(response => response)\n};\n\nexport default { getAuthorities, organisationID, getLines, getDepartures }\n","import React from \"react\";\nimport Select from 'react-select';\nimport api from \"../api/api\";\nimport 'flatpickr/dist/themes/material_blue.css';\nimport Flatpickr from 'react-flatpickr';\nimport { Button } from '@entur/component-library';\n\nclass Register extends React.Component {\n\n    state = {\n            date: '',\n            dateShort: '',\n            newAffect: '',\n            searchBar: '',\n            stops: '',\n            departures: '',\n            type: undefined,\n            chosenLine: undefined,\n            departure: undefined,\n            checkbox: undefined,\n            checkbox2: undefined,\n            multiples: undefined,\n            dateFromTo: undefined,\n            message: undefined,\n            submit: undefined,\n            departureSok: undefined,\n            counter: 0,\n            from: undefined,\n        };\n\n    componentDidMount() {\n        var that = this;\n        var date = new Date().getDate(); if(date < 10){ date = \"0\"+date }\n        var month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        var year = new Date().getFullYear();\n        var hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        var min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        var sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n        this.props.firebase.collection(this.props.organization).get().then((querySnapshot) => {\n            that.setState({\n                date: `${year}-${month}-${date}T${hours}:${min}:${sec}.000+02:00`,\n                dateShort: `${year}-${month}-${date}T${hours}:${min}`,\n                counter: parseInt(querySnapshot.docs[1].data().counter) + 1\n            });\n        })\n    }\n\n    getIssuesCount = () => {\n        this.props.firebase.collection(this.props.organization).doc(\"SituationNumber\").set({counter: this.state.counter});\n        return this.state.counter;\n    };\n\n    createNewIssue = event => {\n        return {\n            CreationTime: this.state.date,\n            ParticipantRef: this.props.organization.split(\":\")[0],\n            SituationNumber: this.props.organization.split(\":\")[0] + \":SituationNumber:\" + this.getIssuesCount(),\n            Source: {\n                SourceType: \"directReport\",\n            },\n            Progress: \"open\",\n            ValidityPeriod: null,\n            Severity: 'normal',\n            ReportType: event.target.ReportType.value,\n            Summary: {\n                _attributes: {\n                    'xml:lang': 'NO'\n                },\n                _text: event.target.oppsummering.value,\n            },\n            Description: {\n                _attributes: {\n                    'xml:lang': 'NO'\n                },\n                _text: event.target.beskrivelse.value,\n            },\n            Advice: {\n                _attributes: {\n                    'xml:lang': 'NO'\n                },\n                _text: event.target.forslag.value,\n            },\n            Affects: [],\n        };\n    };\n\n    createStops = () => {\n        let stop = [];\n        this.props.lines.map(item => (\n            stop = stop.concat(item.quays)\n        ));\n\n        this.setState({\n            stops: stop\n        })\n    };\n\n    createNewLine = () => {\n        return {\n            Networks: { AffectedNetwork: { AffectedLine: { LineRef: this.state.chosenLine } } }\n        }\n    };\n\n    createAffectedRoute = () => {\n        return { StopPoints: { AffectedStopPoint: this.state.multipleStops.map(item => (\n                    { StopPointRef: item.value }\n                ))} }\n    };\n\n    createAffectedRouteLine = () => {\n        return this.state.multipleStops.map(item => (\n             { AffectedStopPoint: { StopPointRef: item.value } }\n        ))\n    };\n\n    createNewSpecifiedStops = () => {\n        return {\n            Networks: { AffectedNetwork: { AffectedLine: { LineRef: this.state.chosenLine,\n                        Routes: { AffectedRoute: { StopPoints: this.createAffectedRouteLine() } } } } }\n        }\n    };\n\n    createAffectedDeparture = () => {\n        return {\n            VehicleJourneys: { AffectedVehicleJourney: { FramedVehicleJourneyRef: {\n                DataFrameRef: document.getElementById(\"date\").value, DatedVehicleJourneyRef: this.state.chosenLine }, Route: null } } }\n    };\n\n    createNewSpecifiedStopsDeparture = () => {\n        return {\n            VehicleJourneys: { AffectedVehicleJourney: { FramedVehicleJourneyRef: {\n                DataFrameRef: document.getElementById(\"date\").value, DatedVehicleJourneyRef: this.state.chosenLine },\n                    Route: this.createAffectedRoute() } }\n        }\n    };\n\n    handleClick = () => {\n        this.props.history.push('/');\n    };\n\n    handleSubmit = (event) => {\n\n        const newIssue = this.createNewIssue(event);\n        if(event.target.beskrivelse.value === ''){\n            delete newIssue.Description;\n        }\n\n        if(this.state.type === \"departure\"){\n            newIssue.ValidityPeriod = {\n                StartTime: event.target.date.value+\"T00:00:00+02:00\",\n                EndTime: event.target.date.value+\"T23:59:59+02:00\"\n            }\n        }else{\n            if(event.target.to.value){\n                newIssue.ValidityPeriod = {\n                    StartTime: event.target.from.value.replace(\" \", \"T\")+\":00+02:00\",\n                    EndTime: event.target.to.value.replace(\" \", \"T\")+\":00+02:00\"\n                }\n            }\n            else{\n                newIssue.ValidityPeriod = {\n                    StartTime: event.target.from.value.replace(\" \", \"T\")+\":00+02:00\"}\n            }\n        }\n\n        if(this.state.type === \"line\"){\n            if(this.state.checkbox){\n                const newAffect = this.createNewSpecifiedStops();\n                newIssue.Affects = newAffect;\n            }else{\n                const newAffect = this.createNewLine();\n                newIssue.Affects = newAffect;\n            }\n        }\n        if(this.state.type === \"stop\"){\n            const newAffect = this.createAffectedRoute();\n            newIssue.Affects = newAffect;\n        }\n        if(this.state.type === \"departure\"){\n            if(this.state.checkbox2){\n                const newAffect = this.createNewSpecifiedStopsDeparture();\n                newIssue.Affects = newAffect;\n            }else{\n                const newAffect = this.createAffectedDeparture();\n                newIssue.Affects = newAffect;\n            }\n        }\n        const tmp = this.props.data;\n        tmp.PtSituationElement.push(newIssue);\n        this.props.firebase.collection(this.props.organization).doc('Issues').set( tmp );\n        this.props.history.push('/');\n    };\n\n    handleChangeType = (event) =>{\n        this.createStops();\n        if(this.state.departureSok){\n            this.setState({\n                message: undefined,\n            });\n        }\n        this.setState({\n            type: event.target.value,\n            checkbox: undefined,\n            checkbox2: undefined,\n            chosenLine: undefined,\n            departureSok: undefined,\n            submit: undefined,\n            departure: undefined,\n        });\n        if(event.target.value === 'departure'){\n            this.setState({\n                departure: true,\n                dateFromTo: undefined,\n                message: undefined,\n            })\n        }\n    };\n\n    handleChangeLine = (event) => {\n        if(this.state.type === 'departure'){\n            this.setState({\n                chosenLine: event.value,\n            });\n        }else{\n            this.setState({\n                chosenLine: event.value,\n                dateFromTo: true,\n                message: true,\n                submit: true,\n            });\n        }\n    };\n\n    handleChangeDeparture = (event) => {\n        this.setState({\n            chosenLine: event.value,\n            message: true,\n            submit: true,\n        });\n    };\n\n    handleChangeSpecifiedStops = (event) => {\n        this.setState({\n            multipleStops: event,\n            dateFromTo: true,\n            message: true,\n            submit: true,\n        });\n    };\n\n    handleChangeSpecifyStopsLine = () => {\n        const checkBox = document.getElementById(\"gridCheck\");\n        if (checkBox.checked === true){\n            this.setState({\n                checkbox: true,\n            });\n        }else{\n            this.setState({\n                checkbox: undefined,\n            });\n        }\n    };\n\n    handleChangeSpecifyStopsDeparture = () => {\n        const checkBox = document.getElementById(\"gridCheck2\");\n        if (checkBox.checked === true){\n            this.setState({\n                checkbox2: true,\n            });\n        }else{\n            this.setState({\n                checkbox2: undefined,\n            });\n        }\n    };\n\n    handleChangeSpecifiedStopsDeparture = (event) => {\n        this.setState({ multipleStops: event });\n    };\n\n    callApiDeparture = () => {\n        const date = document.getElementById(\"date\").value;\n        const line = this.state.chosenLine;\n\n        api.getDepartures(this.props.orgID, line, date)\n            .then(response => {\n                this.setState({\n                    departures: response.data.serviceJourneys,\n                    departureSok: true,\n                })\n            });\n    };\n\n    updateFromDate = () => {\n        this.setState({\n            from: document.getElementById(\"from\").value.replace(\" \", \"T\")\n        })\n    };\n\n    returnMappedObjects = (list) => {\n        if(list[0].stopPlace){\n            return list.map(item => (\n              { label: item.name+\" - \"+item.stopPlace.id, value: item.stopPlace.id }\n            ))\n        }else{\n            return list.map(item => (\n              { label: item.name+\" - \"+item.id, value: item.id }\n            ))\n        }\n    };\n\n    returnSpecifiedLines = () => {\n        const tmp = this.props.lines.find(item => (\n            (item.id === this.state.chosenLine)\n        ));\n\n        if(tmp){\n            return this.returnMappedObjects(tmp.quays);\n        }\n        return []\n    };\n\n    returnSpecifiedLinesDeparture = () => {\n        const tmp = this.state.departures.find(item => (\n            (item.id === this.state.chosenLine)\n        ));\n\n        if(tmp){\n            return tmp.estimatedCalls.map(item => (\n                { label: item.quay.name+\" - \"+item.quay.stopPlace.id, value: item.quay.stopPlace.id }\n            ))\n        }\n        return []\n    };\n\n    returnServiceJourney = () => {\n        return this.state.departures.map(item => (\n            { label: item.estimatedCalls[0].aimedDepartureTime.split(\"T\").pop().split(\":00+\")[0]+\n                    \" fra \"+item.estimatedCalls[0].quay.name+\" (\"+item.id+\")\",\n                value: item.id\n            }\n        )).sort((a, b) => (a.label > b.label) ? 1 : -1)\n\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"register_box\" id=\"small\">\n                    <form className=\"register\" onSubmit={this.handleSubmit} autoComplete=\"off\">\n                        <h2 className=\"text-center text-white\">Registrer ny melding</h2>\n                        <br></br>\n                        <div className=\"choose_type\">\n                            <p className=\"text-center text-white\">Velg linje, stopp eller avgang</p>\n                            <select className=\"browser-default custom-select\" defaultValue={\"default\"}\n                                    onChange={this.handleChangeType}>\n                                <option value=\"default\" disabled> </option>\n                                <option value=\"line\">Linje</option>\n                                <option value=\"stop\">Stopp</option>\n                                <option value=\"departure\">Avgang</option>\n                            </select>\n                        </div>\n                        {(this.props.lines) &&\n                        <div className=\"choose_type\">\n                            {((this.state.type === \"line\") || (this.state.type === \"departure\")) &&\n                            <Select placeholder=\"Velg linje\"\n                                    onChange={this.handleChangeLine}\n                                    options={this.returnMappedObjects(this.props.lines)}\n                            />\n                            }\n\n                            {(this.state.type === \"line\") && (this.state.chosenLine) &&\n                            <div className=\"form-check d-flex\">\n                                <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" value=\"stops\"\n                                           onChange={this.handleChangeSpecifyStopsLine}/>\n                                    <p className=\"text-center text-white\">Gjelder avviket for spesifikke stopp?</p>\n                                </label>\n                            </div>\n                            }\n\n                            {(this.state.type === \"line\") && (this.state.chosenLine) && (this.state.checkbox) &&\n                            <div><Select isMulti\n                                         placeholder=\" \"\n                                         onChange={this.handleChangeSpecifiedStops}\n                                         options={this.returnSpecifiedLines()}\n                            /><br></br></div>\n                            }\n\n                            {(this.state.type === \"stop\") && (this.state.stops) &&\n                            <div>\n                                <Select isMulti\n                                        placeholder=\"Velg stopp\"\n                                        onChange={this.handleChangeSpecifiedStops}\n                                        options={this.returnMappedObjects(this.state.stops)}\n                                />\n                                <br></br>\n                            </div>\n                            }\n                        </div>\n                        }\n                        {(this.state.departure) && (this.state.chosenLine) &&\n                        <div>\n                            <br></br>\n                            <p className=\"text-center text-white\">Gyldighetsdato</p>\n                            <Flatpickr id='date'\n                                       name='to'\n                                       className=\"form-control\"\n                                       options={{\n                                           enableTime: false,\n                                           minDate: this.state.dateShort,\n                                           dateFormat: \"Y-m-d\",\n                                       }}\n                            />\n                            <button onClick={this.callApiDeparture} type=\"button\"\n                                    className=\"btn btn-primary btn-lg btn-block\">Søk avganger\n                            </button>\n                        </div>}\n\n                        {(this.state.departureSok) && (this.state.chosenLine) && (this.state.departures) &&\n                        <div className=\"choose_type\">\n                            <br></br>\n                            <p className=\"text-center text-white\">Velg avgang</p>\n                            <Select placeholder=\" \"\n                                    onChange={this.handleChangeDeparture}\n                                    options={this.returnServiceJourney()}\n                            />\n                        </div>}\n\n                        {(this.state.departure) && (this.state.message) &&\n                        <div className=\"form-check d-flex\">\n                            <label className=\"form-check-label\" htmlFor=\"gridCheck2\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck2\" value=\"stops\"\n                                       onChange={this.handleChangeSpecifyStopsDeparture}/>\n                                <p className=\"text-center text-white\">Gjelder avviket for spesifikke stopp?</p>\n                            </label>\n                        </div>\n                        }\n\n                        {(this.state.departure) && (this.state.checkbox2) &&\n                        <div>\n                            <Select isMulti\n                                    placeholder=\" \"\n                                    onChange={this.handleChangeSpecifiedStopsDeparture}\n                                    options={this.returnSpecifiedLinesDeparture()}\n                            />\n                            <br></br>\n                        </div>\n                        }\n\n                        {(this.state.dateFromTo) &&\n                        <div className=\"bd-highlight justify-content-center\">\n                            <p className=\"text-center text-white\">Gyldighetsdato</p>\n                            <div className=\"form-group d-flex\">\n                                <Flatpickr data-enable-time\n                                           id='from'\n                                           value={this.state.dateShort}\n                                           name='from'\n                                           onClose={this.updateFromDate}\n                                           className=\"date-form form-control\"\n                                           options={{\n                                               enableTime: true,\n                                               dateFormat: \"Y-m-d H:i\",\n                                               minDate: this.state.dateShort,\n                                               time_24hr: true\n                                           }}\n                                />\n                                <Flatpickr id='date-to' data-enable-time\n                                           name='to'\n                                           placeholder='Til-dato'\n                                           className=\"date-form form-control\"\n                                           options={{\n                                               enableTime: true,\n                                               dateFormat: \"Y-m-d H:i\",\n                                               minDate: (this.state.from) ? this.state.from : this.state.dateShort,\n                                               time_24hr: true\n                                           }}\n                                />\n                            </div>\n                        </div>\n                        }\n\n                        {(this.state.message) &&\n                        <div>\n                            <div className=\"severity&type\">\n                                <p className=\"text-center text-white\">Rapporttype</p>\n                                <select className=\"form-control\" defaultValue={\"incident\"} name=\"ReportType\">\n                                    <option value=\"incident\">Incident</option>\n                                    <option value=\"general\">General</option>\n                                </select>\n                                <br></br>\n                            </div>\n                            <div className=\"message\">\n                                <p className=\"text-center text-white\">Melding</p>\n                                <input type=\"String\" name=\"oppsummering\" className=\"form-control\"\n                                       placeholder=\"Kort, beskrivende avvikstekst\" maxLength=\"160\"\n                                       required/>\n                                <input type=\"String\" name=\"beskrivelse\" className=\"form-control\"\n                                       placeholder=\"Eventuell utdypende detaljer om avviket (ikke påkrevd)\"/>\n                                <input type=\"String\" name=\"forslag\" className=\"form-control\"\n                                       placeholder=\"Beskrivelse om hva kunden skal/kan gjøre (ikke påkrevd)\"/>\n                            </div>\n                        </div>\n                        }\n                        <br></br>\n                        <div className=\"submit justify-content-center\">\n                            {(this.state.submit) &&\n                            <Button variant=\"success\" type=\"submit\" className=\"btn btn-primary btn-lg btn-block\">Registrer</Button>}\n                            <Button variant=\"secondary\" onClick={this.handleClick} type=\"submit\"\n                                    className=\"btn btn-warning btn-lg btn-block\">Tilbake\n                            </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;\n","import React from \"react\";\nimport Flatpickr from \"react-flatpickr\";\nimport { Button } from '@entur/component-library';\n\nclass Edit extends React.Component {\n\n    state = {\n        id: this.props.match.params.deviationId,\n        date: '',\n        dateShort: '',\n    };\n\n    componentDidMount() {\n        let date = new Date().getDate(); if(date < 10){ date = \"0\"+date }\n        let month = new Date().getMonth() + 1; if(month < 10){ month = \"0\"+month }\n        let year = new Date().getFullYear();\n        let hours = new Date().getHours(); if(hours < 10){ hours = \"0\"+hours }\n        let min = new Date().getMinutes(); if(min < 10){ min = \"0\"+min }\n        let sec = new Date().getSeconds(); if(sec < 10){ sec = \"0\"+sec }\n\n        this.setState({\n            date: year + '-' + month + '-' + date +'T' + hours + ':' + min + ':' + sec+\"+02:00\",\n            dateShort: year + '-' + month + '-' + date +'T' + hours + ':' + min,\n        });\n    }\n\n    handleSubmit = (event) => {\n        this.props.data.PtSituationElement[(parseInt(this.state.id))].Progress = 'open';\n        this.props.data.PtSituationElement[(parseInt(this.state.id))].Summary['_text'] = event.target.oppsummering.value;\n        if(event.target.beskrivelse.value !== ''){\n            this.props.data.PtSituationElement[(parseInt(this.state.id))]['Description'] = {\n                _attributes: { 'xml:lang': 'NO' },\n                _text: event.target.beskrivelse.value,\n            }\n        }else{\n            if(this.props.data.PtSituationElement[(parseInt(this.state.id))].Description){\n                delete this.props.data.PtSituationElement[(parseInt(this.state.id))].Description;\n            }\n        }\n        if(event.target.forslag.value !== ''){\n            this.props.data.PtSituationElement[(parseInt(this.state.id))]['Advice'] = {\n                _attributes: { 'xml:lang': 'NO' },\n                _text: event.target.forslag.value,\n            }\n        }else{\n            if(this.props.data.PtSituationElement[(parseInt(this.state.id))].Advice){\n                delete this.props.data.PtSituationElement[(parseInt(this.state.id))].Advice;\n            }\n        }\n        if(event.target.from.value){\n            this.props.data.PtSituationElement[(parseInt(this.state.id))].ValidityPeriod.StartTime = event.target.from.value.replace(\" \", \"T\")+\":00+02:00\";\n        }\n        if(event.target.to.value){\n            this.props.data.PtSituationElement[(parseInt(this.state.id))].ValidityPeriod.EndTime = event.target.to.value.replace(\" \", \"T\")+\":00+02:00\";\n        }\n        this.props.data.PtSituationElement[(parseInt(this.state.id))].ReportType = event.target.reportType.value;\n        this.props.firebase.collection(this.props.organization).doc('Issues').set( this.props.data );\n        this.props.history.push('/');\n    };\n\n    handleClick = () => {\n        this.props.history.push('/');\n    };\n\n    setProgressToClosed = () => {\n        this.props.data.PtSituationElement[(parseInt(this.state.id))].Progress = 'closed';\n        this.props.firebase.collection(this.props.organization).doc(this.props.docID).set( this.props.data );\n        this.props.history.push('/');\n    };\n\n    checkStatus = (param) => {\n        if(param === 'open'){\n            return <div className=\"submit justify-content-center\">\n                <div className=\"form-group d-flex\">\n                    <Button variant=\"negative\" width=\"fluid\" onClick={this.setProgressToClosed} className=\"p-2 btn \">Deaktiver</Button>\n                    <Button variant=\"secondary\" width=\"fluid\" type=\"submit\" className=\"p-2 btn \">Endre</Button>\n                </div>\n                <Button variant=\"secondary\" onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</Button></div>\n        }else{\n            return <div className=\"submit justify-content-center\">\n                <Button variant=\"success\" className=\"btn btn-success btn-lg btn-block\">Aktiver</Button>\n                <Button variant=\"secondary\" onClick={this.handleClick} type=\"submit\" className=\"btn btn-warning btn-lg btn-block\">Tilbake</Button></div>\n        }\n    };\n\n    returnValue = (type) => {\n        let issue = this.props.data.PtSituationElement[(parseInt(this.state.id))];\n\n        if(type === 'ReportType'){ return issue.ReportType }\n        if(type === 'summary'){ return issue.Summary['_text'] }\n        if(type === 'description'){ if(issue.Description){ return issue.Description['_text'] } else { return '' } }\n        if(type === 'advice'){ if(issue.Advice){ return issue.Advice['_text'] } else { return '' } }\n        if(type === 'from'){ return issue.ValidityPeriod.StartTime.replace(\":00+02:00\", \"\") }\n        if(type === 'to'){\n            if(issue.ValidityPeriod.EndTime){\n                return issue.ValidityPeriod.EndTime.replace(\":00+02:00\", \"\")\n            }else{\n                return 'Til-dato'\n            }\n        }\n        return 'error'\n    };\n\n    render() {\n        return (\n            <div>\n                <div className=\"register_box\" id=\"overview\" >\n                    <form className=\"register\" onSubmit={this.handleSubmit} autoComplete=\"off\">\n                        <br></br>\n                        <h2 className=\"text-center text-white\">Endre avvik</h2>\n                        <br></br>\n                        <div className=\"severity\">\n                            <p className=\"text-center text-white\">Rapporttype</p>\n                            <select className=\"form-control\" id='cssmenu' defaultValue={this.returnValue(\"ReportType\")} name=\"reportType\">\n                                <option value=\"general\">General</option>\n                                <option value=\"incident\">Incident</option>\n                            </select>\n                            <br></br>\n                        </div>\n                        <p id=\"message\" className=\"text-center text-white\" >Melding</p>\n                        <input type=\"String\" name=\"oppsummering\" className=\"form-control\"\n                               defaultValue={this.returnValue('summary')} maxLength=\"160\"\n                                required/>\n                        <input type=\"String\" name=\"beskrivelse\" className=\"form-control\"\n                               defaultValue={this.returnValue('description')}/>\n                        <input type=\"String\" name=\"forslag\" className=\"form-control\"\n                               defaultValue={this.returnValue('advice')}/>\n                        <br></br>\n                        <p className=\"text-center text-white\">Gyldighetsdato</p>\n                        <div className=\"form-group d-flex\">\n                            <Flatpickr data-enable-time\n                                       value={this.returnValue('from')}\n                                       name='from'\n                                       className=\"date-form form-control\"\n                                       options={ {\n                                           enableTime: true,\n                                           dateFormat: \"Y-m-d H:i\",\n                                           time_24hr: true}}\n                            />\n                            <Flatpickr onChange={this.handleChangeDate}\n                                       id='date-to' data-enable-time\n                                       placeholder='Til-dato'\n                                       value={this.returnValue('to')}\n                                       name='to'\n                                       className=\"date-form form-control\"\n                                       options={ {\n                                           enableTime: true,\n                                           minDate: this.state.dateShort,\n                                           dateFormat: \"Y-m-d H:i\",\n                                           time_24hr: true}}\n                            />\n                        </div>\n                        <br></br>\n                        {this.checkStatus(this.props.data.PtSituationElement[(parseInt(this.state.id))].Progress)}\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Edit;\n","const token = {};\n\nexport const TOKEN_ID = 'OT::jwt';\n\ntoken.save = token => {\n    localStorage.setItem(TOKEN_ID, token);\n};\n\ntoken.get = () => {\n    return localStorage.getItem(TOKEN_ID);\n};\n\ntoken.getBearer = () => {\n    return `Bearer ${token.get()}`;\n};\n\nexport default token;\n\n\n\n","import Keycloak from 'keycloak-js';\nimport token from './token';\nimport renderIndex from '../index'\n\n// Minimum number of seconds left of token before a refresh is needed\nconst minValiditySeconds = 60;\n\n// How often should lib check for valid token\nconst refreshRateMs = 10000;\n\nconst initAuth = () => {\n    const kc = new Keycloak('/key.json');\n    const options = { checkLoginIframe: false };\n    kc.init(options).success(authenticated => {\n        if (authenticated) {\n            token.save(kc.token);\n            setInterval(() => {\n                kc.updateToken(minValiditySeconds).error(() => kc.logout());\n                token.save(kc.token);\n            }, refreshRateMs);\n            const userInfo = {\n                logoutUrl: kc.createLogoutUrl(options),\n                familyName: kc.idTokenParsed.family_name,\n                givenName: kc.idTokenParsed.given_name,\n                email: kc.idTokenParsed.email,\n                username: kc.idTokenParsed.preferred_username,\n                roles: kc.tokenParsed.roles,\n            };\n            renderIndex(userInfo);\n        } else {\n            kc.login();\n        }\n    });\n};\n\nexport default { initAuth }\n","import React from \"react\";\nimport logo from \"../img/entur_logo.jpg\";\nimport Select from \"react-select\";\n\nclass NavBar extends React.Component {\n\n    handleChange = (event) => {\n        this.props.onSelectOrganization(event.value);\n        this.props.history.push('/');\n    };\n\n    returnOptions = () => {\n        let selectValues = [];\n        for (let i = 0; i < this.props.user.length; i++) {\n            selectValues.push({ label: this.props.name[i], value: this.props.user[i] })\n        }\n        return selectValues;\n    };\n\n    render() {\n        return (\n            <nav className=\"navBar\">\n                <div className=\"padding\">\n                    <a href=\"/\"><img src={logo} width={126} height={54} alt=\"Entur\" /></a>\n                    <div className='select-organization'>\n                        <Select placeholder={this.props.name[0]}\n                                onChange={this.handleChange}\n                                options={this.returnOptions()}\n                        />\n                    </div>\n                    <div className='logout'>\n                        <a href={this.props.logout}><h6 className=\"text-center text-white\">LOGG UT</h6></a>\n                    </div>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\nimport Overview from \"./components/overview\";\nimport Register from './components/register';\nimport Edit from './components/edit';\nimport auth from './authenticate/auth';\nimport api from \"./api/api\";\nimport NavBar from \"./components/navbar\";\nimport Background from \"./img/background.jpg\";\n\nvar config = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_TMDB_API_KEY\n};\n\nconst firebase = require(\"firebase/app\");\nrequire(\"firebase/firestore\");\n\nfirebase.initializeApp(config);\nvar db = firebase.firestore();\n\nclass App extends React.Component {\n    state = {\n        data: '',\n        organizations: [],\n        organizationsName: [],\n        selectedOrganization: '',\n        lines: '',\n        id: '',\n    };\n\n    componentDidMount() {\n        this.setOrganizations();\n    }\n\n    updateOrganization = (selectedOrg) => {\n        this.setState({\n            selectedOrganization: selectedOrg,\n        },\n          () => this.setDeviationsAndLines(selectedOrg));\n    };\n\n    setOrganizations() {\n        let roles = this.props.userInfo.roles;\n        let setRoles = [];\n        let orgName = [];\n        if(!roles){\n            window.alert(\"You are not assigned to a company\");\n            window.location.href = this.props.userInfo.logoutUrl;\n        }\n        for (let i = 0; i < roles.length; i++) {\n            if(roles[i].includes('editSX')) {\n                setRoles.push(roles[i].split(\"\\\"\")[7]);\n            }\n        }\n        api.getAuthorities()\n          .then(response => {\n              const authorities = response.data.authorities;\n              for (let i = 0; i < setRoles.length; i++) {\n                  for (let j = 0; j < authorities.length; j++) {\n                      if(authorities[j].id.includes(setRoles[i])){\n                          setRoles[i] = authorities[j].id;\n                          orgName[i] = authorities[j].name;\n                      }\n                  }\n              }\n              this.setState(\n                { organizations: setRoles, organizationsName: orgName, selectedOrganization: setRoles[0] },\n                ()  => this.setDeviationsAndLines(this.state.organizations[0]));\n          });\n    }\n\n    setDeviationsAndLines(selectedOrganization) {\n\n        db.collection(selectedOrganization).get().then((querySnapshot) => {\n            for (let i = 0; i < querySnapshot.docs.length; i++) {\n                if(querySnapshot.docs[i].id === 'Issues'){\n                    if(querySnapshot.docs[i].data().PtSituationElement){\n                        this.setState({\n                            data: querySnapshot.docs[i].data(),\n                            id: querySnapshot.docs[i].id,\n                        });\n                    }else{\n                        this.setState({\n                            data: {PtSituationElement: []},\n                            id: querySnapshot.docs[i].id,\n                        })\n                    }\n                }\n            };\n        });\n\n        api.getLines(selectedOrganization)\n          .then(response => {\n              console.log(response.data);\n              if(response.data){\n                  this.setState({\n                      lines: response.data.lines\n                  })\n              }else{\n                  console.log(\"Could not find any lines for this organization\");\n              }\n          })\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <img id=\"background\" src={ Background } alt=\"\" />\n\n                    <Route path=\"/\"\n                           render={props => <NavBar {...props}\n                                                    NavBar onSelectOrganization={this.updateOrganization}\n                                                    user={this.state.organizations}\n                                                    name={this.state.organizationsName}\n                                                    logout={this.props.userInfo.logoutUrl} />} />\n                    <Route exact path=\"/\"\n                           render={props => <Overview {...props}\n                                                      firebase={db}\n                                                      data={this.state.data} />} />\n                    <Route path=\"/edit/:deviationId?\"\n                           render={props => <Edit {...props}\n                                                  data={this.state.data}\n                                                  firebase={db}\n                                                  docID={this.state.id}\n                                                  organization={this.state.selectedOrganization} />} />\n                    <Route path=\"/register\"\n                           render={props => <Register {...props}\n                                                      data={this.state.data}\n                                                      firebase={db}\n                                                      docID={this.state.id}\n                                                      lines={this.state.lines}\n                                                      organization={this.state.selectedOrganization} />} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nconst renderIndex = (userInfo) => {\n    ReactDOM.render(\n        <App userInfo={userInfo} />,\n        document.getElementById('root')\n    );\n};\n\nauth.initAuth();\n\nexport default renderIndex;\n","module.exports = __webpack_public_path__ + \"static/media/red.9980dfce.png\";","module.exports = __webpack_public_path__ + \"static/media/green.fed131a5.png\";","module.exports = __webpack_public_path__ + \"static/media/entur_logo.ed5eebce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.49ed55b2.jpg\";"],"sourceRoot":""}